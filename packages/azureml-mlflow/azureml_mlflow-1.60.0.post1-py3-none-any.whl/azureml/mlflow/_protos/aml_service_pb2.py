# ---------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# ---------------------------------------------------------

import google.protobuf
from packaging.version import Version
if Version(google.protobuf.__version__).major >= 5:
  # -*- coding: utf-8 -*-
  # Generated by the protocol buffer compiler.  DO NOT EDIT!
  # source: aml_service.proto
  # Protobuf Python Version: 5.26.0
  """Generated protocol buffer code."""
  from google.protobuf import descriptor as _descriptor
  from google.protobuf import descriptor_pool as _descriptor_pool
  from google.protobuf import symbol_database as _symbol_database
  from google.protobuf.internal import builder as _builder
  # @@protoc_insertion_point(imports)

  _sym_db = _symbol_database.Default()


  # from .scalapb import scalapb_pb2 as scalapb_dot_scalapb__pb2
  # from . import databricks_pb2 as databricks__pb2
  # from . import service_pb2 as service__pb2


  DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11\x61ml_service.proto\x12\x06mlflow\x1a\x15scalapb/scalapb.proto\x1a\x10\x64\x61tabricks.proto\x1a\rservice.proto\"\xb3\x01\n\x10GetRunDataStatus\x12\x16\n\x06run_id\x18\x01 \x02(\tR\x06run_id\x12,\n\x11\x62\x61tch_tracking_id\x18\x02 \x02(\tR\x11\x62\x61tch_tracking_id\x1a,\n\x08Response\x12 \n\x0bis_complete\x18\x01 \x01(\x08R\x0bis_complete:+\xe2?(\n&com.databricks.rpc.RPC[$this.Response]\"\xd1\x01\n\rLogBatchAsync\x12\x0e\n\x06run_id\x18\x01 \x01(\t\x12\x1f\n\x07metrics\x18\x02 \x03(\x0b\x32\x0e.mlflow.Metric\x12\x1d\n\x06params\x18\x03 \x03(\x0b\x32\r.mlflow.Param\x12\x1c\n\x04tags\x18\x04 \x03(\x0b\x32\x0e.mlflow.RunTag\x1a%\n\x08Response\x12\x19\n\x11\x62\x61tch_tracking_id\x18\x01 \x01(\t:+\xe2?(\n&com.databricks.rpc.RPC[$this.Response]2\xce\x02\n\x10\x41MLMlflowService\x12\xa3\x01\n\x10getRunDataStatus\x12\x18.mlflow.GetRunDataStatus\x1a!.mlflow.GetRunDataStatus.Response\"R\xf2\x86\x19N\n5\n\x03GET\x12(/preview/mlflow/runs/get-run-data-status\x1a\x04\x08\x02\x10\x00\x10\x01*\x13Get run data status\x12\x93\x01\n\rlogBatchAsync\x12\x15.mlflow.LogBatchAsync\x1a\x1e.mlflow.LogBatchAsync.Response\"K\xf2\x86\x19G\n2\n\x04POST\x12$/preview/mlflow/runs/log-batch-async\x1a\x04\x08\x02\x10\x00\x10\x01*\x0fLog Batch AsyncB\x1e\n\x14org.mlflow.api.proto\x90\x01\x01\xe2?\x02\x10\x01')

  _globals = globals()
  _builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
  _builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'aml_service_pb2', _globals)
  if not _descriptor._USE_C_DESCRIPTORS:
    _globals['DESCRIPTOR']._loaded_options = None
    _globals['DESCRIPTOR']._serialized_options = b'\n\024org.mlflow.api.proto\220\001\001\342?\002\020\001'
    _globals['_GETRUNDATASTATUS']._loaded_options = None
    _globals['_GETRUNDATASTATUS']._serialized_options = b'\342?(\n&com.databricks.rpc.RPC[$this.Response]'
    _globals['_LOGBATCHASYNC']._loaded_options = None
    _globals['_LOGBATCHASYNC']._serialized_options = b'\342?(\n&com.databricks.rpc.RPC[$this.Response]'
    _globals['_AMLMLFLOWSERVICE'].methods_by_name['getRunDataStatus']._loaded_options = None
    _globals['_AMLMLFLOWSERVICE'].methods_by_name['getRunDataStatus']._serialized_options = b'\362\206\031N\n5\n\003GET\022(/preview/mlflow/runs/get-run-data-status\032\004\010\002\020\000\020\001*\023Get run data status'
    _globals['_AMLMLFLOWSERVICE'].methods_by_name['logBatchAsync']._loaded_options = None
    _globals['_AMLMLFLOWSERVICE'].methods_by_name['logBatchAsync']._serialized_options = b'\362\206\031G\n2\n\004POST\022$/preview/mlflow/runs/log-batch-async\032\004\010\002\020\000\020\001*\017Log Batch Async'
    _globals['_GETRUNDATASTATUS']._serialized_start=86
    _globals['_GETRUNDATASTATUS']._serialized_end=265
    _globals['_GETRUNDATASTATUS_RESPONSE']._serialized_start=176
    _globals['_GETRUNDATASTATUS_RESPONSE']._serialized_end=220
    _globals['_LOGBATCHASYNC']._serialized_start=268
    _globals['_LOGBATCHASYNC']._serialized_end=477
    _globals['_LOGBATCHASYNC_RESPONSE']._serialized_start=395
    _globals['_LOGBATCHASYNC_RESPONSE']._serialized_end=432
    _globals['_AMLMLFLOWSERVICE']._serialized_start=480
    _globals['_AMLMLFLOWSERVICE']._serialized_end=814
  _builder.BuildServices(DESCRIPTOR, 'aml_service_pb2', _globals)
  # @@protoc_insertion_point(module_scope)

else:
  # -*- coding: utf-8 -*-
  # Generated by the protocol buffer compiler.  DO NOT EDIT!
  # source: aml_service.proto
  """Generated protocol buffer code."""
  from google.protobuf import descriptor as _descriptor
  from google.protobuf import descriptor_pool as _descriptor_pool
  from google.protobuf import message as _message
  from google.protobuf import reflection as _reflection
  from google.protobuf import symbol_database as _symbol_database
  from google.protobuf import service as _service
  from google.protobuf import service_reflection
  # @@protoc_insertion_point(imports)

  _sym_db = _symbol_database.Default()


  # from .scalapb import scalapb_pb2 as scalapb_dot_scalapb__pb2
  # from . import databricks_pb2 as databricks__pb2
  # from . import service_pb2 as service__pb2


  DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11\x61ml_service.proto\x12\x06mlflow\x1a\x15scalapb/scalapb.proto\x1a\x10\x64\x61tabricks.proto\x1a\rservice.proto\"\xb3\x01\n\x10GetRunDataStatus\x12\x16\n\x06run_id\x18\x01 \x02(\tR\x06run_id\x12,\n\x11\x62\x61tch_tracking_id\x18\x02 \x02(\tR\x11\x62\x61tch_tracking_id\x1a,\n\x08Response\x12 \n\x0bis_complete\x18\x01 \x01(\x08R\x0bis_complete:+\xe2?(\n&com.databricks.rpc.RPC[$this.Response]\"\xd1\x01\n\rLogBatchAsync\x12\x0e\n\x06run_id\x18\x01 \x01(\t\x12\x1f\n\x07metrics\x18\x02 \x03(\x0b\x32\x0e.mlflow.Metric\x12\x1d\n\x06params\x18\x03 \x03(\x0b\x32\r.mlflow.Param\x12\x1c\n\x04tags\x18\x04 \x03(\x0b\x32\x0e.mlflow.RunTag\x1a%\n\x08Response\x12\x19\n\x11\x62\x61tch_tracking_id\x18\x01 \x01(\t:+\xe2?(\n&com.databricks.rpc.RPC[$this.Response]2\xce\x02\n\x10\x41MLMlflowService\x12\xa3\x01\n\x10getRunDataStatus\x12\x18.mlflow.GetRunDataStatus\x1a!.mlflow.GetRunDataStatus.Response\"R\xf2\x86\x19N\n5\n\x03GET\x12(/preview/mlflow/runs/get-run-data-status\x1a\x04\x08\x02\x10\x00\x10\x01*\x13Get run data status\x12\x93\x01\n\rlogBatchAsync\x12\x15.mlflow.LogBatchAsync\x1a\x1e.mlflow.LogBatchAsync.Response\"K\xf2\x86\x19G\n2\n\x04POST\x12$/preview/mlflow/runs/log-batch-async\x1a\x04\x08\x02\x10\x00\x10\x01*\x0fLog Batch AsyncB\x1e\n\x14org.mlflow.api.proto\x90\x01\x01\xe2?\x02\x10\x01')



  _GETRUNDATASTATUS = DESCRIPTOR.message_types_by_name['GetRunDataStatus']
  _GETRUNDATASTATUS_RESPONSE = _GETRUNDATASTATUS.nested_types_by_name['Response']
  _LOGBATCHASYNC = DESCRIPTOR.message_types_by_name['LogBatchAsync']
  _LOGBATCHASYNC_RESPONSE = _LOGBATCHASYNC.nested_types_by_name['Response']
  GetRunDataStatus = _reflection.GeneratedProtocolMessageType('GetRunDataStatus', (_message.Message,), {

    'Response' : _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
      'DESCRIPTOR' : _GETRUNDATASTATUS_RESPONSE,
      '__module__' : 'aml_service_pb2'
      # @@protoc_insertion_point(class_scope:mlflow.GetRunDataStatus.Response)
      })
    ,
    'DESCRIPTOR' : _GETRUNDATASTATUS,
    '__module__' : 'aml_service_pb2'
    # @@protoc_insertion_point(class_scope:mlflow.GetRunDataStatus)
    })
  _sym_db.RegisterMessage(GetRunDataStatus)
  _sym_db.RegisterMessage(GetRunDataStatus.Response)

  LogBatchAsync = _reflection.GeneratedProtocolMessageType('LogBatchAsync', (_message.Message,), {

    'Response' : _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
      'DESCRIPTOR' : _LOGBATCHASYNC_RESPONSE,
      '__module__' : 'aml_service_pb2'
      # @@protoc_insertion_point(class_scope:mlflow.LogBatchAsync.Response)
      })
    ,
    'DESCRIPTOR' : _LOGBATCHASYNC,
    '__module__' : 'aml_service_pb2'
    # @@protoc_insertion_point(class_scope:mlflow.LogBatchAsync)
    })
  _sym_db.RegisterMessage(LogBatchAsync)
  _sym_db.RegisterMessage(LogBatchAsync.Response)

  _AMLMLFLOWSERVICE = DESCRIPTOR.services_by_name['AMLMlflowService']
  if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b'\n\024org.mlflow.api.proto\220\001\001\342?\002\020\001'
    _GETRUNDATASTATUS._options = None
    _GETRUNDATASTATUS._serialized_options = b'\342?(\n&com.databricks.rpc.RPC[$this.Response]'
    _LOGBATCHASYNC._options = None
    _LOGBATCHASYNC._serialized_options = b'\342?(\n&com.databricks.rpc.RPC[$this.Response]'
    _AMLMLFLOWSERVICE.methods_by_name['getRunDataStatus']._options = None
    _AMLMLFLOWSERVICE.methods_by_name['getRunDataStatus']._serialized_options = b'\362\206\031N\n5\n\003GET\022(/preview/mlflow/runs/get-run-data-status\032\004\010\002\020\000\020\001*\023Get run data status'
    _AMLMLFLOWSERVICE.methods_by_name['logBatchAsync']._options = None
    _AMLMLFLOWSERVICE.methods_by_name['logBatchAsync']._serialized_options = b'\362\206\031G\n2\n\004POST\022$/preview/mlflow/runs/log-batch-async\032\004\010\002\020\000\020\001*\017Log Batch Async'
    _GETRUNDATASTATUS._serialized_start=86
    _GETRUNDATASTATUS._serialized_end=265
    _GETRUNDATASTATUS_RESPONSE._serialized_start=176
    _GETRUNDATASTATUS_RESPONSE._serialized_end=220
    _LOGBATCHASYNC._serialized_start=268
    _LOGBATCHASYNC._serialized_end=477
    _LOGBATCHASYNC_RESPONSE._serialized_start=395
    _LOGBATCHASYNC_RESPONSE._serialized_end=432
    _AMLMLFLOWSERVICE._serialized_start=480
    _AMLMLFLOWSERVICE._serialized_end=814
  AMLMlflowService = service_reflection.GeneratedServiceType('AMLMlflowService', (_service.Service,), dict(
    DESCRIPTOR = _AMLMLFLOWSERVICE,
    __module__ = 'aml_service_pb2'
    ))

  AMLMlflowService_Stub = service_reflection.GeneratedServiceStubType('AMLMlflowService_Stub', (AMLMlflowService,), dict(
    DESCRIPTOR = _AMLMLFLOWSERVICE,
    __module__ = 'aml_service_pb2'
    ))


  # @@protoc_insertion_point(module_scope)

