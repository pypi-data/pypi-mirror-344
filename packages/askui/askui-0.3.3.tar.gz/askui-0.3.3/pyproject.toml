[project]
name = "askui"
description = "Automate computer tasks in Python"
authors = [
    {name = "askui GmbH", email = "info@askui.com"},
]
dependencies = [
    "grpcio>=1.67.0",
    "grpcio-tools>=1.67.0",
    "pillow>=11.0.0",
    "pydantic>=2.9.2",
    "anthropic>=0.49.0",
    "rich>=13.9.4",
    "pyperclip>=1.9.0",
    "gradio-client>=1.4.3",
    "requests>=2.32.3",
    "Jinja2>=3.1.4",
    "pydantic-settings>=2.7.0",
    "tenacity>=9.0.0",
    "python-dateutil>=2.9.0.post0",
    "openai>=1.61.1",
    "segment-analytics-python>=2.3.4",
    "py-machineid>=0.7.0",
    "httpx>=0.28.1",
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}
dynamic = ["version"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/askui/__init__.py"

[tool.pdm]
distribution = true

[tool.pdm.scripts]
test = "pytest -n auto"
"test:e2e" = "pytest -n auto tests/e2e"
"test:integration" = "pytest -n auto tests/integration"
"test:unit" = "pytest -n auto tests/unit"
sort = "isort ."
format = "black ."
lint = "ruff check ."
checks = {composite = ["sort . -c", "format . --check"]}
fix = {composite = ["sort", "format", "lint"]}
chat = "streamlit run src/askui/chat/__main__.py"

[dependency-groups]
test = [
    "pytest>=8.3.4",
    "isort>=6.0.0",
    "black>=25.1.0",
    "ruff>=0.9.5",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.1",
]
chat = [
    "streamlit>=1.42.0",
]
