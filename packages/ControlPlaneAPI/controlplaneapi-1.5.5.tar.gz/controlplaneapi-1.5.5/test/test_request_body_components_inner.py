# coding: utf-8

"""
    ControlPlaneAPI

    ControlPlaneAPI

    The version of the OpenAPI document: 1.5.5
    Contact: luke.brown@3adesign.co.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ControlPlaneAPI.models.request_body_components_inner import RequestBodyComponentsInner

class TestRequestBodyComponentsInner(unittest.TestCase):
    """RequestBodyComponentsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RequestBodyComponentsInner:
        """Test RequestBodyComponentsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RequestBodyComponentsInner`
        """
        model = RequestBodyComponentsInner()
        if include_optional:
            return RequestBodyComponentsInner(
                id = '',
                label = '',
                config = '',
                io_handles = ControlPlaneAPI.models.request_body_components_inner_io_handles.request_body_components_inner_io_handles(
                    input = [
                        ControlPlaneAPI.models.request_body_components_inner_io_handles_input_inner.request_body_components_inner_io_handles_input_inner(
                            id = '', 
                            label = '', )
                        ], 
                    output = [
                        ControlPlaneAPI.models.request_body_components_inner_io_handles_input_inner.request_body_components_inner_io_handles_input_inner(
                            id = '', 
                            label = '', )
                        ], ),
                custom_environments = [
                    ControlPlaneAPI.models.request_body_components_inner_io_handles_input_inner.request_body_components_inner_io_handles_input_inner(
                        id = '', 
                        label = '', )
                    ]
            )
        else:
            return RequestBodyComponentsInner(
        )
        """

    def testRequestBodyComponentsInner(self):
        """Test RequestBodyComponentsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
