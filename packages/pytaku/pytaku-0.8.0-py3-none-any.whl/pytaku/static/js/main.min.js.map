{
  "version": 3,
  "sources": ["../../js-src/models.js", "../../js-src/utils.js", "../../js-src/layout.js", "../../js-src/routes/authentication.js", "../../js-src/routes/home.js", "../../js-src/routes/follows.js", "../../js-src/routes/search.js", "../../js-src/routes/title.js", "../../js-src/routes/chapter.js", "../../js-src/routes/importer.js", "../../js-src/main.js"],
  "sourcesContent": ["function readCookie(cookieString) {\n  // This is terrible and wrong but it's enough for what we need i.e. just get\n  // the damn token.\n  const result = {};\n  cookieString.split(\";\").forEach((pair) => {\n    const [key, val] = pair.split(\"=\");\n    result[key] = val;\n  });\n  return result;\n}\n\nconst Auth = {\n  username: sessionStorage.getItem(\"username\"),\n  userId: sessionStorage.getItem(\"userId\"),\n  token: readCookie(document.cookie).token || null,\n  isLoggedIn: () => Auth.username !== null && Auth.userId !== null,\n  init: () => {\n    // Already logged in, probably from another tab:\n    if (Auth.isLoggedIn()) {\n      console.log(\"Already logged in\");\n      return Promise.resolve();\n    }\n\n    // No previous login session:\n    if (Auth.token === null) {\n      console.log(\"No saved token found\");\n      return Promise.resolve();\n    }\n\n    // Verify token saved from previous login session:\n    return m\n      .request({\n        method: \"GET\",\n        url: \"/api/verify-token\",\n      })\n      .then((result) => {\n        // Success! Set user info for this session now\n        sessionStorage.setItem(\"username\", result.username);\n        sessionStorage.setItem(\"userId\", result.user_id);\n        Auth.username = result.username;\n        Auth.userId = result.user_id;\n      })\n      .catch((err) => {\n        // If server responded with 401 Unauthorized, clear any local trace of\n        // these invalid credentials.\n        if (err.code == 401) {\n          Auth.clearCredentials();\n        }\n      })\n      .finally(m.redraw);\n  },\n\n  saveLoginResults: ({ userId, username, token, remember }) => {\n    sessionStorage.setItem(\"userId\", userId);\n    sessionStorage.setItem(\"username\", username);\n    Auth.userId = userId;\n    Auth.username = username;\n    Auth.token = token;\n  },\n\n  logout: () => {\n    return Auth.request({ method: \"POST\", url: \"/api/logout\" })\n      .then(Auth.clearCredentials)\n      .catch((err) => {\n        if (err.code == 401) {\n          Auth.clearCredentials();\n        } else {\n          console.log(err);\n        }\n      });\n  },\n\n  clearCredentials: () => {\n    Auth.username = null;\n    Auth.token = null;\n    Auth.userId = null;\n    sessionStorage.clear();\n  },\n\n  request: (options) => {\n    return m.request(options).catch((err) => {\n      if (err.code == 401) {\n        Auth.clearCredentials();\n      } else if (err.code == 500) {\n        alert(err.response.message);\n      }\n      throw err;\n    });\n  },\n};\n\nconst SearchModel = {\n  query: \"\",\n  result: {},\n  cache: {},\n  isLoading: true,\n  performSearch: (query) => {\n    SearchModel.query = query;\n    if (SearchModel.cache[query]) {\n      SearchModel.result = SearchModel.cache[query];\n    } else {\n      SearchModel.isLoading = true;\n      m.redraw();\n      m.request({\n        method: \"GET\",\n        url: \"/api/search/:query\",\n        params: { query },\n      })\n        .then((resp) => {\n          SearchModel.cache[query] = resp.results;\n          SearchModel.result = resp.results;\n        })\n        .catch((err) => {\n          console.log(\"TODO\", err);\n        })\n        .finally(() => {\n          SearchModel.isLoading = false;\n        });\n    }\n  },\n};\n\nconst ChapterModel = {\n  cache: {},\n\n  cacheGet: (site, titleId, chapterId) => {\n    const key = [site, titleId, chapterId].join(\",\");\n    return ChapterModel.cache[key] || null;\n  },\n  cacheSet: (site, titleId, chapterId, value) => {\n    const key = [site, titleId, chapterId].join(\",\");\n    ChapterModel.cache[key] = value;\n  },\n\n  get: ({ site, titleId, chapterId }) => {\n    // Returns a promise.\n    // Tries to return cached data first, if that fails then send http request\n    // and save cache on success.\n\n    const cached = ChapterModel.cacheGet(site, titleId, chapterId);\n    if (cached) {\n      return Promise.resolve(cached);\n    }\n\n    return Auth.request({\n      method: \"GET\",\n      url: \"/api/chapter/:site/:titleId/:chapterId\",\n      params: { site, titleId, chapterId },\n    }).then((chapter) => {\n      ChapterModel.cacheSet(site, titleId, chapterId, chapter);\n      return chapter;\n    });\n  },\n};\n\nexport { Auth, SearchModel, ChapterModel };\n", "const LoadingMessage = {\n  view: (vnode) => m(\"h2.blink\", [m(\"i.icon.icon-loader.spin\"), \" loading...\"]),\n};\n\nconst Button = {\n  view: (vnode) =>\n    m(\n      \"button\",\n      Object.assign({ class: vnode.attrs.color || \"\" }, vnode.attrs),\n      [\n        vnode.attrs.icon ? m(`i.icon.icon-${vnode.attrs.icon}`) : null,\n        vnode.attrs.text ? m(\"span\", vnode.attrs.text) : null,\n      ]\n    ),\n};\n\nconst Chapter = {\n  view: (vnode) =>\n    m(\"div.utils--chapter\", [\n      m(\n        m.route.Link,\n        {\n          href: `/m/${vnode.attrs.site}/${vnode.attrs.titleId}/${vnode.attrs.chapter.id}`,\n          class: \"touch-friendly\",\n        },\n        [\n          vnode.attrs.chapter.is_read\n            ? m(\"i.icon.icon-check-square.utils--chapter--read-icon\")\n            : null,\n          m(\"span\", fullChapterName(vnode.attrs.chapter)),\n          vnode.attrs.chapter.groups.map((group) =>\n            m(\"span.utils--chapter--group\", truncate(group, 20))\n          ),\n        ]\n      ),\n    ]),\n};\n\nfunction truncate(input, size) {\n  return input.length > size ? `${input.substring(0, size)}...` : input;\n}\n\nfunction fullChapterName(chapter) {\n  let result = \"\";\n  if (typeof chapter.num_major !== \"undefined\") {\n    result += (chapter.volume ? \"Ch.\" : \"Chapter \") + chapter.num_major;\n  }\n  if (chapter.num_minor) {\n    result += \".\" + chapter.num_minor;\n  }\n  if (chapter.volume) {\n    result += \" Vol. \" + chapter.volume;\n  }\n  if (chapter.name) {\n    result += \" - \" + chapter.name;\n  }\n  return result;\n}\n\nexport { LoadingMessage, Button, Chapter, truncate, fullChapterName };\n", "import { Auth, SearchModel } from \"./models.js\";\nimport { Button } from \"./utils.js\";\n\nfunction Navbar(initialVNode) {\n  let isLoggingOut = false;\n\n  return {\n    view: (vnode) => {\n      let userLink;\n      if (Auth.isLoggedIn()) {\n        userLink = m(\"span.nav--greeting\", [\n          m(\"span\", [\"Welcome, \", m(\"b\", Auth.username)]),\n          m(Button, {\n            text: isLoggingOut ? \" logging out\" : \" logout\",\n            icon: \"log-out\",\n            color: \"red\",\n            title: \"Log out\",\n            onclick: (ev) => {\n              isLoggingOut = true;\n              m.redraw();\n              Auth.logout()\n                .then(() => {\n                  m.route.set(\"/\");\n                })\n                .finally(() => {\n                  isLoggingOut = false;\n                });\n            },\n            disabled: isLoggingOut ? \"disabled\" : null,\n          }),\n        ]);\n      } else {\n        userLink = m(m.route.Link, { class: \"nav--link\", href: \"/a\" }, [\n          m(\"i.icon.icon-log-in\"),\n          \"login / register\",\n        ]);\n      }\n\n      return m(\"nav\", [\n        m(\n          m.route.Link,\n          { class: \"nav--logo\", href: Auth.isLoggedIn() ? \"/f\" : \"/\" },\n          [\n            m(\"img.nav--logo--favicon\", {\n              src: \"/static/favicon.svg\",\n              alt: \"home\",\n            }),\n            m(\"img.nav--logo--img\", {\n              src: \"/static/pytaku.svg\",\n              alt: \"home\",\n            }),\n          ]\n        ),\n        m(\n          \"form.nav--search-form\",\n          {\n            onsubmit: (ev) => {\n              ev.preventDefault();\n              m.route.set(\"/s/:query\", { query: SearchModel.query });\n            },\n          },\n          [\n            m(\"input[placeholder=search manga title]\", {\n              onchange: (ev) => {\n                SearchModel.query = ev.target.value;\n              },\n              value: SearchModel.query,\n            }),\n            m(Button, { color: \"red\", icon: \"search\", type: \"submit\" }),\n          ]\n        ),\n        userLink,\n      ]);\n    },\n  };\n}\n\nconst Layout = {\n  view: (vnode) => {\n    return [m(Navbar), vnode.children];\n  },\n};\n\nexport default Layout;\n", "import { Auth } from \"../models.js\";\nimport { Button } from \"../utils.js\";\n\nfunction Authentication(initialVNode) {\n  let loginUsername;\n  let loginPassword;\n  let rememberMe = false;\n  let loginErrorMessage;\n  let registerUsername;\n  let registerPassword;\n  let confirmPassword;\n  let registerMessage;\n  let registerSuccess;\n\n  let registering = false;\n  let loggingIn = false;\n\n  return {\n    oncreate: (vnode) => {\n      document.title = \"Authentication - Pytaku\";\n    },\n    view: (vnode) => {\n      return m(\"div.content.auth\", [\n        m(\n          \"form.auth--form\",\n          {\n            onsubmit: (e) => {\n              e.preventDefault();\n              loginErrorMessage = \"\";\n              loggingIn = true;\n              m.redraw();\n\n              m.request({\n                method: \"POST\",\n                url: \"/api/login\",\n                body: {\n                  username: loginUsername,\n                  password: loginPassword,\n                  remember: rememberMe,\n                },\n              })\n                .then((result) => {\n                  let userId = result.user_id;\n                  let token = result.token;\n                  let username = loginUsername;\n                  Auth.saveLoginResults({\n                    userId,\n                    username,\n                    token,\n                    remember: rememberMe,\n                  });\n                  m.route.set(\"/f\");\n                })\n                .catch((e) => {\n                  loginErrorMessage = e.response.message;\n                })\n                .finally(() => {\n                  loggingIn = false;\n                });\n            },\n          },\n          [\n            m(\"h1\", \"Login\"),\n            m(\"input[placeholder=username][name=username][required]\", {\n              value: loginUsername,\n              oninput: (e) => {\n                loginUsername = e.target.value;\n              },\n            }),\n            m(\n              \"input[placeholder=password][name=password][type=password][required]\",\n              {\n                value: loginPassword,\n                oninput: (e) => {\n                  loginPassword = e.target.value;\n                },\n              }\n            ),\n            m(\"label[for=auth--remember].auth--checkbox-label\", [\n              m(\"input[type=checkbox][name=remember][id=auth--remember]\", {\n                checked: rememberMe,\n                onchange: (e) => {\n                  rememberMe = e.target.checked;\n                },\n              }),\n              \" Remember me\",\n            ]),\n            m(Button, {\n              type: \"submit\",\n              disabled: loggingIn ? \"disabled\" : null,\n              text: loggingIn ? \" Logging in...\" : \" Log in\",\n              icon: \"log-in\",\n              color: \"blue\",\n            }),\n            m(\"p.auth--form--error-message\", loginErrorMessage),\n          ]\n        ),\n        m(\n          \"form.auth--form\",\n          {\n            onsubmit: (e) => {\n              e.preventDefault();\n              registerMessage = \"\";\n              m.redraw();\n\n              if (registerPassword !== confirmPassword) {\n                registerMessage = \"Password confirmation didn't match!\";\n                registerSuccess = false;\n                return;\n              }\n\n              registering = true;\n              m.redraw();\n              m.request({\n                method: \"POST\",\n                url: \"/api/register\",\n                body: {\n                  username: registerUsername,\n                  password: registerPassword,\n                },\n              })\n                .then((result) => {\n                  registerSuccess = true;\n                  registerMessage = result.message;\n                  loginUsername = registerUsername;\n                  loginPassword = registerPassword;\n                })\n                .catch((e) => {\n                  registerMessage = e.response.message;\n                  registerSuccess = false;\n                })\n                .finally(() => {\n                  registering = false;\n                });\n            },\n          },\n          [\n            m(\"h1\", \"Register\"),\n            m(\"input[placeholder=username][name=username][required]\", {\n              value: registerUsername,\n              oninput: (e) => {\n                registerUsername = e.target.value;\n              },\n            }),\n            m(\n              \"input[placeholder=password][name=password][type=password][required]\",\n              {\n                value: registerPassword,\n                oninput: (e) => {\n                  registerPassword = e.target.value;\n                },\n              }\n            ),\n            m(\n              \"input[placeholder=confirm password][name=confirm][type=password][required]\",\n              {\n                value: confirmPassword,\n                oninput: (e) => {\n                  confirmPassword = e.target.value;\n                },\n              }\n            ),\n            m(Button, {\n              type: \"submit\",\n              disabled: registering ? \"disabled\" : null,\n              text: registering ? \" Registering...\" : \" Register\",\n              icon: \"user-plus\",\n              color: \"green\",\n            }),\n            m(\n              \"p\",\n              {\n                class:\n                  \"auth--form--message-\" +\n                  (registerSuccess ? \"success\" : \"error\"),\n              },\n              registerMessage\n            ),\n          ]\n        ),\n      ]);\n    },\n  };\n}\n\nexport default Authentication;\n", "const Home = {\n  oncreate: (vnode) => {\n    document.title = \"Pytaku\";\n  },\n  view: (vnode) => {\n    return m(\"div.content\", [\n      m(\"p\", \"Try searching for some manga title using the box above.\"),\n      m(\"p\", \"Logging in allows you to follow manga titles.\"),\n    ]);\n  },\n};\n\nexport default Home;\n", "import { Auth } from \"../models.js\";\nimport { LoadingMessage, fullChapterName, Chapter } from \"../utils.js\";\n\nconst Title = {\n  view: (vnode) => {\n    const title = vnode.attrs.title;\n    const numChaptersToDisplay = 3;\n\n    return m(\n      \"div.follows--title\" +\n        (title.chapters.length === 0 ? \".empty\" : \".non-empty\"),\n      [\n        m(\"div\", [\n          m(\n            m.route.Link,\n            {\n              href: `/m/${title.site}/${title.id}`,\n              title: `${title.name} - ${title.site}`,\n            },\n            [\n              m(\"img.follows--cover\", {\n                src: title.thumbnail,\n                alt: title.name,\n              }),\n            ],\n          ),\n        ]),\n        m(\"div.follows--chapters\", [\n          title.chapters.length > numChaptersToDisplay\n            ? m(\"div.utils--chapter\", [\n                m(\n                  m.route.Link,\n                  {\n                    href: `/m/${title.site}/${title.id}`,\n                    style: {\n                      \"font-style\": \"italic\",\n                    },\n                    class: \"touch-friendly\",\n                  },\n                  `and ${title.chapters.length - numChaptersToDisplay} more...`,\n                ),\n              ])\n            : \"\",\n          title.chapters\n            .slice(-numChaptersToDisplay)\n            .map((chapter) =>\n              m(Chapter, { site: title.site, titleId: title.id, chapter }),\n            ),\n        ]),\n      ],\n    );\n  },\n};\n\nfunction Follows(initialVNode) {\n  let titles = [];\n  let isLoading = false;\n\n  return {\n    oninit: () => {\n      isLoading = true;\n      Auth.request({\n        method: \"GET\",\n        url: \"/api/follows\",\n      })\n        .then((resp) => {\n          titles = resp.titles;\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n        .finally(() => {\n          isLoading = false;\n        });\n    },\n\n    oncreate: (vnode) => {\n      document.title = \"Stuff I follow - Pytaku\";\n    },\n\n    view: (vnode) => {\n      let content = \"\";\n\n      if (isLoading) {\n        return m(\"div.content\", m(LoadingMessage));\n      }\n\n      if (titles.length === 0) {\n        return m(\"div.content\", [\n          m(\"p\", \"You're not following any title yet. Try searching for some.\"),\n          m(\"p\", [\n            \"Migrating from Tachiyomi? \",\n            m(m.route.Link, { href: \"/i\" }, \"Use the importer\"),\n            \"!\",\n          ]),\n        ]);\n      }\n\n      return m(\"div.follows.content\", [\n        titles.map((title) => m(Title, { title })),\n      ]);\n    },\n  };\n}\n\nexport default Follows;\n", "import { Auth, SearchModel } from \"../models.js\";\nimport { LoadingMessage, truncate } from \"../utils.js\";\n\nconst Search = {\n  oninit: (vnode) => {\n    document.title = `\"${vnode.attrs.query}\" search results`;\n    SearchModel.performSearch(vnode.attrs.query);\n  },\n  view: (vnode) => {\n    return m(\n      \"div.content\",\n      SearchModel.isLoading\n        ? m(LoadingMessage)\n        : SearchModel.result.map(({ site, titles }) =>\n            m(\"div\", [\n              m(\"h1.search--site-heading\", site),\n              titles\n                ? m(\"p.search--result-text\", [\n                    \"Showing \",\n                    m(\"strong\", titles.length),\n                    ` result${titles.length > 1 ? \"s\" : \"\"} for `,\n                    SearchModel.query,\n                  ])\n                : m(\n                    \"p.search--result-text\",\n                    `No results for \"${SearchModel.query}\"`\n                  ),\n              m(\n                \"div.search--results\",\n                titles.map((title) =>\n                  m(\n                    m.route.Link,\n                    {\n                      class: \"search--result\",\n                      href: `/m/${site}/${title.id}`,\n                      title: title.name,\n                    },\n                    [\n                      m(\"img\", { src: title.thumbnail, alt: title.name }),\n                      m(\"span\", truncate(title.name, 50)),\n                    ]\n                  )\n                )\n              ),\n            ])\n          )\n    );\n  },\n};\n\nexport default Search;\n", "import { Auth } from \"../models.js\";\nimport { LoadingMessage, Button, fullChapterName, Chapter } from \"../utils.js\";\n\nfunction Title(initialVNode) {\n  let isLoading = false;\n  let isTogglingFollow = false;\n  let isMarkingAllAsRead = false;\n  let isMarkingAllAsUnread = false;\n  let isMarkingAsReadStartingFrom = null;\n  let title = {};\n  let allAreRead;\n  let allAreUnread;\n  let readUpTo;\n\n  return {\n    oninit: (vnode) => {\n      document.title = \"Manga\";\n      isLoading = true;\n      m.redraw();\n\n      Auth.request({\n        method: \"GET\",\n        url: \"/api/title/:site/:titleId\",\n        params: {\n          site: vnode.attrs.site,\n          titleId: vnode.attrs.titleId,\n        },\n      })\n        .then((resp) => {\n          title = resp;\n          document.title = title.name;\n        })\n        .finally(() => {\n          isLoading = false;\n        });\n    },\n    view: (vnode) => {\n      if (!isLoading && Auth.isLoggedIn()) {\n        allAreRead = true;\n        allAreUnread = true;\n        readUpTo = title.chapters.length; // biggest index + 1\n\n        for (var i = title.chapters.length - 1; i >= 0; i--) {\n          const chap = title.chapters[i];\n          if (chap.is_read) {\n            if (readUpTo === i + 1) readUpTo = i;\n            allAreUnread = false;\n          } else {\n            allAreRead = false;\n          }\n        }\n      }\n      return m(\n        \"div.content\",\n        isLoading\n          ? m(LoadingMessage)\n          : [\n              m(\"h1\", title.name),\n              m(\"div.title--details\", [\n                Auth.isLoggedIn()\n                  ? [\n                      m(Button, {\n                        icon: \"bookmark\",\n                        disabled: isTogglingFollow ? \"disabled\" : null,\n                        text: isTogglingFollow\n                          ? \"submitting...\"\n                          : title.is_following\n                          ? \"following\"\n                          : \"follow\",\n                        color: title.is_following ? \"red\" : \"green\",\n                        title: title.is_following\n                          ? \"Click to unfollow\"\n                          : \"Click to follow\",\n                        onclick: (ev) => {\n                          isTogglingFollow = true;\n                          m.redraw();\n                          Auth.request({\n                            method: \"POST\",\n                            url: \"/api/follow\",\n                            body: {\n                              site: title.site,\n                              title_id: title.id,\n                              follow: !title.is_following,\n                            },\n                          })\n                            .then((resp) => {\n                              title.is_following = resp.follow;\n                            })\n                            .finally(() => {\n                              isTogglingFollow = false;\n                            });\n                        },\n                      }),\n                      m(Button, {\n                        icon: \"check-square\",\n                        disabled:\n                          isMarkingAllAsRead || allAreRead ? \"disabled\" : null,\n                        text: isMarkingAllAsRead\n                          ? \"submitting...\"\n                          : allAreRead\n                          ? \"all read!\"\n                          : \"read all\",\n                        color: \"green\",\n                        title: allAreRead\n                          ? null\n                          : \"Click to mark all chapters as read\",\n                        onclick: (ev) => {\n                          const confirmed = window.confirm(\n                            \"Are you sure you want to read all chapters?\"\n                          );\n                          if (!confirmed) {\n                            return;\n                          }\n                          isMarkingAllAsRead = true;\n                          m.redraw();\n                          Auth.request({\n                            method: \"POST\",\n                            url: \"/api/read\",\n                            body: {\n                              read: title.chapters\n                                .filter((ch) => !ch.is_read)\n                                .map((ch) => {\n                                  return {\n                                    site: title.site,\n                                    title_id: title.id,\n                                    chapter_id: ch.id,\n                                  };\n                                }),\n                            },\n                          })\n                            .then((resp) => {\n                              title.chapters.forEach((chap) => {\n                                chap.is_read = true;\n                              });\n                            })\n                            .finally(() => {\n                              isMarkingAllAsRead = false;\n                            });\n                        },\n                      }),\n                      m(Button, {\n                        icon: \"x-square\",\n                        disabled:\n                          isMarkingAllAsUnread || allAreUnread\n                            ? \"disabled\"\n                            : null,\n                        text: isMarkingAllAsUnread\n                          ? \"submitting...\"\n                          : allAreUnread\n                          ? \"all unread!\"\n                          : \"unread all\",\n                        color: \"white\",\n                        title: allAreUnread\n                          ? null\n                          : \"Click to mark all chapters as unread\",\n                        onclick: (ev) => {\n                          const confirmed = window.confirm(\n                            \"Are you sure you want to unread all chapters?\"\n                          );\n                          if (!confirmed) {\n                            return;\n                          }\n                          isMarkingAllAsUnread = true;\n                          m.redraw();\n                          Auth.request({\n                            method: \"POST\",\n                            url: \"/api/read\",\n                            body: {\n                              unread: title.chapters\n                                .filter((ch) => ch.is_read)\n                                .map((ch) => {\n                                  return {\n                                    site: title.site,\n                                    title_id: title.id,\n                                    chapter_id: ch.id,\n                                  };\n                                }),\n                            },\n                          })\n                            .then((resp) => {\n                              title.chapters.forEach((chap) => {\n                                chap.is_read = false;\n                              });\n                            })\n                            .finally(() => {\n                              isMarkingAllAsUnread = false;\n                            });\n                        },\n                      }),\n                    ]\n                  : null,\n                m(\n                  \"a.touch-friendly[title=Go to source site][target=_blank]\",\n                  { href: title.source_url },\n                  [title.site, m(\"i.icon.icon-arrow-up-right\")]\n                ),\n              ]),\n              m(\"img.title--cover[alt=cover]\", { src: title.cover }),\n              m(\".title--descriptions\", {}, [\n                title.descriptions.map((desc) =>\n                  m(\n                    \"p\",\n                    title.descriptions_format === \"html\" ? m.trust(desc) : desc\n                  )\n                ),\n              ]),\n              title.chapters\n                ? title.chapters.map((chapter, index) =>\n                    m(\".title--chapter-row\", [\n                      index < readUpTo\n                        ? m(Button, {\n                            icon:\n                              isMarkingAsReadStartingFrom !== null &&\n                              index >= isMarkingAsReadStartingFrom\n                                ? \"loader\"\n                                : \"chevrons-down\",\n                            color: \"green\",\n                            title: \"Mark all read up to this chapter\",\n                            disabled:\n                              isMarkingAsReadStartingFrom !== null &&\n                              index >= isMarkingAsReadStartingFrom\n                                ? \"disabled\"\n                                : null,\n                            onclick: (ev) => {\n                              const confirmed = window.confirm(\n                                \"Are you sure you want to mark all chapters up to this point as read?\"\n                              );\n                              if (!confirmed) return;\n\n                              isMarkingAsReadStartingFrom = index;\n                              m.redraw();\n\n                              const chaptersToMark = title.chapters\n                                .slice(index)\n                                .filter((ch) => !ch.is_read);\n\n                              if (chaptersToMark.length == 0) {\n                                isMarkingAsReadStartingFrom = null;\n                                m.redraw();\n                                return;\n                              }\n\n                              Auth.request({\n                                method: \"POST\",\n                                url: \"/api/read\",\n                                body: {\n                                  read: chaptersToMark.map((ch) => {\n                                    return {\n                                      site: title.site,\n                                      title_id: title.id,\n                                      chapter_id: ch.id,\n                                    };\n                                  }),\n                                },\n                              })\n                                .then((resp) => {\n                                  chaptersToMark.forEach((chap) => {\n                                    chap.is_read = true;\n                                  });\n                                })\n                                .finally(() => {\n                                  isMarkingAsReadStartingFrom = null;\n                                });\n                            },\n                          })\n                        : null,\n                      m(Chapter, {\n                        site: title.site,\n                        titleId: title.id,\n                        chapter,\n                      }),\n                    ])\n                  )\n                : m(\"p\", \"This one has no chapters.\"),\n            ]\n      );\n    },\n  };\n}\n\nexport default Title;\n", "import { Auth, ChapterModel } from \"../models.js\";\nimport { LoadingMessage, fullChapterName, Button } from \"../utils.js\";\n\nconst KEYCODE_PLUS = 43;\nconst KEYCODE_MINUS = 45;\nconst KEYCODE_ZERO = 48;\nconst KEYCODE_QUESTION_MARK = 63;\nconst KEYCODE_J = 106;\nconst KEYCODE_K = 107;\nconst KEYCODE_H = 104;\nconst KEYCODE_L = 108;\n\nconst LoadingPlaceholder = {\n  view: () => m(\"h2\", [m(\"i.icon.icon-loader.spin\")]),\n};\n\nconst PendingPlaceholder = {\n  view: () => m(\"h2\", [m(\"i.icon.icon-loader\")]),\n};\n\nconst RetryImgButton = {\n  view: (vnode) => {\n    return m(Button, {\n      text: \"Errored. Try again?\",\n      color: \"red\",\n      onclick: (ev) => {\n        const { page } = vnode.attrs;\n        page.status = ImgStatus.LOADING;\n        // Cheat: append to src so the element's key is\n        // different, forcing mithril to redraw.\n        // Chose `?` here because it will just be stripped by\n        // flask's path parser.\n        page.src = page.src.endsWith(\"?\")\n          ? page.src.slice(0, -1)\n          : page.src + \"?\";\n      },\n    });\n  },\n};\n\nconst ImgStatus = {\n  LOADING: \"loading\",\n  SUCCEEDED: \"succeeded\",\n  FAILED: \"failed\",\n};\n\nfunction FallbackableImg(initialVNode) {\n  let currentSrc;\n  return {\n    oninit: (vnode) => {\n      currentSrc = vnode.attrs.src;\n    },\n    view: (vnode) => {\n      return m(\"img\", {\n        src: currentSrc,\n        style: vnode.attrs.style,\n        onload: vnode.attrs.onload,\n        onerror: (ev) => {\n          if (currentSrc === vnode.attrs.src && vnode.attrs.altsrc !== null) {\n            currentSrc = vnode.attrs.altsrc;\n          } else {\n            vnode.attrs.onerror(ev);\n          }\n        },\n      });\n    },\n  };\n}\n\nfunction Chapter(initialVNode) {\n  let isLoading = false;\n  let isMarkingLastChapterAsRead = false;\n  let chapter = {};\n  let loadedPages = [];\n  let pendingPages = [];\n\n  let site, titleId; // these are written on init\n  let nextChapterPromise = null;\n  let nextChapterPendingPages = null;\n  let nextChapterLoadedPages = [];\n\n  const pageMaxWidthKey = \"chapter--pageMaxWidth\";\n  // in percent:\n  let pageMaxWidth = Number(sessionStorage.getItem(pageMaxWidthKey) || \"100\");\n\n  function onKeyPress(event) {\n    if (event.target.tagName === \"INPUT\") return;\n\n    switch (event.keyCode) {\n      case KEYCODE_PLUS:\n        if (pageMaxWidth <= 90) pageMaxWidth += 10;\n        sessionStorage.setItem(pageMaxWidthKey, pageMaxWidth.toString());\n        break;\n      case KEYCODE_MINUS:\n        if (pageMaxWidth > 20) pageMaxWidth -= 10;\n        sessionStorage.setItem(pageMaxWidthKey, pageMaxWidth.toString());\n        break;\n      case KEYCODE_ZERO:\n        pageMaxWidth = 100;\n        sessionStorage.setItem(pageMaxWidthKey, pageMaxWidth.toString());\n        break;\n      case KEYCODE_QUESTION_MARK:\n        window.alert(`Keyboard shortcuts:\n    - to decrease page size\n    + to increase page size (max 100%)\n    0 (zero) to reset page size\n    j to scroll down\n    k to scroll up\n    h to go to previous chapter\n    l to go to next chapter`);\n        break;\n      case KEYCODE_J:\n        window.scrollBy({ top: 350, behavior: \"smooth\" });\n        break;\n      case KEYCODE_K:\n        window.scrollBy({ top: -350, behavior: \"smooth\" });\n        break;\n      case KEYCODE_H:\n        document.querySelector(\".chapter--prev-button\").click();\n        break;\n      case KEYCODE_L:\n        document.querySelector(\".chapter--next-button\").click();\n        break;\n      /*\n      default:\n        console.log(\"Keycode:\", event.keyCode);\n      */\n    }\n    m.redraw();\n  }\n\n  function loadNextPage() {\n    if (pendingPages.length > 0) {\n      let [src, altsrc] = pendingPages.splice(0, 1)[0];\n      loadedPages.push({\n        status: ImgStatus.LOADING,\n        src,\n        altsrc,\n      });\n    } else if (chapter.next_chapter && nextChapterPromise === null) {\n      /* Once all pages of this chapter have been loaded,\n       * preload the next chapter\n       */\n      nextChapterPromise = ChapterModel.get({\n        site,\n        titleId,\n        chapterId: chapter.next_chapter.id,\n      }).then((nextChapter) => {\n        console.log(\"Preloading next chapter:\", fullChapterName(nextChapter));\n        if (nextChapter.pages_alt.length > 0) {\n          nextChapterPendingPages = nextChapter.pages.map((page, i) => {\n            return [page, nextChapter.pages_alt[i]];\n          });\n        } else {\n          nextChapterPendingPages = nextChapter.pages.map((page) => {\n            return [page, null];\n          });\n        }\n        // Apparently preloading one at a time was too slow so let's go with 2.\n        preloadNextChapterPage();\n        preloadNextChapterPage();\n      });\n    }\n  }\n\n  function preloadNextChapterPage() {\n    if (nextChapterPendingPages !== null) {\n      if (nextChapterPendingPages.length > 0) {\n        const [src, altsrc] = nextChapterPendingPages.splice(0, 1)[0];\n        nextChapterLoadedPages.push({ src, altsrc });\n      }\n    }\n  }\n\n  function markChapterAsRead(site, titleId, chapterId) {\n    return Auth.request({\n      method: \"POST\",\n      url: \"/api/read\",\n      body: {\n        read: [\n          {\n            site,\n            title_id: titleId,\n            chapter_id: chapterId,\n          },\n        ],\n      },\n    });\n  }\n\n  function buttonsView(site, prev, next) {\n    const nextRoute = next\n      ? `/m/${site}/${titleId}/${next.id}`\n      : `/m/${site}/${titleId}`;\n\n    return m(\"div.chapter--buttons\", [\n      prev\n        ? m(\n            m.route.Link,\n            {\n              class: \"touch-friendly chapter--prev-button\",\n              href: `/m/${site}/${titleId}/${prev.id}`,\n            },\n            [m(\"i.icon.icon-chevrons-left\"), m(\"span\", \"prev\")],\n          )\n        : m(Button, {\n            class: \"chapter--prev-button\",\n            text: \"prev\",\n            icon: \"chevrons-left\",\n            disabled: true,\n          }),\n      m(\n        m.route.Link,\n        {\n          class: \"touch-friendly\",\n          href: `/m/${site}/${titleId}`,\n        },\n        [m(\"i.icon.icon-list\"), m(\"span\", \" chapter list\")],\n      ),\n      m(\n        m.route.Link,\n        {\n          class:\n            \"touch-friendly chapter--next-button\" +\n            (isMarkingLastChapterAsRead ? \" disabled\" : \"\"),\n          href: nextRoute,\n          disabled: isMarkingLastChapterAsRead,\n          onclick: (ev) => {\n            if (Auth.isLoggedIn()) {\n              if (next) {\n                markChapterAsRead(site, titleId, chapter.id);\n              } else {\n                // If this is the last chapter, make sure to only transition\n                // to next route (title details) after the \"mark chapter as\n                // read\" request is done, so that we don't end up showing the\n                // last chapter as still unread in the title details route.\n                ev.preventDefault();\n                isMarkingLastChapterAsRead = true;\n                m.redraw();\n                markChapterAsRead(site, titleId, chapter.id).finally(() => {\n                  isMarkingLastChapterAsRead = false; // proly unnecessary\n                  m.route.set(nextRoute);\n                });\n              }\n            }\n          },\n        },\n        [\n          m(\n            \"span\",\n            next\n              ? \"next\"\n              : isMarkingLastChapterAsRead\n              ? \"finishing...\"\n              : \"finish\",\n          ),\n          isMarkingLastChapterAsRead\n            ? null\n            : m(\"i.icon.icon-\" + (next ? \"chevrons-right\" : \"check-circle\")),\n        ],\n      ),\n    ]);\n  }\n\n  return {\n    oncreate: (vnode) => {\n      document.addEventListener(\"keypress\", onKeyPress);\n    },\n    onremove: (vnode) => {\n      document.removeEventListener(\"keypress\", onKeyPress);\n    },\n    oninit: (vnode) => {\n      document.title = \"Manga chapter\";\n      site = vnode.attrs.site;\n      titleId = vnode.attrs.titleId;\n\n      isLoading = true;\n      m.redraw();\n\n      ChapterModel.get({\n        site: vnode.attrs.site,\n        titleId: vnode.attrs.titleId,\n        chapterId: vnode.attrs.chapterId,\n      })\n        .then((resp) => {\n          chapter = resp;\n          document.title = fullChapterName(chapter);\n\n          // \"zip\" pages & pages_alt into pendingPages\n          if (chapter.pages_alt.length > 0) {\n            pendingPages = chapter.pages.map((page, i) => {\n              return [page, chapter.pages_alt[i]];\n            });\n          } else {\n            pendingPages = chapter.pages.map((page) => {\n              return [page, null];\n            });\n          }\n\n          // start loading pages, 3 at a time:\n          loadNextPage();\n          loadNextPage();\n          loadNextPage();\n        })\n        .finally(() => {\n          isLoading = false;\n        });\n    },\n    view: (vnode) => {\n      if (isLoading) {\n        return m(\"div.chapter.content\", m(LoadingMessage));\n      }\n\n      const { site, titleId } = vnode.attrs;\n      const prev = chapter.prev_chapter;\n      const next = chapter.next_chapter;\n\n      return m(\"div.chapter.content\", [\n        m(\"h1\", fullChapterName(chapter)),\n        buttonsView(site, prev, next),\n        m(\n          \"div\",\n          {\n            class:\n              \"chapter--pages\" +\n              (chapter.is_webtoon ? \" chapter--webtoon\" : \"\"),\n          },\n          [\n            loadedPages.map((page, pageIndex) =>\n              m(\n                \"div.chapter--page-container\",\n                {\n                  key: page.src,\n                  style: {\n                    width: `${pageMaxWidth}%`,\n                    backgroundColor:\n                      pageMaxWidth === 100 ? \"transparent\" : \"#333\",\n                  },\n                },\n                [\n                  m(FallbackableImg, {\n                    src: page.src,\n                    altsrc: page.altsrc,\n                    style: {\n                      display:\n                        page.status === ImgStatus.SUCCEEDED ? \"inline\" : \"none\",\n                    },\n                    onload: (ev) => {\n                      page.status = ImgStatus.SUCCEEDED;\n                      loadNextPage();\n                    },\n                    onerror: (ev) => {\n                      page.status = ImgStatus.FAILED;\n                      loadNextPage();\n                    },\n                  }),\n                  page.status === ImgStatus.LOADING\n                    ? m(LoadingPlaceholder)\n                    : null,\n                  page.status === ImgStatus.FAILED\n                    ? m(\n                        \"div\",\n                        { style: { \"margin-bottom\": \".5rem\" } },\n                        m(RetryImgButton, { page }),\n                      )\n                    : null,\n                ],\n              ),\n            ),\n            pendingPages.map(() => m(PendingPlaceholder)),\n          ],\n        ),\n        buttonsView(site, prev, next),\n        nextChapterLoadedPages.map((page) =>\n          m(FallbackableImg, {\n            style: { display: \"none\" },\n            onload: preloadNextChapterPage,\n            onerror: preloadNextChapterPage,\n            src: page.src,\n            altsrc: page.altsrc,\n          }),\n        ),\n      ]);\n    },\n  };\n}\n\nexport default Chapter;\n", "import { Auth } from \"../models.js\";\nimport { Button } from \"../utils.js\";\n\nfunction Importer(initialVNode) {\n  let resultMessage = null;\n  let isSuccess = null;\n  let isUploading = false;\n\n  return {\n    oninit: (vnode) => {\n      document.title = \"Import from Tachiyomi\";\n    },\n    view: (vnode) => {\n      return m(\"div.content\", [\n        m(\"h1\", \"Importing from Tachiyomi\"),\n        m(\n          \"form[enctype=multipart/form-data]\",\n          {\n            onsubmit: (ev) => {\n              ev.preventDefault();\n              // prepare multipart form body\n              const file = document.getElementById(\"tachiyomi\").files[0];\n              const body = new FormData();\n              body.append(\"tachiyomi\", file);\n\n              isUploading = true;\n              resultMessage = null;\n              m.redraw();\n              Auth.request({\n                method: \"POST\",\n                url: \"/api/import\",\n                body,\n              })\n                .then((resp) => {\n                  resultMessage = resp.message;\n                  isSuccess = true;\n                })\n                .catch((err) => {\n                  resultMessage = err.response.message;\n                  isSuccess = false;\n                })\n                .finally(() => {\n                  isUploading = false;\n                });\n            },\n          },\n          [\n            m(\"p\", [\n              \"Go to \",\n              m(\"b\", \"Settings > Backup > Create backup\"),\n              \", then upload the generated json file here:\",\n            ]),\n            m(\"input[type=file][id=tachiyomi].importer--filepicker\"),\n            m(\"br\"),\n            m(Button, {\n              type: \"submit\",\n              text: isUploading ? \"uploading...\" : \"upload\",\n              color: \"green\",\n              icon: \"upload\",\n              disabled: isUploading ? \"disabled\" : null,\n            }),\n          ]\n        ),\n        m(\n          \"p\",\n          { class: `importer--${isSuccess ? \"success\" : \"failure\"}` },\n          resultMessage\n        ),\n        isSuccess\n          ? m(m.route.Link, { href: \"/f\" }, \"See your following list here.\")\n          : null,\n      ]);\n    },\n  };\n}\n\nexport default Importer;\n", "import { Auth } from \"./models.js\";\nimport Layout from \"./layout.js\";\nimport Authentication from \"./routes/authentication.js\";\nimport Home from \"./routes/home.js\";\nimport Follows from \"./routes/follows.js\";\nimport Search from \"./routes/search.js\";\nimport Title from \"./routes/title.js\";\nimport Chapter from \"./routes/chapter.js\";\nimport Importer from \"./routes/importer.js\";\n\nAuth.init().then(() => {\n  const root = document.getElementById(\"spa-root\");\n  m.route.prefix = \"\";\n  m.route(root, \"/\", {\n    \"/\": {\n      onmatch: () => {\n        if (Auth.isLoggedIn()) {\n          m.route.set(\"/f\", null, { replace: true });\n        } else {\n          return Home;\n        }\n      },\n      render: (vnode) => m(Layout, vnode),\n    },\n    \"/a\": {\n      onmatch: () => {\n        if (Auth.isLoggedIn()) {\n          m.route.set(\"/f\", null, { replace: true });\n        } else {\n          return Authentication;\n        }\n      },\n      render: (vnode) => m(Layout, vnode),\n    },\n    \"/f\": {\n      onmatch: () => {\n        if (Auth.isLoggedIn()) {\n          return Follows;\n        } else {\n          m.route.set(\"/a\", null, { replace: true });\n        }\n      },\n      render: (vnode) => m(Layout, vnode),\n    },\n    \"/s/:query\": {\n      render: (vnode) =>\n        m(\n          Layout,\n          m(Search, {\n            query: vnode.attrs.query,\n            key: vnode.attrs.query,\n            // ^ set a key here to reinitialize Search component on route\n            // change. Without it, Search.oninit would only trigger once on\n            // first full page load.\n          })\n        ),\n    },\n    \"/m/:site/:titleId\": {\n      render: (vnode) =>\n        m(\n          Layout,\n          m(Title, {\n            site: vnode.attrs.site,\n            titleId: vnode.attrs.titleId,\n          })\n        ),\n    },\n    \"/m/:site/:titleId/:chapterId\": {\n      render: (vnode) =>\n        m(\n          Layout,\n          m(Chapter, {\n            site: vnode.attrs.site,\n            titleId: vnode.attrs.titleId,\n            chapterId: vnode.attrs.chapterId,\n            key: vnode.attrs.chapterId,\n          })\n        ),\n    },\n    \"/i\": {\n      onmatch: () => {\n        if (Auth.isLoggedIn()) {\n          return Importer;\n        } else {\n          m.route.set(\"/a\", null, { replace: true });\n        }\n      },\n      render: (vnode) => m(Layout, vnode),\n    },\n  });\n});\n"],
  "mappings": "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",
  "names": ["readCookie", "cookieString", "result", "pair", "key", "val", "Auth", "err", "userId", "username", "token", "remember", "options", "SearchModel", "query", "resp", "ChapterModel", "site", "titleId", "chapterId", "value", "cached", "chapter", "LoadingMessage", "vnode", "Button", "Chapter", "fullChapterName", "group", "truncate", "input", "size", "chapter", "result", "Navbar", "initialVNode", "isLoggingOut", "vnode", "userLink", "Auth", "Button", "ev", "SearchModel", "Layout", "layout_default", "Authentication", "initialVNode", "loginUsername", "loginPassword", "rememberMe", "loginErrorMessage", "registerUsername", "registerPassword", "confirmPassword", "registerMessage", "registerSuccess", "registering", "loggingIn", "vnode", "e", "result", "userId", "token", "username", "Auth", "Button", "authentication_default", "Home", "vnode", "home_default", "Title", "vnode", "title", "numChaptersToDisplay", "chapter", "Chapter", "Follows", "initialVNode", "titles", "isLoading", "Auth", "resp", "err", "content", "LoadingMessage", "follows_default", "Search", "vnode", "SearchModel", "LoadingMessage", "site", "titles", "title", "truncate", "search_default", "Title", "initialVNode", "isLoading", "isTogglingFollow", "isMarkingAllAsRead", "isMarkingAllAsUnread", "isMarkingAsReadStartingFrom", "title", "allAreRead", "allAreUnread", "readUpTo", "vnode", "Auth", "resp", "i", "LoadingMessage", "Button", "ev", "ch", "chap", "desc", "chapter", "index", "chaptersToMark", "Chapter", "title_default", "KEYCODE_PLUS", "KEYCODE_MINUS", "KEYCODE_ZERO", "KEYCODE_QUESTION_MARK", "KEYCODE_J", "KEYCODE_K", "KEYCODE_H", "KEYCODE_L", "LoadingPlaceholder", "PendingPlaceholder", "RetryImgButton", "vnode", "Button", "ev", "page", "ImgStatus", "FallbackableImg", "initialVNode", "currentSrc", "Chapter", "isLoading", "isMarkingLastChapterAsRead", "chapter", "loadedPages", "pendingPages", "site", "titleId", "nextChapterPromise", "nextChapterPendingPages", "nextChapterLoadedPages", "pageMaxWidthKey", "pageMaxWidth", "onKeyPress", "event", "loadNextPage", "src", "altsrc", "ChapterModel", "nextChapter", "fullChapterName", "i", "preloadNextChapterPage", "markChapterAsRead", "chapterId", "Auth", "buttonsView", "prev", "next", "nextRoute", "resp", "LoadingMessage", "pageIndex", "chapter_default", "Importer", "initialVNode", "resultMessage", "isSuccess", "isUploading", "vnode", "ev", "file", "body", "Auth", "resp", "err", "Button", "importer_default", "Auth", "root", "home_default", "vnode", "layout_default", "authentication_default", "follows_default", "search_default", "title_default", "chapter_default", "importer_default"]
}
