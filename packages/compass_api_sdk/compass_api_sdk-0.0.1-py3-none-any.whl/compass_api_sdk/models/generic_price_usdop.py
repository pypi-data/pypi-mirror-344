"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import FieldMetadata, QueryParamMetadata
from enum import Enum
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GenericPriceUsdChain(str, Enum):
    r"""The chain to use."""

    BASE_MAINNET = "base:mainnet"
    ETHEREUM_MAINNET = "ethereum:mainnet"
    ARBITRUM_MAINNET = "arbitrum:mainnet"


class GenericPriceUsdToken(str, Enum):
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """

    ONE_INCH = "1INCH"
    AAVE = "AAVE"
    BAL = "BAL"
    CB_BTC = "cbBTC"
    CB_ETH = "cbETH"
    CRV = "CRV"
    CRV_USD = "crvUSD"
    DAI = "DAI"
    ENS = "ENS"
    ET_HX = "ETHx"
    FRAX = "FRAX"
    FXS = "FXS"
    GHO = "GHO"
    KNC = "KNC"
    LDO = "LDO"
    LINK = "LINK"
    LUSD = "LUSD"
    MKR = "MKR"
    OS_ETH = "osETH"
    PYUSD = "PYUSD"
    R_ETH = "rETH"
    RPL = "RPL"
    RS_ETH = "rsETH"
    S_DAI = "sDAI"
    SNX = "SNX"
    STG = "STG"
    S_US_DE = "sUSDe"
    T_BTC = "tBTC"
    UNI = "UNI"
    USDC = "USDC"
    US_DE = "USDe"
    USDS = "USDS"
    USDT = "USDT"
    WBTC = "WBTC"
    WE_ETH = "weETH"
    WETH = "WETH"
    WST_ETH = "wstETH"
    ARB = "ARB"
    EURS = "EURS"
    MAI = "MAI"
    USD_CE = "USDCe"
    AERO = "AERO"
    EUR = "EUR"
    VIRTUAL = "VIRTUAL"


class GenericPriceUsdRequestTypedDict(TypedDict):
    chain: NotRequired[GenericPriceUsdChain]
    r"""The chain to use."""
    token: NotRequired[GenericPriceUsdToken]
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """


class GenericPriceUsdRequest(BaseModel):
    chain: Annotated[
        Optional[GenericPriceUsdChain],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = GenericPriceUsdChain.ARBITRUM_MAINNET
    r"""The chain to use."""

    token: Annotated[
        Optional[GenericPriceUsdToken],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = GenericPriceUsdToken.WBTC
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """
