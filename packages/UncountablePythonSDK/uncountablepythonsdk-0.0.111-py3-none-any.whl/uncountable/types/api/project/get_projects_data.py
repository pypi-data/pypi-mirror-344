# DO NOT MODIFY -- This file is generated by type_spec
# ruff: noqa: E402 Q003
# fmt: off
# isort: skip_file
from __future__ import annotations
import typing  # noqa: F401
import datetime  # noqa: F401
from decimal import Decimal  # noqa: F401
import dataclasses
from pkgs.serialization import serial_class
from ... import base_t
from ... import field_values_t
from ... import fields_t
from ... import phases_t

__all__: list[str] = [
    "Arguments",
    "Data",
    "ENDPOINT_METHOD",
    "ENDPOINT_PATH",
    "ProjectDetailed",
]

ENDPOINT_METHOD = "GET"
ENDPOINT_PATH = "api/external/project/external_get_projects_data"


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.project.get_projects_data.Arguments",
)
@dataclasses.dataclass(kw_only=True)
class Arguments:
    project_ids: list[base_t.ObjectId]
    offset: int | None = None
    limit: int | None = None


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.project.get_projects_data.ProjectDetailed",
)
@dataclasses.dataclass(kw_only=True)
class ProjectDetailed:
    id: base_t.ObjectId
    name: str
    material_family_id: base_t.ObjectId
    project_owner_id: base_t.ObjectId | None
    phase_id: base_t.ObjectId | None
    values: list[field_values_t.ArgumentValueId]


# DO NOT MODIFY -- This file is generated by type_spec
@serial_class(
    named_type_path="sdk.api.project.get_projects_data.Data",
)
@dataclasses.dataclass(kw_only=True)
class Data:
    projects: list[ProjectDetailed]
    phases: list[phases_t.Phase]
    fields: list[fields_t.Field]
# DO NOT MODIFY -- This file is generated by type_spec
