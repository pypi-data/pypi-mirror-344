diff --git a/cfplot/cfplot.py b/cfplot/cfplot.py
index 1ecc474..f45533e 100644
--- a/cfplot/cfplot.py
+++ b/cfplot/cfplot.py
@@ -10398,7 +10398,7 @@ def traj(
     for track in np.arange(ntracks):
         xpts = lons[track, :]
         ypts = lats[track, :]
-        data2 = data[track, :]
+        data2 = data
 
         xpts_orig = deepcopy(xpts)
         xpts = np.mod(xpts + 180, 360) - 180
@@ -10427,6 +10427,7 @@ def traj(
                 print("plotting markers")
 
             if legend_lines is False:
+                """
                 mymap.plot(
                     xpts,
                     ypts,
@@ -10443,6 +10444,7 @@ def traj(
                     clip_on=True,
                     transform=ccrs.PlateCarree(),
                 )
+                """
             else:
                 line_xpts = xpts.compressed()
                 line_ypts = ypts.compressed()
@@ -10451,6 +10453,7 @@ def traj(
                 for i in np.arange(np.size(line_xpts) - 1):
                     val = (line_data[i] + line_data[i + 1]) / 2.0
 
+                    """
                     col = plotvars.cs[np.max(np.where(val > plotvars.levels))]
                     mymap.plot(
                         line_xpts[i: i + 2],
@@ -10462,6 +10465,7 @@ def traj(
                         clip_on=True,
                         transform=ccrs.PlateCarree(),
                     )
+                    """
 
         # Plot vectors
         if vector:
@@ -10478,6 +10482,7 @@ def traj(
                     pts = xpts.size
 
                 for pt in np.arange(pts - 1):
+                    """
                     mymap.arrow(
                         xpts[pt],
                         ypts[pt],
@@ -10492,6 +10497,8 @@ def traj(
                         clip_on=True,
                         transform=ccrs.PlateCarree(),
                     )
+                    """
+                    pass
 
     # Plot different colour markers based on a user set of levels
     if legend:
@@ -10511,7 +10518,7 @@ def traj(
         for track in np.arange(ntracks):
             xpts = lons[track, :]
             ypts = lats[track, :]
-            data2 = data[track, :]
+            data2 = data
 
             for i in np.arange(np.size(levs) - 1):
                 color = plotvars.cs[i]
@@ -10535,9 +10542,10 @@ def traj(
                         xpts[pts],
                         ypts[pts],
                         s=markersize * 15,
-                        c=color,
+                        c=[plotvars.cs[np.max(np.where(d > plotvars.levels))] for d in data2[pts]],
                         marker=marker,
-                        edgecolors=markeredgecolor,
+                        linewidth=plot_linewidth,
+                        ###edgecolors=markeredgecolor,  # SADIE BUG HERE
                         transform=ccrs.PlateCarree(),
                         zorder=plot_zorder,
                     )
