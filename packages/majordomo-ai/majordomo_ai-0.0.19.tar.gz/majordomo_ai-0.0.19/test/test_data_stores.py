# coding: utf-8

"""
    Majordomo AI

    This is a API specification for Majordomo AI

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from majordomo_ai.models.data_stores import DataStores

class TestDataStores(unittest.TestCase):
    """DataStores unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataStores:
        """Test DataStores
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataStores`
        """
        model = DataStores()
        if include_optional:
            return DataStores(
                data_stores = [
                    majordomo_ai.models.data_store_response.Data Store Response(
                        config = majordomo_ai.models.data_store.DataStore(
                            workspace = 'Development', 
                            name = 'SalesDocuments', 
                            store_type = 1, 
                            app_profile_name = 'The name of the application profile, that will also determine the type.', 
                            contents = 'This vector store contains information about pipelines.', 
                            instance_info = {
                                'key' : null
                                }, 
                            shared_users = [
                                ''
                                ], ), 
                        created_by = '', 
                        created_at = 56, 
                        last_update = 56, 
                        last_query = 56, 
                        last_ingest = 56, 
                        direct_ingest_count = 56, 
                        pipeline_ingest_count = 56, 
                        error_ingest_count = 56, )
                    ]
            )
        else:
            return DataStores(
        )
        """

    def testDataStores(self):
        """Test DataStores"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
