# coding: utf-8

"""
    Majordomo AI

    This is a API specification for Majordomo AI

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from majordomo_ai.models.ingest_pipeline_info import IngestPipelineInfo

class TestIngestPipelineInfo(unittest.TestCase):
    """IngestPipelineInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IngestPipelineInfo:
        """Test IngestPipelineInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IngestPipelineInfo`
        """
        model = IngestPipelineInfo()
        if include_optional:
            return IngestPipelineInfo(
                created_by = '',
                config = majordomo_ai.models.ingest_pipeline.IngestPipeline(
                    workspace = 'Development', 
                    name = 'my_ingest', 
                    data_store_name = 'Customers', 
                    input_filter = {
                        'key' : null
                        }, 
                    app_profile_name = '', 
                    ingest_type = 1, 
                    ingest_params = majordomo_ai.models.data_store_ingest_params.Data Store Ingest Params(
                        chunk_size = 56, 
                        chunk_overlap = 56, 
                        summarize_doc = majordomo_ai.models.summarize_doc.SummarizeDoc(
                            enable = True, 
                            llm_model_profile = '', 
                            llm_model_name = '', ), 
                        file_extractor = majordomo_ai.models.file_extractor.FileExtractor(
                            extractor_type = 1, 
                            access_info = {
                                'key' : null
                                }, ), 
                        doc_metadata = [
                            majordomo_ai.models.metadata.Metadata(
                                key = '', 
                                value = '', )
                            ], ), 
                    timer_on = True, 
                    timer_interval = 120, ),
                created_at = 56,
                last_update = 56
            )
        else:
            return IngestPipelineInfo(
                created_by = '',
                config = majordomo_ai.models.ingest_pipeline.IngestPipeline(
                    workspace = 'Development', 
                    name = 'my_ingest', 
                    data_store_name = 'Customers', 
                    input_filter = {
                        'key' : null
                        }, 
                    app_profile_name = '', 
                    ingest_type = 1, 
                    ingest_params = majordomo_ai.models.data_store_ingest_params.Data Store Ingest Params(
                        chunk_size = 56, 
                        chunk_overlap = 56, 
                        summarize_doc = majordomo_ai.models.summarize_doc.SummarizeDoc(
                            enable = True, 
                            llm_model_profile = '', 
                            llm_model_name = '', ), 
                        file_extractor = majordomo_ai.models.file_extractor.FileExtractor(
                            extractor_type = 1, 
                            access_info = {
                                'key' : null
                                }, ), 
                        doc_metadata = [
                            majordomo_ai.models.metadata.Metadata(
                                key = '', 
                                value = '', )
                            ], ), 
                    timer_on = True, 
                    timer_interval = 120, ),
                created_at = 56,
                last_update = 56,
        )
        """

    def testIngestPipelineInfo(self):
        """Test IngestPipelineInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
