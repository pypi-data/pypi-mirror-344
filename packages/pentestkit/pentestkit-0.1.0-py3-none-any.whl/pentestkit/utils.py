# Copyright 2025 Rahul Kaushal
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import rstr


def generate_test_value(pattern: str, min_length: int, max_length: int) -> str:
    """
    Generate a valid test value that matches the given regex pattern
    and length constraints.

    Args:
        pattern (str): The regex pattern to match
        min_length (int): The minimum length of the value.
        max_length (int): The maximum length of the value.

    Returns:
        str: A valid test value that matches the given pattern
        and length constraints. Returns "example" if a valid value could not be
        generated.
    """
    try:
        for _ in range(100):  # Limit attempts to avoid infinite loops
            value = rstr.xeger(pattern)
            if min_length <= len(value) <= max_length:
                return value
        return "example"
    except Exception:
        return "example"
