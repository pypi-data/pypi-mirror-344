[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "dxsp"
version = "13.0.1"
description = "DXSP (DeX SwaP), A defi swap helper package. Swap made easy."
authors = [
  { name = "mraniki", email = "8766259+mraniki@users.noreply.github.com" },
]
license = "MIT"
readme = "README.md"
keywords = ["dex", "swap", "crypto", "exchange", "defi"]
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
  "dynaconf>=3.2.0",
  "loguru>=0.6.0",
  "pycoingecko==3.2.0",
  "requests>=2.31.0",
  "web3==6.20.4",
  "uniswap-python==0.7.1",
  "kwenta==1.2.0",
]

[project.urls]
"Homepage" = "https://github.com/mraniki/dxsp"
"Changelog" =  "https://github.com/mraniki/dxsp/blob/dev/CHANGELOG.rst"
"Support" =  "https://github.com/mraniki/dxsp/discussions"
"Issues" =  "https://github.com/mraniki/dxsp/issues"


[project.optional-dependencies]
dev = [
  "python-semantic-release>=8.0.8",
  "ruff~=0.11",
  "pre-commit~=4.0",
]
test = [
  "pytest~=8.2",
  "pytest-cov~=6.0",
  "pytest-asyncio~=0.25",
  "pytest-mock~=3.11",
  "pytest-loguru~=0.4",
  "eth_tester~=0.9.0b2",
]
docs = [
  "sphinx==7.4.7",
  "pydata-sphinx-theme==0.16.1",
  "sphinx-hoverxref==1.4.2",
  "sphinx_copybutton==0.5.2",
  "myst_parser==4.0.1",
  "sphinx_design~=0.6",
]

[tool.setuptools.packages.find]
where = ["."] 
include = ["dxsp*"] 
exclude = ["tests*", "docs*", "examples*"]


[tool.ruff]
exclude = [
  ".github/*",
  "docs/*",
]
line-length = 100

[tool.ruff.lint]
select = [
  "E",
  "F",
  "I",
  "W"
]



#ignore = ["E401","F401","F811"]
fixable = ["ALL"]


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
docstring-code-format = true

[tool.pytest.ini_options]
pythonpath = "."
testpaths = "tests"
python_classes = "Test*"
log_format = "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
log_level = "DEBUG"
addopts = """
-v
--show-capture=stderr
"""
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
omit = [
    "tests/*",
    "examples/*",
    "docs/*",
    "*/config.py"
]

[tool.bandit]
exclude_dirs = ["tests","docs"]
skips = ["B101","B104"]



[tool.semantic_release]
tag_format = "v{version}"
commit_parser = "emoji"
version_variables = [
    "dxsp/__init__.py:__version__",
]
version_toml = [
   "pyproject.toml:project.version",
]

[tool.semantic_release.commit_parser_options]
major_tags = [
    "BREAKING",
    "💥",
    ":boom:",
  ]
minor_tags = ["feat",
    "🥚",":egg:",
    "🚀",":rocket:",
    "💄",":lipstick:",
    "✨",":sparkles:",
]

patch_tags = ["fix","bump","Update",
    "🎨",":art:",
    "🐛",":bug:",
    "🚑",":ambulance:",
    "⚡",":zap:",
    "🔥",":fire:",
    "🚨",":rotating_light:",
    "♻️",":recycle:",
    "🔧",":wrench:",
    "⬆️",":arrow_up:",
    "🩹",":adhesive_bandage:",
    "👷",":construction_worker:",
    "📝",":memo:",
    "🔒",":lock:",
    "👽",":alien:",
    "💬",":speech_balloon:",
    "🥅",":goal_net:",
    "✅",":white_check_mark:",
    "🐳",":whale:",
    "🙈",":see_no_evil:",
    "⚗️",":alembic:",
    "🧐",":monocle_face:",
    "🔇",":mute:",
    "🔊",":volume:",
]

[tool.semantic_release.changelog]
# template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.branches.main]
match = "(main|master|dev)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

