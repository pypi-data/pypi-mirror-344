# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
from .app_fingerprint_resource_module import AppFingerprintResourceModule
from .app_fingerprint_resource_type import AppFingerprintResourceType
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class AppFingerprintConfig(UniversalBaseModel):
    targets: typing.List[str]
    modules: typing.Optional[typing.List[AppFingerprintResourceModule]] = None
    resource_type: AppFingerprintResourceType = pydantic.Field(alias="resourceType")
    timeout: int
    successful_only: bool = pydantic.Field(alias="successfulOnly")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
