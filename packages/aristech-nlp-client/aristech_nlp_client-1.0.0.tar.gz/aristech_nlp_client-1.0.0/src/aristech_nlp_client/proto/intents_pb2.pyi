"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright Aristech GmbH"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Intent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _InputType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _InputTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Intent._InputType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CHAT: Intent._InputType.ValueType  # 0
        MAIL: Intent._InputType.ValueType  # 1
        VOICE: Intent._InputType.ValueType  # 2

    class InputType(_InputType, metaclass=_InputTypeEnumTypeWrapper): ...
    CHAT: Intent.InputType.ValueType  # 0
    MAIL: Intent.InputType.ValueType  # 1
    VOICE: Intent.InputType.ValueType  # 2

    ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    LOCALE_FIELD_NUMBER: builtins.int
    TOPIC_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    OUTPUT_CHAT_FIELD_NUMBER: builtins.int
    OUTPUT_VOICE_FIELD_NUMBER: builtins.int
    OUTPUT_EMAIL_FIELD_NUMBER: builtins.int
    RELATED_TO_FIELD_NUMBER: builtins.int
    PUBLISHED_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    EXCLUDE_OUTPUT_FROM_SEARCH_FIELD_NUMBER: builtins.int
    KEYWORDS_FIELD_NUMBER: builtins.int
    CREATOR_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    """ID of the intent"""
    project_id: builtins.str
    """The project ID of the intent"""
    locale: builtins.str
    """The default locale for the intent's inputs and outputs"""
    topic: builtins.str
    """Topic of the intent"""
    published: builtins.bool
    """If the intent is a draft"""
    type: global___Intent.InputType.ValueType
    """Type of the intents inputs"""
    exclude_output_from_search: builtins.bool
    creator_id: builtins.str
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IntentInput]:
        """Inputs for the intent"""

    @property
    def output_chat(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Possible chat outputs for the intent"""

    @property
    def output_voice(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Possible voice outputs for the intent
        This is usually a JSON string with key value pairs e.g. {"extension": "1234", "text": "I will redirect you to the support team"}
        """

    @property
    def output_email(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Possible email outputs for the intent"""

    @property
    def related_to(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Relation]:
        """relation to other intents"""

    @property
    def keywords(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Keyword]:
        """List of keywords to force finding this intent"""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        project_id: builtins.str = ...,
        locale: builtins.str = ...,
        topic: builtins.str = ...,
        inputs: collections.abc.Iterable[global___IntentInput] | None = ...,
        output_chat: collections.abc.Iterable[builtins.str] | None = ...,
        output_voice: collections.abc.Iterable[builtins.str] | None = ...,
        output_email: collections.abc.Iterable[builtins.str] | None = ...,
        related_to: collections.abc.Iterable[global___Relation] | None = ...,
        published: builtins.bool = ...,
        type: global___Intent.InputType.ValueType = ...,
        exclude_output_from_search: builtins.bool = ...,
        keywords: collections.abc.Iterable[global___Keyword] | None = ...,
        creator_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["creator_id", b"creator_id", "exclude_output_from_search", b"exclude_output_from_search", "id", b"id", "inputs", b"inputs", "keywords", b"keywords", "locale", b"locale", "output_chat", b"output_chat", "output_email", b"output_email", "output_voice", b"output_voice", "project_id", b"project_id", "published", b"published", "related_to", b"related_to", "topic", b"topic", "type", b"type"]) -> None: ...

global___Intent = Intent

@typing.final
class IntentInput(google.protobuf.message.Message):
    """a type defining an input and its mapping to a uuid. if the uuid is set, the input gets edited
    to the new input, if no id is set or the uuid does not exist, a new input is added to the 
    intent.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UUID_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    uuid: builtins.str
    input: builtins.str
    def __init__(
        self,
        *,
        uuid: builtins.str = ...,
        input: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["input", b"input", "uuid", b"uuid"]) -> None: ...

global___IntentInput = IntentInput

@typing.final
class Relation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARENTS_FIELD_NUMBER: builtins.int
    CHILDREN_FIELD_NUMBER: builtins.int
    PEERS_FIELD_NUMBER: builtins.int
    @property
    def parents(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """list of ids of  parent intents"""

    @property
    def children(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """list of ids of  child intents"""

    @property
    def peers(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """list of ids of same level intents"""

    def __init__(
        self,
        *,
        parents: collections.abc.Iterable[builtins.str] | None = ...,
        children: collections.abc.Iterable[builtins.str] | None = ...,
        peers: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["children", b"children", "parents", b"parents", "peers", b"peers"]) -> None: ...

global___Relation = Relation

@typing.final
class Keyword(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEYWORD_FIELD_NUMBER: builtins.int
    PRIORITY_FIELD_NUMBER: builtins.int
    keyword: builtins.str
    """a keyword for an intent"""
    priority: builtins.int
    """the priority for the keyword"""
    def __init__(
        self,
        *,
        keyword: builtins.str = ...,
        priority: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["keyword", b"keyword", "priority", b"priority"]) -> None: ...

global___Keyword = Keyword

@typing.final
class UpdateContentRequest(google.protobuf.message.Message):
    """Adds or updates content to the vector database
    if id of the intent is not set, a new intent is created for the project
    if an id is set: first check if that id already exists and update it
    if the id doesn't exist: create the intent with the given id.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INTENTS_FIELD_NUMBER: builtins.int
    @property
    def intents(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent]: ...
    def __init__(
        self,
        *,
        intents: collections.abc.Iterable[global___Intent] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["intents", b"intents"]) -> None: ...

global___UpdateContentRequest = UpdateContentRequest

@typing.final
class UpdateContentResponse(google.protobuf.message.Message):
    """Response for add content"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INTENT_IDS_FIELD_NUMBER: builtins.int
    @property
    def intent_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Status of the update"""

    def __init__(
        self,
        *,
        intent_ids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["intent_ids", b"intent_ids"]) -> None: ...

global___UpdateContentResponse = UpdateContentResponse

@typing.final
class RemoveContentRequest(google.protobuf.message.Message):
    """Removes content from the vector database"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    """"""
    @property
    def id(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """ID of the Document to be removed"""

    def __init__(
        self,
        *,
        id: collections.abc.Iterable[builtins.str] | None = ...,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id", "project_id", b"project_id"]) -> None: ...

global___RemoveContentRequest = RemoveContentRequest

@typing.final
class RemoveContentResponse(google.protobuf.message.Message):
    """Response for remove content"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___RemoveContentResponse = RemoveContentResponse

@typing.final
class GetContentRequest(google.protobuf.message.Message):
    """Request for content"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROMPT_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    NUM_RESULTS_FIELD_NUMBER: builtins.int
    THRESHOLD_FIELD_NUMBER: builtins.int
    FILTERS_FIELD_NUMBER: builtins.int
    CHAT_ID_FIELD_NUMBER: builtins.int
    prompt: builtins.str
    """Prompt for the content to be retrieved"""
    project_id: builtins.str
    """Meta data for the content to be retrieved"""
    num_results: builtins.int
    """The number of results to be returned"""
    threshold: builtins.float
    """The threshold for the results to be returned"""
    chat_id: builtins.str
    """Chat id for context"""
    @property
    def filters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ContentFilter]:
        """Content Filters"""

    def __init__(
        self,
        *,
        prompt: builtins.str = ...,
        project_id: builtins.str = ...,
        num_results: builtins.int = ...,
        threshold: builtins.float = ...,
        filters: collections.abc.Iterable[global___ContentFilter] | None = ...,
        chat_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["chat_id", b"chat_id", "filters", b"filters", "num_results", b"num_results", "project_id", b"project_id", "prompt", b"prompt", "threshold", b"threshold"]) -> None: ...

global___GetContentRequest = GetContentRequest

@typing.final
class GetContentResponse(google.protobuf.message.Message):
    """Response for content"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ITEMS_FIELD_NUMBER: builtins.int
    CHAT_ID_FIELD_NUMBER: builtins.int
    chat_id: builtins.str
    """The Chat ID that was sent to the server with the get content request"""
    @property
    def items(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ContentResponseItem]:
        """List of intents"""

    def __init__(
        self,
        *,
        items: collections.abc.Iterable[global___ContentResponseItem] | None = ...,
        chat_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["chat_id", b"chat_id", "items", b"items"]) -> None: ...

global___GetContentResponse = GetContentResponse

@typing.final
class ContentFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FIELD_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    OPERATOR_FIELD_NUMBER: builtins.int
    LABEL_FIELD_NUMBER: builtins.int
    field: builtins.str
    """The field to be filtered"""
    value: builtins.str
    """The value to be filtered"""
    operator: builtins.str
    """Operator"""
    @property
    def label(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The label to be used for filtering"""

    def __init__(
        self,
        *,
        field: builtins.str = ...,
        value: builtins.str = ...,
        operator: builtins.str = ...,
        label: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["field", b"field", "label", b"label", "operator", b"operator", "value", b"value"]) -> None: ...

global___ContentFilter = ContentFilter

@typing.final
class ContentResponseItem(google.protobuf.message.Message):
    """Response item for content"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    SCORE_FIELD_NUMBER: builtins.int
    INTENT_FIELD_NUMBER: builtins.int
    FALLBACK_MESSAGE_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Id of the intent's input that represents this match"""
    score: builtins.float
    """Score of the content"""
    fallback_message: builtins.str
    """fallbackmessage, gets set, when no intent was found in the search"""
    @property
    def intent(self) -> global___Intent:
        """The actual intent"""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        score: builtins.float = ...,
        intent: global___Intent | None = ...,
        fallback_message: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["intent", b"intent"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["fallback_message", b"fallback_message", "id", b"id", "intent", b"intent", "score", b"score"]) -> None: ...

global___ContentResponseItem = ContentResponseItem

@typing.final
class GetIntentsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["project_id", b"project_id"]) -> None: ...

global___GetIntentsRequest = GetIntentsRequest

@typing.final
class GetIntentsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INTENT_FIELD_NUMBER: builtins.int
    @property
    def intent(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Intent]: ...
    def __init__(
        self,
        *,
        intent: collections.abc.Iterable[global___Intent] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["intent", b"intent"]) -> None: ...

global___GetIntentsResponse = GetIntentsResponse

@typing.final
class GetScoreLimitsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROJECT_ID_FIELD_NUMBER: builtins.int
    TEST_SENTENCES_UPPER_LIMIT_FIELD_NUMBER: builtins.int
    TEST_SENTENCES_LOWER_LIMIT_FIELD_NUMBER: builtins.int
    project_id: builtins.str
    """ID of the project to get the score Limits from"""
    @property
    def test_sentences_upper_limit(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of sentences to test for the upper limit"""

    @property
    def test_sentences_lower_limit(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of sentences to test for the lower limit"""

    def __init__(
        self,
        *,
        project_id: builtins.str = ...,
        test_sentences_upper_limit: collections.abc.Iterable[builtins.str] | None = ...,
        test_sentences_lower_limit: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["project_id", b"project_id", "test_sentences_lower_limit", b"test_sentences_lower_limit", "test_sentences_upper_limit", b"test_sentences_upper_limit"]) -> None: ...

global___GetScoreLimitsRequest = GetScoreLimitsRequest

@typing.final
class GetScoreLimitsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MIN_THRESHOLD_FIELD_NUMBER: builtins.int
    MAX_THRESHOLD_FIELD_NUMBER: builtins.int
    min_threshold: builtins.float
    """The minimum threshold determined by random sentences"""
    max_threshold: builtins.float
    """The max threshold determined by using original input sentences for the
    intents
    """
    def __init__(
        self,
        *,
        min_threshold: builtins.float = ...,
        max_threshold: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["max_threshold", b"max_threshold", "min_threshold", b"min_threshold"]) -> None: ...

global___GetScoreLimitsResponse = GetScoreLimitsResponse
