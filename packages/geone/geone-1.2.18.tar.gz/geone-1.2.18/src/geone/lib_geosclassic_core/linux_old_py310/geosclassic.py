# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_geosclassic')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_geosclassic')
    _geosclassic = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_geosclassic', [dirname(__file__)])
        except ImportError:
            import _geosclassic
            return _geosclassic
        try:
            _mod = imp.load_module('_geosclassic', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _geosclassic = swig_import_helper()
    del swig_import_helper
else:
    import _geosclassic
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0


def fopen(filename, mode):
    return _geosclassic.fopen(filename, mode)
fopen = _geosclassic.fopen

def fclose(f):
    return _geosclassic.fclose(f)
fclose = _geosclassic.fclose
MPDS_VERSION_NUMBER = _geosclassic.MPDS_VERSION_NUMBER
MPDS_BUILD_NUMBER = _geosclassic.MPDS_BUILD_NUMBER
FALSE = _geosclassic.FALSE
TRUE = _geosclassic.TRUE
MPDS_FORMAT_DEFAULT = _geosclassic.MPDS_FORMAT_DEFAULT
MPDS_FORMAT_WIDTH = _geosclassic.MPDS_FORMAT_WIDTH
MPDS_FORMAT_PRECISION = _geosclassic.MPDS_FORMAT_PRECISION
MPDS_FILENAME_LENGTH = _geosclassic.MPDS_FILENAME_LENGTH
MPDS_VARNAME_LENGTH = _geosclassic.MPDS_VARNAME_LENGTH
MPDS_LINE_LENGTH = _geosclassic.MPDS_LINE_LENGTH
MPDS_WORD_LENGTH = _geosclassic.MPDS_WORD_LENGTH
MPDS_MISSING_VALUE = _geosclassic.MPDS_MISSING_VALUE
MPDS_INEQUALITY_DATA_SUFFIX_FOR_MIN = _geosclassic.MPDS_INEQUALITY_DATA_SUFFIX_FOR_MIN
MPDS_INEQUALITY_DATA_SUFFIX_FOR_MAX = _geosclassic.MPDS_INEQUALITY_DATA_SUFFIX_FOR_MAX
MPDS_JOB_VARNAME = _geosclassic.MPDS_JOB_VARNAME
MPDS_JOB_DATA_LOCATION = _geosclassic.MPDS_JOB_DATA_LOCATION
MPDS_JOB_DATA_VALUE = _geosclassic.MPDS_JOB_DATA_VALUE
MPDS_SHIFT_FACTOR_FOR_POINT = _geosclassic.MPDS_SHIFT_FACTOR_FOR_POINT
MPDS_MAX_NB_VALUE = _geosclassic.MPDS_MAX_NB_VALUE
MPDS_EPSILON_HARD = _geosclassic.MPDS_EPSILON_HARD
MPDS_EPSILON = _geosclassic.MPDS_EPSILON
MPDS_EPSILON_SOFT = _geosclassic.MPDS_EPSILON_SOFT
MPDS_INFINITY = _geosclassic.MPDS_INFINITY
MPDS_CHUNK = _geosclassic.MPDS_CHUNK
MPDS_NB_AVAILABLE_DISTANCE = _geosclassic.MPDS_NB_AVAILABLE_DISTANCE
MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_1D = _geosclassic.MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_1D
MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_2D = _geosclassic.MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_2D
MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_3D = _geosclassic.MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_3D
MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_1D = _geosclassic.MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_1D
MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_2D = _geosclassic.MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_2D
MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_3D = _geosclassic.MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_3D
MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_0 = _geosclassic.MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_0
MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_1 = _geosclassic.MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_1
MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_2 = _geosclassic.MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_2
MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_3 = _geosclassic.MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_3
MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_4 = _geosclassic.MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_4
MPDS_POST_PROCESSING_MAX_SCAN_FRACTION_DEFAULT = _geosclassic.MPDS_POST_PROCESSING_MAX_SCAN_FRACTION_DEFAULT
MPDS_POST_PROCESSING_TOLERANCE_DEFAULT = _geosclassic.MPDS_POST_PROCESSING_TOLERANCE_DEFAULT
MPDS_POST_PROCESSING_SEED_INCREMENT = _geosclassic.MPDS_POST_PROCESSING_SEED_INCREMENT
MPDS_SIMULATION_GRID_AS_TRAINING_IMAGE = _geosclassic.MPDS_SIMULATION_GRID_AS_TRAINING_IMAGE
MPDS_USE_TRAINING_IMAGE_FOR_CONNECTIVITY = _geosclassic.MPDS_USE_TRAINING_IMAGE_FOR_CONNECTIVITY
MPDS_PREFIX_FOR_TEMPORARY_FILE = _geosclassic.MPDS_PREFIX_FOR_TEMPORARY_FILE
MPDS_PREFIX_FOR_OCCURRENCE_PROPORTION = _geosclassic.MPDS_PREFIX_FOR_OCCURRENCE_PROPORTION
MPDS_SUFFIX_FOR_REALIZATION = _geosclassic.MPDS_SUFFIX_FOR_REALIZATION
MPDS_SUFFIX_FOR_CLOSING = _geosclassic.MPDS_SUFFIX_FOR_CLOSING
MPDS_SUFFIX_FOR_CONNECTIVITY_FUNCTION = _geosclassic.MPDS_SUFFIX_FOR_CONNECTIVITY_FUNCTION
MPDS_SUFFIX_FOR_CORRELOGRAM = _geosclassic.MPDS_SUFFIX_FOR_CORRELOGRAM
MPDS_SUFFIX_FOR_COVARIANCE = _geosclassic.MPDS_SUFFIX_FOR_COVARIANCE
MPDS_SUFFIX_FOR_COVARIANCE_NOT_CENTRED = _geosclassic.MPDS_SUFFIX_FOR_COVARIANCE_NOT_CENTRED
MPDS_SUFFIX_FOR_DILATING = _geosclassic.MPDS_SUFFIX_FOR_DILATING
MPDS_SUFFIX_FOR_DISTANCE_DILATING = _geosclassic.MPDS_SUFFIX_FOR_DISTANCE_DILATING
MPDS_SUFFIX_FOR_DISTANCE_L1 = _geosclassic.MPDS_SUFFIX_FOR_DISTANCE_L1
MPDS_SUFFIX_FOR_DISTANCE_L1_SIGN = _geosclassic.MPDS_SUFFIX_FOR_DISTANCE_L1_SIGN
MPDS_SUFFIX_FOR_DISTANCE_L2 = _geosclassic.MPDS_SUFFIX_FOR_DISTANCE_L2
MPDS_SUFFIX_FOR_DISTANCE_L2_SIGN = _geosclassic.MPDS_SUFFIX_FOR_DISTANCE_L2_SIGN
MPDS_SUFFIX_FOR_ERODING = _geosclassic.MPDS_SUFFIX_FOR_ERODING
MPDS_SUFFIX_FOR_GEOBODY = _geosclassic.MPDS_SUFFIX_FOR_GEOBODY
MPDS_SUFFIX_FOR_INDICATOR = _geosclassic.MPDS_SUFFIX_FOR_INDICATOR
MPDS_SUFFIX_FOR_MOVING_SN_AVERAGE = _geosclassic.MPDS_SUFFIX_FOR_MOVING_SN_AVERAGE
MPDS_SUFFIX_FOR_MOVING_BOX_AVERAGE = _geosclassic.MPDS_SUFFIX_FOR_MOVING_BOX_AVERAGE
MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_EXP = _geosclassic.MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_EXP
MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_LAP = _geosclassic.MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_LAP
MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_RED = _geosclassic.MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_RED
MPDS_SUFFIX_FOR_PYRAMID_LEVEL = _geosclassic.MPDS_SUFFIX_FOR_PYRAMID_LEVEL
MPDS_SUFFIX_FOR_OPENING = _geosclassic.MPDS_SUFFIX_FOR_OPENING
MPDS_SUFFIX_FOR_QC_INDICATOR_SCALE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_SCALE
MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_MEAN_AND_SD_SCALE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_MEAN_AND_SD_SCALE
MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_QUANTILE_SCALE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_QUANTILE_SCALE
MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_DETAIL_SCALE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_DETAIL_SCALE
MPDS_SUFFIX_FOR_QC_INDICATOR_ALL_PAIRS_SCALE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_ALL_PAIRS_SCALE
MPDS_SUFFIX_FOR_QC_INDICATOR_ENSEMBLE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_ENSEMBLE
MPDS_SUFFIX_FOR_QC_MPH_PATTERN_COUNT_SUM_ENSEMBLE = _geosclassic.MPDS_SUFFIX_FOR_QC_MPH_PATTERN_COUNT_SUM_ENSEMBLE
MPDS_SUFFIX_FOR_QC_ENSEMBLE_ZONE = _geosclassic.MPDS_SUFFIX_FOR_QC_ENSEMBLE_ZONE
MPDS_SUFFIX_FOR_QC_ENSEMBLE_ZONE_DESCRIPTION = _geosclassic.MPDS_SUFFIX_FOR_QC_ENSEMBLE_ZONE_DESCRIPTION
MPDS_SUFFIX_FOR_QC_ENSEMBLE_DESCRIPTION = _geosclassic.MPDS_SUFFIX_FOR_QC_ENSEMBLE_DESCRIPTION
MPDS_SUFFIX_FOR_QC_IMAGE_PATTERN_DISTANCE = _geosclassic.MPDS_SUFFIX_FOR_QC_IMAGE_PATTERN_DISTANCE
MPDS_SUFFIX_FOR_TRANSIOGRAM = _geosclassic.MPDS_SUFFIX_FOR_TRANSIOGRAM
MPDS_SUFFIX_FOR_VARIOGRAM = _geosclassic.MPDS_SUFFIX_FOR_VARIOGRAM
MPDS_EXTENSION_FOR_IMAGE_FILE = _geosclassic.MPDS_EXTENSION_FOR_IMAGE_FILE
MPDS_EXTENSION_FOR_TEXT_FILE = _geosclassic.MPDS_EXTENSION_FOR_TEXT_FILE
MPDS_EXTENSION_FOR_INPUT_FILE = _geosclassic.MPDS_EXTENSION_FOR_INPUT_FILE
MPDS_EXTENSION_FOR_BLOCK_DATA_FILE = _geosclassic.MPDS_EXTENSION_FOR_BLOCK_DATA_FILE
MPDS_NAME_FOR_PGM_VAR = _geosclassic.MPDS_NAME_FOR_PGM_VAR
MPDS_NAME_FOR_PPM_VAR0 = _geosclassic.MPDS_NAME_FOR_PPM_VAR0
MPDS_NAME_FOR_PPM_VAR1 = _geosclassic.MPDS_NAME_FOR_PPM_VAR1
MPDS_NAME_FOR_PPM_VAR2 = _geosclassic.MPDS_NAME_FOR_PPM_VAR2
MPDS_NAME_FOR_PATH_INDEX_VAR = _geosclassic.MPDS_NAME_FOR_PATH_INDEX_VAR
MPDS_NAME_FOR_ERROR_VAR = _geosclassic.MPDS_NAME_FOR_ERROR_VAR
MPDS_NAME_FOR_TI_GRID_NODE_INDEX_VAR = _geosclassic.MPDS_NAME_FOR_TI_GRID_NODE_INDEX_VAR
MPDS_NAME_FOR_TI_INDEX_VAR = _geosclassic.MPDS_NAME_FOR_TI_INDEX_VAR
MPDS_NAME_FOR_SECTION_TYPE = _geosclassic.MPDS_NAME_FOR_SECTION_TYPE
MPDS_NAME_FOR_SECTION_STEP = _geosclassic.MPDS_NAME_FOR_SECTION_STEP
MPDS_NB_DIGIT_FOR_REALIZATION_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_REALIZATION_NUMBER
MPDS_NB_DIGIT_FOR_LEVEL_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_LEVEL_NUMBER
MPDS_NB_DIGIT_FOR_INDEX_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_INDEX_NUMBER
MPDS_NB_DIGIT_FOR_SCALE_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_SCALE_NUMBER
MPDS_NB_DIGIT_FOR_ZONE_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_ZONE_NUMBER
MPDS_NB_DIGIT_FOR_VARIABLE_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_VARIABLE_NUMBER
MPDS_NB_DIGIT_FOR_QC_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_QC_NUMBER
MPDS_NB_DIGIT_FOR_ENSEMBLE_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_ENSEMBLE_NUMBER
MPDS_NB_DIGIT_FOR_VALUE_NAME = _geosclassic.MPDS_NB_DIGIT_FOR_VALUE_NAME
MPDS_VTK_VERSION_NUMBER = _geosclassic.MPDS_VTK_VERSION_NUMBER
MPDS_SEPARATION_LINE_EQUAL = _geosclassic.MPDS_SEPARATION_LINE_EQUAL
MPDS_SEPARATION_LINE_STAR = _geosclassic.MPDS_SEPARATION_LINE_STAR
MPDS_SEPARATION_LINE_MINUS = _geosclassic.MPDS_SEPARATION_LINE_MINUS
MPDS_SEPARATION_LINE_PLUS = _geosclassic.MPDS_SEPARATION_LINE_PLUS
MPDS_NODEPATH_WEIGHT_MIN = _geosclassic.MPDS_NODEPATH_WEIGHT_MIN
MPDS_NODEPATH_A0_MIN = _geosclassic.MPDS_NODEPATH_A0_MIN
MPDS_NODEPATH_A0_MAX = _geosclassic.MPDS_NODEPATH_A0_MAX
MPDS_MIN_SPACING = _geosclassic.MPDS_MIN_SPACING
MPDS_MAX_NSIMVAR = _geosclassic.MPDS_MAX_NSIMVAR
MPDS_MAX_NVAR = _geosclassic.MPDS_MAX_NVAR
MPDS_MAX_NXYZ = _geosclassic.MPDS_MAX_NXYZ
MPDS_MAX_NXYZV = _geosclassic.MPDS_MAX_NXYZV
MPDS_MIN_ANISOTROPY_RATIO = _geosclassic.MPDS_MIN_ANISOTROPY_RATIO
MPDS_MAX_NTRAINIMAGE = _geosclassic.MPDS_MAX_NTRAINIMAGE
MPDS_MAX_TRAINVALUERANGEEXTENSIONMAX = _geosclassic.MPDS_MAX_TRAINVALUERANGEEXTENSIONMAX
MPDS_MAX_TRAIN_MISSING_VALUE_PROPORTION_FOR_WARNING = _geosclassic.MPDS_MAX_TRAIN_MISSING_VALUE_PROPORTION_FOR_WARNING
MPDS_MIN_NNEIGHBORINGNODE = _geosclassic.MPDS_MIN_NNEIGHBORINGNODE
MPDS_MAX_NNEIGHBORINGNODE = _geosclassic.MPDS_MAX_NNEIGHBORINGNODE
MPDS_MAX_NNEIGHBORINGNODE_ALL_VAR = _geosclassic.MPDS_MAX_NNEIGHBORINGNODE_ALL_VAR
MPDS_MIN_MAX_PROP_INEQUALITY_NODE = _geosclassic.MPDS_MIN_MAX_PROP_INEQUALITY_NODE
MPDS_MAX_MAX_PROP_INEQUALITY_NODE = _geosclassic.MPDS_MAX_MAX_PROP_INEQUALITY_NODE
MPDS_MIN_NEIGHBORINGNODE_DENSITY = _geosclassic.MPDS_MIN_NEIGHBORINGNODE_DENSITY
MPDS_MAX_NEIGHBORINGNODE_DENSITY = _geosclassic.MPDS_MAX_NEIGHBORINGNODE_DENSITY
MPDS_MIN_DISTANCETHRESHOLD = _geosclassic.MPDS_MIN_DISTANCETHRESHOLD
MPDS_MAX_DISTANCETHRESHOLD = _geosclassic.MPDS_MAX_DISTANCETHRESHOLD
MPDS_MIN_MAXSCANFRACTION = _geosclassic.MPDS_MIN_MAXSCANFRACTION
MPDS_MAX_MAXSCANFRACTION = _geosclassic.MPDS_MAX_MAXSCANFRACTION
MPDS_MIN_MAXSCANFRACTION_VARIABLE_TRANSFORM = _geosclassic.MPDS_MIN_MAXSCANFRACTION_VARIABLE_TRANSFORM
MPDS_MAX_MAXSCANFRACTION_VARIABLE_TRANSFORM = _geosclassic.MPDS_MAX_MAXSCANFRACTION_VARIABLE_TRANSFORM
MPDS_MIN_TOLERANCE = _geosclassic.MPDS_MIN_TOLERANCE
MPDS_MAX_TOLERANCE = _geosclassic.MPDS_MAX_TOLERANCE
MPDS_MIN_TARGET_INTERVAL_LENGTH = _geosclassic.MPDS_MIN_TARGET_INTERVAL_LENGTH
MPDS_MAX_NPOSTPROCESSINGPATHMAX = _geosclassic.MPDS_MAX_NPOSTPROCESSINGPATHMAX
MPDS_MAX_NREALIZATION = _geosclassic.MPDS_MAX_NREALIZATION
MPDS_MAX_RATIO_SEARCHNEIGHBORHOOD_SIZE_OVER_TI_SIZE = _geosclassic.MPDS_MAX_RATIO_SEARCHNEIGHBORHOOD_SIZE_OVER_TI_SIZE
MPDS_SEARCHNEIGHBORHOOD_RADIUS_RANGE_FACTOR = _geosclassic.MPDS_SEARCHNEIGHBORHOOD_RADIUS_RANGE_FACTOR
MPDS_APPROX_RANGE_TOLERANCE = _geosclassic.MPDS_APPROX_RANGE_TOLERANCE
MPDS_MIN_HOMOTHETY_RATIO = _geosclassic.MPDS_MIN_HOMOTHETY_RATIO
MPDS_MAX_HOMOTHETY_RATIO = _geosclassic.MPDS_MAX_HOMOTHETY_RATIO
MPDS_MIN_SOFT_PROBABILITY_NCLASS = _geosclassic.MPDS_MIN_SOFT_PROBABILITY_NCLASS
MPDS_MAX_SOFT_PROBABILITY_NCLASS = _geosclassic.MPDS_MAX_SOFT_PROBABILITY_NCLASS
MPDS_GLOBAL_PROBABILITY_SYNC_STEP_MIN = _geosclassic.MPDS_GLOBAL_PROBABILITY_SYNC_STEP_MIN
MPDS_GLOBAL_PROBABILITY_SYNC_STEP_MAX = _geosclassic.MPDS_GLOBAL_PROBABILITY_SYNC_STEP_MAX
MPDS_GLOBAL_PROBABILITY_SYNC_STEP_FACTOR = _geosclassic.MPDS_GLOBAL_PROBABILITY_SYNC_STEP_FACTOR
MPDS_MAX_RATIO_TEMPLATE_SIZE_PRODUCT_OVER_IMAGE_SIZE_PRODUCT = _geosclassic.MPDS_MAX_RATIO_TEMPLATE_SIZE_PRODUCT_OVER_IMAGE_SIZE_PRODUCT
MPDS_TOLEREANCE_ON_SUM_SOFT_PROBABILITY = _geosclassic.MPDS_TOLEREANCE_ON_SUM_SOFT_PROBABILITY
MPDS_MIN_PROBABILITY_CONSTRAINT_CONSTANT_THRESHOLD = _geosclassic.MPDS_MIN_PROBABILITY_CONSTRAINT_CONSTANT_THRESHOLD
MPDS_MAX_PROBABILITY_CONSTRAINT_CONSTANT_THRESHOLD = _geosclassic.MPDS_MAX_PROBABILITY_CONSTRAINT_CONSTANT_THRESHOLD
MPDS_MIN_PROBABILITY_CONSTRAINT_INDICATOR_VARIANCE = _geosclassic.MPDS_MIN_PROBABILITY_CONSTRAINT_INDICATOR_VARIANCE
MPDS_MAX_PROBABILITY_CONSTRAINT_MISMATCH = _geosclassic.MPDS_MAX_PROBABILITY_CONSTRAINT_MISMATCH
MPDS_LOCAL_PROBABILITY_CONSTRAINT_TABLE_LENGTH = _geosclassic.MPDS_LOCAL_PROBABILITY_CONSTRAINT_TABLE_LENGTH
MPDS_MIN_CONNECTIVITY_CONSTRAINT_THRESHOLD = _geosclassic.MPDS_MIN_CONNECTIVITY_CONSTRAINT_THRESHOLD
MPDS_MAX_CONNECTIVITY_CONSTRAINT_THRESHOLD = _geosclassic.MPDS_MAX_CONNECTIVITY_CONSTRAINT_THRESHOLD
MPDS_MAX_POWER_PATH_RANDOM_HD_DISTANCE_SUM = _geosclassic.MPDS_MAX_POWER_PATH_RANDOM_HD_DISTANCE_SUM
MPDS_CHANGE_TRANSFORMATION_STEP = _geosclassic.MPDS_CHANGE_TRANSFORMATION_STEP
MPDS_NDYNAMICTHRESHOLDPARAMETERS = _geosclassic.MPDS_NDYNAMICTHRESHOLDPARAMETERS
MPDS_MIN_BLOCK_DATA_LOCAL_VAR = _geosclassic.MPDS_MIN_BLOCK_DATA_LOCAL_VAR
MPDS_MIN_BLOCK_DATA_KERNEL_BANDWIDTH = _geosclassic.MPDS_MIN_BLOCK_DATA_KERNEL_BANDWIDTH
MPDS_MAX_BLOCK_DATA_SAMPLED_REGION = _geosclassic.MPDS_MAX_BLOCK_DATA_SAMPLED_REGION
MPDS_MAX_NB_RANDOM_TRY_FOR_INEQUALITY_DATA = _geosclassic.MPDS_MAX_NB_RANDOM_TRY_FOR_INEQUALITY_DATA
MPDS_PYRAMID_NLEVEL_MAX = _geosclassic.MPDS_PYRAMID_NLEVEL_MAX
MPDS_PYRAMID_FACTOR_MAX_N_NEIGHBOR_MIN = _geosclassic.MPDS_PYRAMID_FACTOR_MAX_N_NEIGHBOR_MIN
MPDS_PYRAMID_FACTOR_MAX_N_NEIGHBOR_MAX = _geosclassic.MPDS_PYRAMID_FACTOR_MAX_N_NEIGHBOR_MAX
MPDS_PYRAMID_FACTOR_DISTANCE_THRESHOLD_MIN = _geosclassic.MPDS_PYRAMID_FACTOR_DISTANCE_THRESHOLD_MIN
MPDS_PYRAMID_FACTOR_DISTANCE_THRESHOLD_MAX = _geosclassic.MPDS_PYRAMID_FACTOR_DISTANCE_THRESHOLD_MAX
MPDS_PYRAMID_FACTOR_MAX_SCAN_FRACTION_MIN = _geosclassic.MPDS_PYRAMID_FACTOR_MAX_SCAN_FRACTION_MIN
MPDS_PYRAMID_FACTOR_MAX_SCAN_FRACTION_MAX = _geosclassic.MPDS_PYRAMID_FACTOR_MAX_SCAN_FRACTION_MAX
MPDS_PYRAMID_REDUCTION_FACTOR_MAX = _geosclassic.MPDS_PYRAMID_REDUCTION_FACTOR_MAX
MPDS_PYRAMID_CATEGORICAL_NCLASS_MAX = _geosclassic.MPDS_PYRAMID_CATEGORICAL_NCLASS_MAX
MPDS_GAUSSIAN_PYRAMID_RED_TOTAL_WEIGHT_MIN = _geosclassic.MPDS_GAUSSIAN_PYRAMID_RED_TOTAL_WEIGHT_MIN
MPDS_GAUSSIAN_PYRAMID_EXP_TOTAL_WEIGHT_MIN = _geosclassic.MPDS_GAUSSIAN_PYRAMID_EXP_TOTAL_WEIGHT_MIN
MPDS_MIN_WEIGHT_PROPORTION_MOVING_BOX_SUM = _geosclassic.MPDS_MIN_WEIGHT_PROPORTION_MOVING_BOX_SUM
MPDS_MISSING_CLASSID = _geosclassic.MPDS_MISSING_CLASSID
MPDS_MIN_MPH_NCLASS = _geosclassic.MPDS_MIN_MPH_NCLASS
MPDS_MAX_MPH_NCLASS = _geosclassic.MPDS_MAX_MPH_NCLASS
MPDS_QC_NZONE_MAX = _geosclassic.MPDS_QC_NZONE_MAX
MPDS_QC_NTRENDVAR_MAX = _geosclassic.MPDS_QC_NTRENDVAR_MAX
MPDS_GRAPH_MAX_NLOOPMAX = _geosclassic.MPDS_GRAPH_MAX_NLOOPMAX
MPDS_GRAPH_MIN_CONNECTIVITY_CHECK_DIST_TO_EDGE_FACTOR = _geosclassic.MPDS_GRAPH_MIN_CONNECTIVITY_CHECK_DIST_TO_EDGE_FACTOR
MPDS_GRAPH_MAX_CONNECTIVITY_CHECK_DIST_TO_EDGE_FACTOR = _geosclassic.MPDS_GRAPH_MAX_CONNECTIVITY_CHECK_DIST_TO_EDGE_FACTOR
MPDS_CONNECTIVITY_GAMMA_VALUE_IF_NO_GEOBODY = _geosclassic.MPDS_CONNECTIVITY_GAMMA_VALUE_IF_NO_GEOBODY
MPDS_PRIME_NUMBER_LIST_SIZE = _geosclassic.MPDS_PRIME_NUMBER_LIST_SIZE
OUTPUT_FILE_NONE = _geosclassic.OUTPUT_FILE_NONE
OUTPUT_FILE_ASCII = _geosclassic.OUTPUT_FILE_ASCII
OUTPUT_FILE_BINARY = _geosclassic.OUTPUT_FILE_BINARY
MPDS_GEOS_CLASSIC_VERSION_NUMBER = _geosclassic.MPDS_GEOS_CLASSIC_VERSION_NUMBER
MPDS_GEOS_CLASSIC_BUILD_NUMBER = _geosclassic.MPDS_GEOS_CLASSIC_BUILD_NUMBER
MPDS_GEOS_CLASSIC_SUFFIX_FOR_REALIZATION = _geosclassic.MPDS_GEOS_CLASSIC_SUFFIX_FOR_REALIZATION
MPDS_GEOS_CLASSIC_SUFFIX_FOR_ESTIMATE = _geosclassic.MPDS_GEOS_CLASSIC_SUFFIX_FOR_ESTIMATE
MPDS_GEOS_CLASSIC_SUFFIX_FOR_ST_DEV = _geosclassic.MPDS_GEOS_CLASSIC_SUFFIX_FOR_ST_DEV
MPDS_GEOS_CLASSIC_SUFFIX_FOR_PROBABILITY = _geosclassic.MPDS_GEOS_CLASSIC_SUFFIX_FOR_PROBABILITY
MPDS_GEOS_CLASSIC_NB_DIGIT_FOR_REALIZATION_NUMBER = _geosclassic.MPDS_GEOS_CLASSIC_NB_DIGIT_FOR_REALIZATION_NUMBER
MPDS_GEOS_CLASSIC_NB_DIGIT_FOR_CATEGORY_INDEX = _geosclassic.MPDS_GEOS_CLASSIC_NB_DIGIT_FOR_CATEGORY_INDEX
MPDS_GEOSCLASSIC_NCATEGORY_MAX = _geosclassic.MPDS_GEOSCLASSIC_NCATEGORY_MAX
MPDS_GEOSCLASSIC_COV_RANGE_MIN = _geosclassic.MPDS_GEOSCLASSIC_COV_RANGE_MIN
MPDS_GEOSCLASSIC_COV_TOTAL_WEIGHT_MIN = _geosclassic.MPDS_GEOSCLASSIC_COV_TOTAL_WEIGHT_MIN
MPDS_GEOSCLASSIC_COV_POWER_MIN = _geosclassic.MPDS_GEOSCLASSIC_COV_POWER_MIN
MPDS_GEOSCLASSIC_COV_POWER_MAX = _geosclassic.MPDS_GEOSCLASSIC_COV_POWER_MAX
MPDS_GEOSCLASSIC_COV_MATERN_NU_MIN = _geosclassic.MPDS_GEOSCLASSIC_COV_MATERN_NU_MIN
MPDS_GEOSCLASSIC_COV_MATERN_NU_MAX = _geosclassic.MPDS_GEOSCLASSIC_COV_MATERN_NU_MAX
MPDS_GEOSCLASSIC_TOLEREANCE_ON_SUM_PROBABILITY = _geosclassic.MPDS_GEOSCLASSIC_TOLEREANCE_ON_SUM_PROBABILITY
MPDS_GEOSCLASSIC_SEARCHRADIUSRELATIVE_MIN = _geosclassic.MPDS_GEOSCLASSIC_SEARCHRADIUSRELATIVE_MIN
MPDS_GEOSCLASSIC_NGIBBSSAMPLERPATH_MIN = _geosclassic.MPDS_GEOSCLASSIC_NGIBBSSAMPLERPATH_MIN
MPDS_GEOSCLASSIC_NGIBBSSAMPLERPATH_MAX = _geosclassic.MPDS_GEOSCLASSIC_NGIBBSSAMPLERPATH_MAX
MPDS_GEOSCLASSIC_MAX_NREALIZATION = _geosclassic.MPDS_GEOSCLASSIC_MAX_NREALIZATION
COV_NUGGET = _geosclassic.COV_NUGGET
COV_SPHERICAL = _geosclassic.COV_SPHERICAL
COV_EXPONENTIAL = _geosclassic.COV_EXPONENTIAL
COV_GAUSSIAN = _geosclassic.COV_GAUSSIAN
COV_LINEAR = _geosclassic.COV_LINEAR
COV_CUBIC = _geosclassic.COV_CUBIC
COV_SINUS_CARDINAL = _geosclassic.COV_SINUS_CARDINAL
COV_GAMMA = _geosclassic.COV_GAMMA
COV_POWER = _geosclassic.COV_POWER
COV_EXPONENTIAL_GENERALIZED = _geosclassic.COV_EXPONENTIAL_GENERALIZED
COV_MATERN = _geosclassic.COV_MATERN
class mpds_covModelElem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mpds_covModelElem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mpds_covModelElem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["covModelType"] = _geosclassic.mpds_covModelElem_covModelType_set
    __swig_getmethods__["covModelType"] = _geosclassic.mpds_covModelElem_covModelType_get
    if _newclass:
        covModelType = _swig_property(_geosclassic.mpds_covModelElem_covModelType_get, _geosclassic.mpds_covModelElem_covModelType_set)
    __swig_setmethods__["weightImageFlag"] = _geosclassic.mpds_covModelElem_weightImageFlag_set
    __swig_getmethods__["weightImageFlag"] = _geosclassic.mpds_covModelElem_weightImageFlag_get
    if _newclass:
        weightImageFlag = _swig_property(_geosclassic.mpds_covModelElem_weightImageFlag_get, _geosclassic.mpds_covModelElem_weightImageFlag_set)
    __swig_setmethods__["rxImageFlag"] = _geosclassic.mpds_covModelElem_rxImageFlag_set
    __swig_getmethods__["rxImageFlag"] = _geosclassic.mpds_covModelElem_rxImageFlag_get
    if _newclass:
        rxImageFlag = _swig_property(_geosclassic.mpds_covModelElem_rxImageFlag_get, _geosclassic.mpds_covModelElem_rxImageFlag_set)
    __swig_setmethods__["ryImageFlag"] = _geosclassic.mpds_covModelElem_ryImageFlag_set
    __swig_getmethods__["ryImageFlag"] = _geosclassic.mpds_covModelElem_ryImageFlag_get
    if _newclass:
        ryImageFlag = _swig_property(_geosclassic.mpds_covModelElem_ryImageFlag_get, _geosclassic.mpds_covModelElem_ryImageFlag_set)
    __swig_setmethods__["rzImageFlag"] = _geosclassic.mpds_covModelElem_rzImageFlag_set
    __swig_getmethods__["rzImageFlag"] = _geosclassic.mpds_covModelElem_rzImageFlag_get
    if _newclass:
        rzImageFlag = _swig_property(_geosclassic.mpds_covModelElem_rzImageFlag_get, _geosclassic.mpds_covModelElem_rzImageFlag_set)
    __swig_setmethods__["sImageFlag"] = _geosclassic.mpds_covModelElem_sImageFlag_set
    __swig_getmethods__["sImageFlag"] = _geosclassic.mpds_covModelElem_sImageFlag_get
    if _newclass:
        sImageFlag = _swig_property(_geosclassic.mpds_covModelElem_sImageFlag_get, _geosclassic.mpds_covModelElem_sImageFlag_set)
    __swig_setmethods__["weightValue"] = _geosclassic.mpds_covModelElem_weightValue_set
    __swig_getmethods__["weightValue"] = _geosclassic.mpds_covModelElem_weightValue_get
    if _newclass:
        weightValue = _swig_property(_geosclassic.mpds_covModelElem_weightValue_get, _geosclassic.mpds_covModelElem_weightValue_set)
    __swig_setmethods__["rxValue"] = _geosclassic.mpds_covModelElem_rxValue_set
    __swig_getmethods__["rxValue"] = _geosclassic.mpds_covModelElem_rxValue_get
    if _newclass:
        rxValue = _swig_property(_geosclassic.mpds_covModelElem_rxValue_get, _geosclassic.mpds_covModelElem_rxValue_set)
    __swig_setmethods__["ryValue"] = _geosclassic.mpds_covModelElem_ryValue_set
    __swig_getmethods__["ryValue"] = _geosclassic.mpds_covModelElem_ryValue_get
    if _newclass:
        ryValue = _swig_property(_geosclassic.mpds_covModelElem_ryValue_get, _geosclassic.mpds_covModelElem_ryValue_set)
    __swig_setmethods__["rzValue"] = _geosclassic.mpds_covModelElem_rzValue_set
    __swig_getmethods__["rzValue"] = _geosclassic.mpds_covModelElem_rzValue_get
    if _newclass:
        rzValue = _swig_property(_geosclassic.mpds_covModelElem_rzValue_get, _geosclassic.mpds_covModelElem_rzValue_set)
    __swig_setmethods__["sValue"] = _geosclassic.mpds_covModelElem_sValue_set
    __swig_getmethods__["sValue"] = _geosclassic.mpds_covModelElem_sValue_get
    if _newclass:
        sValue = _swig_property(_geosclassic.mpds_covModelElem_sValue_get, _geosclassic.mpds_covModelElem_sValue_set)
    __swig_setmethods__["weightImage"] = _geosclassic.mpds_covModelElem_weightImage_set
    __swig_getmethods__["weightImage"] = _geosclassic.mpds_covModelElem_weightImage_get
    if _newclass:
        weightImage = _swig_property(_geosclassic.mpds_covModelElem_weightImage_get, _geosclassic.mpds_covModelElem_weightImage_set)
    __swig_setmethods__["rxImage"] = _geosclassic.mpds_covModelElem_rxImage_set
    __swig_getmethods__["rxImage"] = _geosclassic.mpds_covModelElem_rxImage_get
    if _newclass:
        rxImage = _swig_property(_geosclassic.mpds_covModelElem_rxImage_get, _geosclassic.mpds_covModelElem_rxImage_set)
    __swig_setmethods__["ryImage"] = _geosclassic.mpds_covModelElem_ryImage_set
    __swig_getmethods__["ryImage"] = _geosclassic.mpds_covModelElem_ryImage_get
    if _newclass:
        ryImage = _swig_property(_geosclassic.mpds_covModelElem_ryImage_get, _geosclassic.mpds_covModelElem_ryImage_set)
    __swig_setmethods__["rzImage"] = _geosclassic.mpds_covModelElem_rzImage_set
    __swig_getmethods__["rzImage"] = _geosclassic.mpds_covModelElem_rzImage_get
    if _newclass:
        rzImage = _swig_property(_geosclassic.mpds_covModelElem_rzImage_get, _geosclassic.mpds_covModelElem_rzImage_set)
    __swig_setmethods__["sImage"] = _geosclassic.mpds_covModelElem_sImage_set
    __swig_getmethods__["sImage"] = _geosclassic.mpds_covModelElem_sImage_get
    if _newclass:
        sImage = _swig_property(_geosclassic.mpds_covModelElem_sImage_get, _geosclassic.mpds_covModelElem_sImage_set)

    def __init__(self):
        this = _geosclassic.new_mpds_covModelElem()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _geosclassic.delete_mpds_covModelElem
    __del__ = lambda self: None
mpds_covModelElem_swigregister = _geosclassic.mpds_covModelElem_swigregister
mpds_covModelElem_swigregister(mpds_covModelElem)
cvar = _geosclassic.cvar
stdout = cvar.stdout

class mpds_covModel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mpds_covModel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mpds_covModel, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nelem"] = _geosclassic.mpds_covModel_nelem_set
    __swig_getmethods__["nelem"] = _geosclassic.mpds_covModel_nelem_get
    if _newclass:
        nelem = _swig_property(_geosclassic.mpds_covModel_nelem_get, _geosclassic.mpds_covModel_nelem_set)
    __swig_setmethods__["covModelElem"] = _geosclassic.mpds_covModel_covModelElem_set
    __swig_getmethods__["covModelElem"] = _geosclassic.mpds_covModel_covModelElem_get
    if _newclass:
        covModelElem = _swig_property(_geosclassic.mpds_covModel_covModelElem_get, _geosclassic.mpds_covModel_covModelElem_set)
    __swig_setmethods__["angle1ImageFlag"] = _geosclassic.mpds_covModel_angle1ImageFlag_set
    __swig_getmethods__["angle1ImageFlag"] = _geosclassic.mpds_covModel_angle1ImageFlag_get
    if _newclass:
        angle1ImageFlag = _swig_property(_geosclassic.mpds_covModel_angle1ImageFlag_get, _geosclassic.mpds_covModel_angle1ImageFlag_set)
    __swig_setmethods__["angle2ImageFlag"] = _geosclassic.mpds_covModel_angle2ImageFlag_set
    __swig_getmethods__["angle2ImageFlag"] = _geosclassic.mpds_covModel_angle2ImageFlag_get
    if _newclass:
        angle2ImageFlag = _swig_property(_geosclassic.mpds_covModel_angle2ImageFlag_get, _geosclassic.mpds_covModel_angle2ImageFlag_set)
    __swig_setmethods__["angle3ImageFlag"] = _geosclassic.mpds_covModel_angle3ImageFlag_set
    __swig_getmethods__["angle3ImageFlag"] = _geosclassic.mpds_covModel_angle3ImageFlag_get
    if _newclass:
        angle3ImageFlag = _swig_property(_geosclassic.mpds_covModel_angle3ImageFlag_get, _geosclassic.mpds_covModel_angle3ImageFlag_set)
    __swig_setmethods__["angle1Value"] = _geosclassic.mpds_covModel_angle1Value_set
    __swig_getmethods__["angle1Value"] = _geosclassic.mpds_covModel_angle1Value_get
    if _newclass:
        angle1Value = _swig_property(_geosclassic.mpds_covModel_angle1Value_get, _geosclassic.mpds_covModel_angle1Value_set)
    __swig_setmethods__["angle2Value"] = _geosclassic.mpds_covModel_angle2Value_set
    __swig_getmethods__["angle2Value"] = _geosclassic.mpds_covModel_angle2Value_get
    if _newclass:
        angle2Value = _swig_property(_geosclassic.mpds_covModel_angle2Value_get, _geosclassic.mpds_covModel_angle2Value_set)
    __swig_setmethods__["angle3Value"] = _geosclassic.mpds_covModel_angle3Value_set
    __swig_getmethods__["angle3Value"] = _geosclassic.mpds_covModel_angle3Value_get
    if _newclass:
        angle3Value = _swig_property(_geosclassic.mpds_covModel_angle3Value_get, _geosclassic.mpds_covModel_angle3Value_set)
    __swig_setmethods__["angle1Image"] = _geosclassic.mpds_covModel_angle1Image_set
    __swig_getmethods__["angle1Image"] = _geosclassic.mpds_covModel_angle1Image_get
    if _newclass:
        angle1Image = _swig_property(_geosclassic.mpds_covModel_angle1Image_get, _geosclassic.mpds_covModel_angle1Image_set)
    __swig_setmethods__["angle2Image"] = _geosclassic.mpds_covModel_angle2Image_set
    __swig_getmethods__["angle2Image"] = _geosclassic.mpds_covModel_angle2Image_get
    if _newclass:
        angle2Image = _swig_property(_geosclassic.mpds_covModel_angle2Image_get, _geosclassic.mpds_covModel_angle2Image_set)
    __swig_setmethods__["angle3Image"] = _geosclassic.mpds_covModel_angle3Image_set
    __swig_getmethods__["angle3Image"] = _geosclassic.mpds_covModel_angle3Image_get
    if _newclass:
        angle3Image = _swig_property(_geosclassic.mpds_covModel_angle3Image_get, _geosclassic.mpds_covModel_angle3Image_set)

    def __init__(self):
        this = _geosclassic.new_mpds_covModel()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _geosclassic.delete_mpds_covModel
    __del__ = lambda self: None
mpds_covModel_swigregister = _geosclassic.mpds_covModel_swigregister
mpds_covModel_swigregister(mpds_covModel)


def MPDSGeosClassicEvaluateCovModel(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSGeosClassicEvaluateCovModel(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSGeosClassicEvaluateCovModel = _geosclassic.MPDSGeosClassicEvaluateCovModel

def MPDSGeosClassicEvaluateCovModelFixParam(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSGeosClassicEvaluateCovModelFixParam(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSGeosClassicEvaluateCovModelFixParam = _geosclassic.MPDSGeosClassicEvaluateCovModelFixParam

def MPDSGeosClassicEvaluateCovModelFixParamNoRotation(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGeosClassicEvaluateCovModelFixParamNoRotation(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSGeosClassicEvaluateCovModelFixParamNoRotation = _geosclassic.MPDSGeosClassicEvaluateCovModelFixParamNoRotation

def MPDSGeosClassicEvaluateCovModelNoRotation(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSGeosClassicEvaluateCovModelNoRotation(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
MPDSGeosClassicEvaluateCovModelNoRotation = _geosclassic.MPDSGeosClassicEvaluateCovModelNoRotation

def MPDSGeosClassicFreeCovModel(arg1):
    return _geosclassic.MPDSGeosClassicFreeCovModel(arg1)
MPDSGeosClassicFreeCovModel = _geosclassic.MPDSGeosClassicFreeCovModel

def MPDSGeosClassicFreeCovModelElem(arg1):
    return _geosclassic.MPDSGeosClassicFreeCovModelElem(arg1)
MPDSGeosClassicFreeCovModelElem = _geosclassic.MPDSGeosClassicFreeCovModelElem

def MPDSGeosClassicInitCovModel(arg1):
    return _geosclassic.MPDSGeosClassicInitCovModel(arg1)
MPDSGeosClassicInitCovModel = _geosclassic.MPDSGeosClassicInitCovModel

def MPDSGeosClassicInitCovModelElem(arg1):
    return _geosclassic.MPDSGeosClassicInitCovModelElem(arg1)
MPDSGeosClassicInitCovModelElem = _geosclassic.MPDSGeosClassicInitCovModelElem

def MPDSGeosClassicPrintCovModel(arg1, arg2, arg3):
    return _geosclassic.MPDSGeosClassicPrintCovModel(arg1, arg2, arg3)
MPDSGeosClassicPrintCovModel = _geosclassic.MPDSGeosClassicPrintCovModel

def MPDSGeosClassicPrintCovModelElem(arg1, arg2, arg3):
    return _geosclassic.MPDSGeosClassicPrintCovModelElem(arg1, arg2, arg3)
MPDSGeosClassicPrintCovModelElem = _geosclassic.MPDSGeosClassicPrintCovModelElem

def MPDSGeosClassicValidateCovModel(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSGeosClassicValidateCovModel(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSGeosClassicValidateCovModel = _geosclassic.MPDSGeosClassicValidateCovModel

def MPDSGeosClassicValidateCovModelElem(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSGeosClassicValidateCovModelElem(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
MPDSGeosClassicValidateCovModelElem = _geosclassic.MPDSGeosClassicValidateCovModelElem
GEOS_CLASSIC_OK = _geosclassic.GEOS_CLASSIC_OK
GEOS_CLASSIC_SK = _geosclassic.GEOS_CLASSIC_SK
GEOS_CLASSIC_SIM_OK = _geosclassic.GEOS_CLASSIC_SIM_OK
GEOS_CLASSIC_SIM_SK = _geosclassic.GEOS_CLASSIC_SIM_SK
GEOS_CLASSIC_OUTPUT_NO_FILE = _geosclassic.GEOS_CLASSIC_OUTPUT_NO_FILE
GEOS_CLASSIC_OUTPUT_ALL_IN_ONE_FILE = _geosclassic.GEOS_CLASSIC_OUTPUT_ALL_IN_ONE_FILE
GEOS_CLASSIC_OUTPUT_SEPARATE_FILE = _geosclassic.GEOS_CLASSIC_OUTPUT_SEPARATE_FILE
class mpds_geosClassicInput(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mpds_geosClassicInput, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mpds_geosClassicInput, name)
    __repr__ = _swig_repr
    __swig_setmethods__["consoleAppFlag"] = _geosclassic.mpds_geosClassicInput_consoleAppFlag_set
    __swig_getmethods__["consoleAppFlag"] = _geosclassic.mpds_geosClassicInput_consoleAppFlag_get
    if _newclass:
        consoleAppFlag = _swig_property(_geosclassic.mpds_geosClassicInput_consoleAppFlag_get, _geosclassic.mpds_geosClassicInput_consoleAppFlag_set)
    __swig_setmethods__["simName"] = _geosclassic.mpds_geosClassicInput_simName_set
    __swig_getmethods__["simName"] = _geosclassic.mpds_geosClassicInput_simName_get
    if _newclass:
        simName = _swig_property(_geosclassic.mpds_geosClassicInput_simName_get, _geosclassic.mpds_geosClassicInput_simName_set)
    __swig_setmethods__["simGrid"] = _geosclassic.mpds_geosClassicInput_simGrid_set
    __swig_getmethods__["simGrid"] = _geosclassic.mpds_geosClassicInput_simGrid_get
    if _newclass:
        simGrid = _swig_property(_geosclassic.mpds_geosClassicInput_simGrid_get, _geosclassic.mpds_geosClassicInput_simGrid_set)
    __swig_setmethods__["varName"] = _geosclassic.mpds_geosClassicInput_varName_set
    __swig_getmethods__["varName"] = _geosclassic.mpds_geosClassicInput_varName_get
    if _newclass:
        varName = _swig_property(_geosclassic.mpds_geosClassicInput_varName_get, _geosclassic.mpds_geosClassicInput_varName_set)
    __swig_setmethods__["formatString"] = _geosclassic.mpds_geosClassicInput_formatString_set
    __swig_getmethods__["formatString"] = _geosclassic.mpds_geosClassicInput_formatString_get
    if _newclass:
        formatString = _swig_property(_geosclassic.mpds_geosClassicInput_formatString_get, _geosclassic.mpds_geosClassicInput_formatString_set)
    __swig_setmethods__["outputMode"] = _geosclassic.mpds_geosClassicInput_outputMode_set
    __swig_getmethods__["outputMode"] = _geosclassic.mpds_geosClassicInput_outputMode_get
    if _newclass:
        outputMode = _swig_property(_geosclassic.mpds_geosClassicInput_outputMode_get, _geosclassic.mpds_geosClassicInput_outputMode_set)
    __swig_setmethods__["outputImageFileName"] = _geosclassic.mpds_geosClassicInput_outputImageFileName_set
    __swig_getmethods__["outputImageFileName"] = _geosclassic.mpds_geosClassicInput_outputImageFileName_get
    if _newclass:
        outputImageFileName = _swig_property(_geosclassic.mpds_geosClassicInput_outputImageFileName_get, _geosclassic.mpds_geosClassicInput_outputImageFileName_set)
    __swig_setmethods__["outputReportFlag"] = _geosclassic.mpds_geosClassicInput_outputReportFlag_set
    __swig_getmethods__["outputReportFlag"] = _geosclassic.mpds_geosClassicInput_outputReportFlag_get
    if _newclass:
        outputReportFlag = _swig_property(_geosclassic.mpds_geosClassicInput_outputReportFlag_get, _geosclassic.mpds_geosClassicInput_outputReportFlag_set)
    __swig_setmethods__["outputReportFileName"] = _geosclassic.mpds_geosClassicInput_outputReportFileName_set
    __swig_getmethods__["outputReportFileName"] = _geosclassic.mpds_geosClassicInput_outputReportFileName_get
    if _newclass:
        outputReportFileName = _swig_property(_geosclassic.mpds_geosClassicInput_outputReportFileName_get, _geosclassic.mpds_geosClassicInput_outputReportFileName_set)
    __swig_setmethods__["computationMode"] = _geosclassic.mpds_geosClassicInput_computationMode_set
    __swig_getmethods__["computationMode"] = _geosclassic.mpds_geosClassicInput_computationMode_get
    if _newclass:
        computationMode = _swig_property(_geosclassic.mpds_geosClassicInput_computationMode_get, _geosclassic.mpds_geosClassicInput_computationMode_set)
    __swig_setmethods__["covModel"] = _geosclassic.mpds_geosClassicInput_covModel_set
    __swig_getmethods__["covModel"] = _geosclassic.mpds_geosClassicInput_covModel_get
    if _newclass:
        covModel = _swig_property(_geosclassic.mpds_geosClassicInput_covModel_get, _geosclassic.mpds_geosClassicInput_covModel_set)
    __swig_setmethods__["searchRadiusRelative"] = _geosclassic.mpds_geosClassicInput_searchRadiusRelative_set
    __swig_getmethods__["searchRadiusRelative"] = _geosclassic.mpds_geosClassicInput_searchRadiusRelative_get
    if _newclass:
        searchRadiusRelative = _swig_property(_geosclassic.mpds_geosClassicInput_searchRadiusRelative_get, _geosclassic.mpds_geosClassicInput_searchRadiusRelative_set)
    __swig_setmethods__["nneighborMax"] = _geosclassic.mpds_geosClassicInput_nneighborMax_set
    __swig_getmethods__["nneighborMax"] = _geosclassic.mpds_geosClassicInput_nneighborMax_get
    if _newclass:
        nneighborMax = _swig_property(_geosclassic.mpds_geosClassicInput_nneighborMax_get, _geosclassic.mpds_geosClassicInput_nneighborMax_set)
    __swig_setmethods__["searchNeighborhoodSortMode"] = _geosclassic.mpds_geosClassicInput_searchNeighborhoodSortMode_set
    __swig_getmethods__["searchNeighborhoodSortMode"] = _geosclassic.mpds_geosClassicInput_searchNeighborhoodSortMode_get
    if _newclass:
        searchNeighborhoodSortMode = _swig_property(_geosclassic.mpds_geosClassicInput_searchNeighborhoodSortMode_get, _geosclassic.mpds_geosClassicInput_searchNeighborhoodSortMode_set)
    __swig_setmethods__["ndataImage"] = _geosclassic.mpds_geosClassicInput_ndataImage_set
    __swig_getmethods__["ndataImage"] = _geosclassic.mpds_geosClassicInput_ndataImage_get
    if _newclass:
        ndataImage = _swig_property(_geosclassic.mpds_geosClassicInput_ndataImage_get, _geosclassic.mpds_geosClassicInput_ndataImage_set)
    __swig_setmethods__["dataImage"] = _geosclassic.mpds_geosClassicInput_dataImage_set
    __swig_getmethods__["dataImage"] = _geosclassic.mpds_geosClassicInput_dataImage_get
    if _newclass:
        dataImage = _swig_property(_geosclassic.mpds_geosClassicInput_dataImage_get, _geosclassic.mpds_geosClassicInput_dataImage_set)
    __swig_setmethods__["ndataPointSet"] = _geosclassic.mpds_geosClassicInput_ndataPointSet_set
    __swig_getmethods__["ndataPointSet"] = _geosclassic.mpds_geosClassicInput_ndataPointSet_get
    if _newclass:
        ndataPointSet = _swig_property(_geosclassic.mpds_geosClassicInput_ndataPointSet_get, _geosclassic.mpds_geosClassicInput_ndataPointSet_set)
    __swig_setmethods__["dataPointSet"] = _geosclassic.mpds_geosClassicInput_dataPointSet_set
    __swig_getmethods__["dataPointSet"] = _geosclassic.mpds_geosClassicInput_dataPointSet_get
    if _newclass:
        dataPointSet = _swig_property(_geosclassic.mpds_geosClassicInput_dataPointSet_get, _geosclassic.mpds_geosClassicInput_dataPointSet_set)
    __swig_setmethods__["maskImageFlag"] = _geosclassic.mpds_geosClassicInput_maskImageFlag_set
    __swig_getmethods__["maskImageFlag"] = _geosclassic.mpds_geosClassicInput_maskImageFlag_get
    if _newclass:
        maskImageFlag = _swig_property(_geosclassic.mpds_geosClassicInput_maskImageFlag_get, _geosclassic.mpds_geosClassicInput_maskImageFlag_set)
    __swig_setmethods__["maskImage"] = _geosclassic.mpds_geosClassicInput_maskImage_set
    __swig_getmethods__["maskImage"] = _geosclassic.mpds_geosClassicInput_maskImage_get
    if _newclass:
        maskImage = _swig_property(_geosclassic.mpds_geosClassicInput_maskImage_get, _geosclassic.mpds_geosClassicInput_maskImage_set)
    __swig_setmethods__["meanUsage"] = _geosclassic.mpds_geosClassicInput_meanUsage_set
    __swig_getmethods__["meanUsage"] = _geosclassic.mpds_geosClassicInput_meanUsage_get
    if _newclass:
        meanUsage = _swig_property(_geosclassic.mpds_geosClassicInput_meanUsage_get, _geosclassic.mpds_geosClassicInput_meanUsage_set)
    __swig_setmethods__["meanValue"] = _geosclassic.mpds_geosClassicInput_meanValue_set
    __swig_getmethods__["meanValue"] = _geosclassic.mpds_geosClassicInput_meanValue_get
    if _newclass:
        meanValue = _swig_property(_geosclassic.mpds_geosClassicInput_meanValue_get, _geosclassic.mpds_geosClassicInput_meanValue_set)
    __swig_setmethods__["meanImage"] = _geosclassic.mpds_geosClassicInput_meanImage_set
    __swig_getmethods__["meanImage"] = _geosclassic.mpds_geosClassicInput_meanImage_get
    if _newclass:
        meanImage = _swig_property(_geosclassic.mpds_geosClassicInput_meanImage_get, _geosclassic.mpds_geosClassicInput_meanImage_set)
    __swig_setmethods__["varianceUsage"] = _geosclassic.mpds_geosClassicInput_varianceUsage_set
    __swig_getmethods__["varianceUsage"] = _geosclassic.mpds_geosClassicInput_varianceUsage_get
    if _newclass:
        varianceUsage = _swig_property(_geosclassic.mpds_geosClassicInput_varianceUsage_get, _geosclassic.mpds_geosClassicInput_varianceUsage_set)
    __swig_setmethods__["varianceValue"] = _geosclassic.mpds_geosClassicInput_varianceValue_set
    __swig_getmethods__["varianceValue"] = _geosclassic.mpds_geosClassicInput_varianceValue_get
    if _newclass:
        varianceValue = _swig_property(_geosclassic.mpds_geosClassicInput_varianceValue_get, _geosclassic.mpds_geosClassicInput_varianceValue_set)
    __swig_setmethods__["varianceImage"] = _geosclassic.mpds_geosClassicInput_varianceImage_set
    __swig_getmethods__["varianceImage"] = _geosclassic.mpds_geosClassicInput_varianceImage_get
    if _newclass:
        varianceImage = _swig_property(_geosclassic.mpds_geosClassicInput_varianceImage_get, _geosclassic.mpds_geosClassicInput_varianceImage_set)
    __swig_setmethods__["nGibbsSamplerPathMin"] = _geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMin_set
    __swig_getmethods__["nGibbsSamplerPathMin"] = _geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMin_get
    if _newclass:
        nGibbsSamplerPathMin = _swig_property(_geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMin_get, _geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMin_set)
    __swig_setmethods__["nGibbsSamplerPathMax"] = _geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMax_set
    __swig_getmethods__["nGibbsSamplerPathMax"] = _geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMax_get
    if _newclass:
        nGibbsSamplerPathMax = _swig_property(_geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMax_get, _geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMax_set)
    __swig_setmethods__["seed"] = _geosclassic.mpds_geosClassicInput_seed_set
    __swig_getmethods__["seed"] = _geosclassic.mpds_geosClassicInput_seed_get
    if _newclass:
        seed = _swig_property(_geosclassic.mpds_geosClassicInput_seed_get, _geosclassic.mpds_geosClassicInput_seed_set)
    __swig_setmethods__["seedIncrement"] = _geosclassic.mpds_geosClassicInput_seedIncrement_set
    __swig_getmethods__["seedIncrement"] = _geosclassic.mpds_geosClassicInput_seedIncrement_get
    if _newclass:
        seedIncrement = _swig_property(_geosclassic.mpds_geosClassicInput_seedIncrement_get, _geosclassic.mpds_geosClassicInput_seedIncrement_set)
    __swig_setmethods__["nrealization"] = _geosclassic.mpds_geosClassicInput_nrealization_set
    __swig_getmethods__["nrealization"] = _geosclassic.mpds_geosClassicInput_nrealization_get
    if _newclass:
        nrealization = _swig_property(_geosclassic.mpds_geosClassicInput_nrealization_get, _geosclassic.mpds_geosClassicInput_nrealization_set)

    def __init__(self):
        this = _geosclassic.new_mpds_geosClassicInput()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _geosclassic.delete_mpds_geosClassicInput
    __del__ = lambda self: None
mpds_geosClassicInput_swigregister = _geosclassic.mpds_geosClassicInput_swigregister
mpds_geosClassicInput_swigregister(mpds_geosClassicInput)

class mpds_geosClassicIndicatorInput(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mpds_geosClassicIndicatorInput, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mpds_geosClassicIndicatorInput, name)
    __repr__ = _swig_repr
    __swig_setmethods__["consoleAppFlag"] = _geosclassic.mpds_geosClassicIndicatorInput_consoleAppFlag_set
    __swig_getmethods__["consoleAppFlag"] = _geosclassic.mpds_geosClassicIndicatorInput_consoleAppFlag_get
    if _newclass:
        consoleAppFlag = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_consoleAppFlag_get, _geosclassic.mpds_geosClassicIndicatorInput_consoleAppFlag_set)
    __swig_setmethods__["simName"] = _geosclassic.mpds_geosClassicIndicatorInput_simName_set
    __swig_getmethods__["simName"] = _geosclassic.mpds_geosClassicIndicatorInput_simName_get
    if _newclass:
        simName = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_simName_get, _geosclassic.mpds_geosClassicIndicatorInput_simName_set)
    __swig_setmethods__["simGrid"] = _geosclassic.mpds_geosClassicIndicatorInput_simGrid_set
    __swig_getmethods__["simGrid"] = _geosclassic.mpds_geosClassicIndicatorInput_simGrid_get
    if _newclass:
        simGrid = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_simGrid_get, _geosclassic.mpds_geosClassicIndicatorInput_simGrid_set)
    __swig_setmethods__["varName"] = _geosclassic.mpds_geosClassicIndicatorInput_varName_set
    __swig_getmethods__["varName"] = _geosclassic.mpds_geosClassicIndicatorInput_varName_get
    if _newclass:
        varName = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_varName_get, _geosclassic.mpds_geosClassicIndicatorInput_varName_set)
    __swig_setmethods__["formatString"] = _geosclassic.mpds_geosClassicIndicatorInput_formatString_set
    __swig_getmethods__["formatString"] = _geosclassic.mpds_geosClassicIndicatorInput_formatString_get
    if _newclass:
        formatString = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_formatString_get, _geosclassic.mpds_geosClassicIndicatorInput_formatString_set)
    __swig_setmethods__["ncategory"] = _geosclassic.mpds_geosClassicIndicatorInput_ncategory_set
    __swig_getmethods__["ncategory"] = _geosclassic.mpds_geosClassicIndicatorInput_ncategory_get
    if _newclass:
        ncategory = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_ncategory_get, _geosclassic.mpds_geosClassicIndicatorInput_ncategory_set)
    __swig_setmethods__["categoryValue"] = _geosclassic.mpds_geosClassicIndicatorInput_categoryValue_set
    __swig_getmethods__["categoryValue"] = _geosclassic.mpds_geosClassicIndicatorInput_categoryValue_get
    if _newclass:
        categoryValue = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_categoryValue_get, _geosclassic.mpds_geosClassicIndicatorInput_categoryValue_set)
    __swig_setmethods__["outputMode"] = _geosclassic.mpds_geosClassicIndicatorInput_outputMode_set
    __swig_getmethods__["outputMode"] = _geosclassic.mpds_geosClassicIndicatorInput_outputMode_get
    if _newclass:
        outputMode = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_outputMode_get, _geosclassic.mpds_geosClassicIndicatorInput_outputMode_set)
    __swig_setmethods__["outputImageFileName"] = _geosclassic.mpds_geosClassicIndicatorInput_outputImageFileName_set
    __swig_getmethods__["outputImageFileName"] = _geosclassic.mpds_geosClassicIndicatorInput_outputImageFileName_get
    if _newclass:
        outputImageFileName = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_outputImageFileName_get, _geosclassic.mpds_geosClassicIndicatorInput_outputImageFileName_set)
    __swig_setmethods__["outputReportFlag"] = _geosclassic.mpds_geosClassicIndicatorInput_outputReportFlag_set
    __swig_getmethods__["outputReportFlag"] = _geosclassic.mpds_geosClassicIndicatorInput_outputReportFlag_get
    if _newclass:
        outputReportFlag = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_outputReportFlag_get, _geosclassic.mpds_geosClassicIndicatorInput_outputReportFlag_set)
    __swig_setmethods__["outputReportFileName"] = _geosclassic.mpds_geosClassicIndicatorInput_outputReportFileName_set
    __swig_getmethods__["outputReportFileName"] = _geosclassic.mpds_geosClassicIndicatorInput_outputReportFileName_get
    if _newclass:
        outputReportFileName = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_outputReportFileName_get, _geosclassic.mpds_geosClassicIndicatorInput_outputReportFileName_set)
    __swig_setmethods__["computationMode"] = _geosclassic.mpds_geosClassicIndicatorInput_computationMode_set
    __swig_getmethods__["computationMode"] = _geosclassic.mpds_geosClassicIndicatorInput_computationMode_get
    if _newclass:
        computationMode = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_computationMode_get, _geosclassic.mpds_geosClassicIndicatorInput_computationMode_set)
    __swig_setmethods__["covModel"] = _geosclassic.mpds_geosClassicIndicatorInput_covModel_set
    __swig_getmethods__["covModel"] = _geosclassic.mpds_geosClassicIndicatorInput_covModel_get
    if _newclass:
        covModel = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_covModel_get, _geosclassic.mpds_geosClassicIndicatorInput_covModel_set)
    __swig_setmethods__["searchRadiusRelative"] = _geosclassic.mpds_geosClassicIndicatorInput_searchRadiusRelative_set
    __swig_getmethods__["searchRadiusRelative"] = _geosclassic.mpds_geosClassicIndicatorInput_searchRadiusRelative_get
    if _newclass:
        searchRadiusRelative = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_searchRadiusRelative_get, _geosclassic.mpds_geosClassicIndicatorInput_searchRadiusRelative_set)
    __swig_setmethods__["nneighborMax"] = _geosclassic.mpds_geosClassicIndicatorInput_nneighborMax_set
    __swig_getmethods__["nneighborMax"] = _geosclassic.mpds_geosClassicIndicatorInput_nneighborMax_get
    if _newclass:
        nneighborMax = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_nneighborMax_get, _geosclassic.mpds_geosClassicIndicatorInput_nneighborMax_set)
    __swig_setmethods__["searchNeighborhoodSortMode"] = _geosclassic.mpds_geosClassicIndicatorInput_searchNeighborhoodSortMode_set
    __swig_getmethods__["searchNeighborhoodSortMode"] = _geosclassic.mpds_geosClassicIndicatorInput_searchNeighborhoodSortMode_get
    if _newclass:
        searchNeighborhoodSortMode = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_searchNeighborhoodSortMode_get, _geosclassic.mpds_geosClassicIndicatorInput_searchNeighborhoodSortMode_set)
    __swig_setmethods__["ndataImage"] = _geosclassic.mpds_geosClassicIndicatorInput_ndataImage_set
    __swig_getmethods__["ndataImage"] = _geosclassic.mpds_geosClassicIndicatorInput_ndataImage_get
    if _newclass:
        ndataImage = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_ndataImage_get, _geosclassic.mpds_geosClassicIndicatorInput_ndataImage_set)
    __swig_setmethods__["dataImage"] = _geosclassic.mpds_geosClassicIndicatorInput_dataImage_set
    __swig_getmethods__["dataImage"] = _geosclassic.mpds_geosClassicIndicatorInput_dataImage_get
    if _newclass:
        dataImage = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_dataImage_get, _geosclassic.mpds_geosClassicIndicatorInput_dataImage_set)
    __swig_setmethods__["ndataPointSet"] = _geosclassic.mpds_geosClassicIndicatorInput_ndataPointSet_set
    __swig_getmethods__["ndataPointSet"] = _geosclassic.mpds_geosClassicIndicatorInput_ndataPointSet_get
    if _newclass:
        ndataPointSet = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_ndataPointSet_get, _geosclassic.mpds_geosClassicIndicatorInput_ndataPointSet_set)
    __swig_setmethods__["dataPointSet"] = _geosclassic.mpds_geosClassicIndicatorInput_dataPointSet_set
    __swig_getmethods__["dataPointSet"] = _geosclassic.mpds_geosClassicIndicatorInput_dataPointSet_get
    if _newclass:
        dataPointSet = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_dataPointSet_get, _geosclassic.mpds_geosClassicIndicatorInput_dataPointSet_set)
    __swig_setmethods__["maskImageFlag"] = _geosclassic.mpds_geosClassicIndicatorInput_maskImageFlag_set
    __swig_getmethods__["maskImageFlag"] = _geosclassic.mpds_geosClassicIndicatorInput_maskImageFlag_get
    if _newclass:
        maskImageFlag = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_maskImageFlag_get, _geosclassic.mpds_geosClassicIndicatorInput_maskImageFlag_set)
    __swig_setmethods__["maskImage"] = _geosclassic.mpds_geosClassicIndicatorInput_maskImage_set
    __swig_getmethods__["maskImage"] = _geosclassic.mpds_geosClassicIndicatorInput_maskImage_get
    if _newclass:
        maskImage = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_maskImage_get, _geosclassic.mpds_geosClassicIndicatorInput_maskImage_set)
    __swig_setmethods__["probabilityUsage"] = _geosclassic.mpds_geosClassicIndicatorInput_probabilityUsage_set
    __swig_getmethods__["probabilityUsage"] = _geosclassic.mpds_geosClassicIndicatorInput_probabilityUsage_get
    if _newclass:
        probabilityUsage = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_probabilityUsage_get, _geosclassic.mpds_geosClassicIndicatorInput_probabilityUsage_set)
    __swig_setmethods__["probabilityValue"] = _geosclassic.mpds_geosClassicIndicatorInput_probabilityValue_set
    __swig_getmethods__["probabilityValue"] = _geosclassic.mpds_geosClassicIndicatorInput_probabilityValue_get
    if _newclass:
        probabilityValue = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_probabilityValue_get, _geosclassic.mpds_geosClassicIndicatorInput_probabilityValue_set)
    __swig_setmethods__["probabilityImage"] = _geosclassic.mpds_geosClassicIndicatorInput_probabilityImage_set
    __swig_getmethods__["probabilityImage"] = _geosclassic.mpds_geosClassicIndicatorInput_probabilityImage_get
    if _newclass:
        probabilityImage = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_probabilityImage_get, _geosclassic.mpds_geosClassicIndicatorInput_probabilityImage_set)
    __swig_setmethods__["seed"] = _geosclassic.mpds_geosClassicIndicatorInput_seed_set
    __swig_getmethods__["seed"] = _geosclassic.mpds_geosClassicIndicatorInput_seed_get
    if _newclass:
        seed = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_seed_get, _geosclassic.mpds_geosClassicIndicatorInput_seed_set)
    __swig_setmethods__["seedIncrement"] = _geosclassic.mpds_geosClassicIndicatorInput_seedIncrement_set
    __swig_getmethods__["seedIncrement"] = _geosclassic.mpds_geosClassicIndicatorInput_seedIncrement_get
    if _newclass:
        seedIncrement = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_seedIncrement_get, _geosclassic.mpds_geosClassicIndicatorInput_seedIncrement_set)
    __swig_setmethods__["nrealization"] = _geosclassic.mpds_geosClassicIndicatorInput_nrealization_set
    __swig_getmethods__["nrealization"] = _geosclassic.mpds_geosClassicIndicatorInput_nrealization_get
    if _newclass:
        nrealization = _swig_property(_geosclassic.mpds_geosClassicIndicatorInput_nrealization_get, _geosclassic.mpds_geosClassicIndicatorInput_nrealization_set)

    def __init__(self):
        this = _geosclassic.new_mpds_geosClassicIndicatorInput()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _geosclassic.delete_mpds_geosClassicIndicatorInput
    __del__ = lambda self: None
mpds_geosClassicIndicatorInput_swigregister = _geosclassic.mpds_geosClassicIndicatorInput_swigregister
mpds_geosClassicIndicatorInput_swigregister(mpds_geosClassicIndicatorInput)


def MPDSGeosClassicFreeGeosClassicInput(arg1):
    return _geosclassic.MPDSGeosClassicFreeGeosClassicInput(arg1)
MPDSGeosClassicFreeGeosClassicInput = _geosclassic.MPDSGeosClassicFreeGeosClassicInput

def MPDSGeosClassicFreeGeosClassicIndicatorInput(arg1):
    return _geosclassic.MPDSGeosClassicFreeGeosClassicIndicatorInput(arg1)
MPDSGeosClassicFreeGeosClassicIndicatorInput = _geosclassic.MPDSGeosClassicFreeGeosClassicIndicatorInput

def MPDSGeosClassicInitGeosClassicInput(arg1):
    return _geosclassic.MPDSGeosClassicInitGeosClassicInput(arg1)
MPDSGeosClassicInitGeosClassicInput = _geosclassic.MPDSGeosClassicInitGeosClassicInput

def MPDSGeosClassicInitGeosClassicIndicatorInput(arg1):
    return _geosclassic.MPDSGeosClassicInitGeosClassicIndicatorInput(arg1)
MPDSGeosClassicInitGeosClassicIndicatorInput = _geosclassic.MPDSGeosClassicInitGeosClassicIndicatorInput

def MPDSGeosClassicPrintGeosClassicInput(arg1, arg2, arg3):
    return _geosclassic.MPDSGeosClassicPrintGeosClassicInput(arg1, arg2, arg3)
MPDSGeosClassicPrintGeosClassicInput = _geosclassic.MPDSGeosClassicPrintGeosClassicInput

def MPDSGeosClassicPrintGeosClassicIndicatorInput(arg1, arg2, arg3):
    return _geosclassic.MPDSGeosClassicPrintGeosClassicIndicatorInput(arg1, arg2, arg3)
MPDSGeosClassicPrintGeosClassicIndicatorInput = _geosclassic.MPDSGeosClassicPrintGeosClassicIndicatorInput

def MPDSGeosClassicPrintVersion(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSGeosClassicPrintVersion(arg1, arg2, arg3, arg4, arg5)
MPDSGeosClassicPrintVersion = _geosclassic.MPDSGeosClassicPrintVersion

def MPDSGeosClassicValidateGeosClassicInput(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSGeosClassicValidateGeosClassicInput(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSGeosClassicValidateGeosClassicInput = _geosclassic.MPDSGeosClassicValidateGeosClassicInput

def MPDSGeosClassicValidateGeosClassicIndicatorInput(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSGeosClassicValidateGeosClassicIndicatorInput(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSGeosClassicValidateGeosClassicIndicatorInput = _geosclassic.MPDSGeosClassicValidateGeosClassicIndicatorInput
class mpds_geosClassicOutput(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mpds_geosClassicOutput, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mpds_geosClassicOutput, name)
    __repr__ = _swig_repr
    __swig_setmethods__["outputImage"] = _geosclassic.mpds_geosClassicOutput_outputImage_set
    __swig_getmethods__["outputImage"] = _geosclassic.mpds_geosClassicOutput_outputImage_get
    if _newclass:
        outputImage = _swig_property(_geosclassic.mpds_geosClassicOutput_outputImage_get, _geosclassic.mpds_geosClassicOutput_outputImage_set)

    def __init__(self):
        this = _geosclassic.new_mpds_geosClassicOutput()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _geosclassic.delete_mpds_geosClassicOutput
    __del__ = lambda self: None
mpds_geosClassicOutput_swigregister = _geosclassic.mpds_geosClassicOutput_swigregister
mpds_geosClassicOutput_swigregister(mpds_geosClassicOutput)


def MPDSGeosClassicFreeGeosClassicOutput(arg1):
    return _geosclassic.MPDSGeosClassicFreeGeosClassicOutput(arg1)
MPDSGeosClassicFreeGeosClassicOutput = _geosclassic.MPDSGeosClassicFreeGeosClassicOutput

def MPDSGeosClassicInitGeosClassicOutput(arg1):
    return _geosclassic.MPDSGeosClassicInitGeosClassicOutput(arg1)
MPDSGeosClassicInitGeosClassicOutput = _geosclassic.MPDSGeosClassicInitGeosClassicOutput
class mpds_grid(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mpds_grid, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mpds_grid, name)
    __repr__ = _swig_repr
    __swig_setmethods__["nx"] = _geosclassic.mpds_grid_nx_set
    __swig_getmethods__["nx"] = _geosclassic.mpds_grid_nx_get
    if _newclass:
        nx = _swig_property(_geosclassic.mpds_grid_nx_get, _geosclassic.mpds_grid_nx_set)
    __swig_setmethods__["ny"] = _geosclassic.mpds_grid_ny_set
    __swig_getmethods__["ny"] = _geosclassic.mpds_grid_ny_get
    if _newclass:
        ny = _swig_property(_geosclassic.mpds_grid_ny_get, _geosclassic.mpds_grid_ny_set)
    __swig_setmethods__["nz"] = _geosclassic.mpds_grid_nz_set
    __swig_getmethods__["nz"] = _geosclassic.mpds_grid_nz_get
    if _newclass:
        nz = _swig_property(_geosclassic.mpds_grid_nz_get, _geosclassic.mpds_grid_nz_set)
    __swig_setmethods__["sx"] = _geosclassic.mpds_grid_sx_set
    __swig_getmethods__["sx"] = _geosclassic.mpds_grid_sx_get
    if _newclass:
        sx = _swig_property(_geosclassic.mpds_grid_sx_get, _geosclassic.mpds_grid_sx_set)
    __swig_setmethods__["sy"] = _geosclassic.mpds_grid_sy_set
    __swig_getmethods__["sy"] = _geosclassic.mpds_grid_sy_get
    if _newclass:
        sy = _swig_property(_geosclassic.mpds_grid_sy_get, _geosclassic.mpds_grid_sy_set)
    __swig_setmethods__["sz"] = _geosclassic.mpds_grid_sz_set
    __swig_getmethods__["sz"] = _geosclassic.mpds_grid_sz_get
    if _newclass:
        sz = _swig_property(_geosclassic.mpds_grid_sz_get, _geosclassic.mpds_grid_sz_set)
    __swig_setmethods__["ox"] = _geosclassic.mpds_grid_ox_set
    __swig_getmethods__["ox"] = _geosclassic.mpds_grid_ox_get
    if _newclass:
        ox = _swig_property(_geosclassic.mpds_grid_ox_get, _geosclassic.mpds_grid_ox_set)
    __swig_setmethods__["oy"] = _geosclassic.mpds_grid_oy_set
    __swig_getmethods__["oy"] = _geosclassic.mpds_grid_oy_get
    if _newclass:
        oy = _swig_property(_geosclassic.mpds_grid_oy_get, _geosclassic.mpds_grid_oy_set)
    __swig_setmethods__["oz"] = _geosclassic.mpds_grid_oz_set
    __swig_getmethods__["oz"] = _geosclassic.mpds_grid_oz_get
    if _newclass:
        oz = _swig_property(_geosclassic.mpds_grid_oz_get, _geosclassic.mpds_grid_oz_set)
    __swig_setmethods__["nxy"] = _geosclassic.mpds_grid_nxy_set
    __swig_getmethods__["nxy"] = _geosclassic.mpds_grid_nxy_get
    if _newclass:
        nxy = _swig_property(_geosclassic.mpds_grid_nxy_get, _geosclassic.mpds_grid_nxy_set)
    __swig_setmethods__["nxyz"] = _geosclassic.mpds_grid_nxyz_set
    __swig_getmethods__["nxyz"] = _geosclassic.mpds_grid_nxyz_get
    if _newclass:
        nxyz = _swig_property(_geosclassic.mpds_grid_nxyz_get, _geosclassic.mpds_grid_nxyz_set)

    def __init__(self):
        this = _geosclassic.new_mpds_grid()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _geosclassic.delete_mpds_grid
    __del__ = lambda self: None
mpds_grid_swigregister = _geosclassic.mpds_grid_swigregister
mpds_grid_swigregister(mpds_grid)


def MPDSCmpGrid(arg1, arg2):
    return _geosclassic.MPDSCmpGrid(arg1, arg2)
MPDSCmpGrid = _geosclassic.MPDSCmpGrid

def MPDSCopyGrid(arg1, arg2):
    return _geosclassic.MPDSCopyGrid(arg1, arg2)
MPDSCopyGrid = _geosclassic.MPDSCopyGrid

def MPDSGridCoordToId(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGridCoordToId(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSGridCoordToId = _geosclassic.MPDSGridCoordToId

def MPDSGridIdToCoord(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGridIdToCoord(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSGridIdToCoord = _geosclassic.MPDSGridIdToCoord

def MPDSInitGrid(arg1):
    return _geosclassic.MPDSInitGrid(arg1)
MPDSInitGrid = _geosclassic.MPDSInitGrid

def MPDSPrintGrid(arg1, arg2, arg3):
    return _geosclassic.MPDSPrintGrid(arg1, arg2, arg3)
MPDSPrintGrid = _geosclassic.MPDSPrintGrid

def MPDSReadGrid(arg1, arg2):
    return _geosclassic.MPDSReadGrid(arg1, arg2)
MPDSReadGrid = _geosclassic.MPDSReadGrid

def MPDSValidateGrid(arg1, arg2):
    return _geosclassic.MPDSValidateGrid(arg1, arg2)
MPDSValidateGrid = _geosclassic.MPDSValidateGrid
class mpds_image(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mpds_image, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mpds_image, name)
    __repr__ = _swig_repr
    __swig_setmethods__["grid"] = _geosclassic.mpds_image_grid_set
    __swig_getmethods__["grid"] = _geosclassic.mpds_image_grid_get
    if _newclass:
        grid = _swig_property(_geosclassic.mpds_image_grid_get, _geosclassic.mpds_image_grid_set)
    __swig_setmethods__["nvar"] = _geosclassic.mpds_image_nvar_set
    __swig_getmethods__["nvar"] = _geosclassic.mpds_image_nvar_get
    if _newclass:
        nvar = _swig_property(_geosclassic.mpds_image_nvar_get, _geosclassic.mpds_image_nvar_set)
    __swig_setmethods__["nxyzv"] = _geosclassic.mpds_image_nxyzv_set
    __swig_getmethods__["nxyzv"] = _geosclassic.mpds_image_nxyzv_get
    if _newclass:
        nxyzv = _swig_property(_geosclassic.mpds_image_nxyzv_get, _geosclassic.mpds_image_nxyzv_set)
    __swig_setmethods__["varName"] = _geosclassic.mpds_image_varName_set
    __swig_getmethods__["varName"] = _geosclassic.mpds_image_varName_get
    if _newclass:
        varName = _swig_property(_geosclassic.mpds_image_varName_get, _geosclassic.mpds_image_varName_set)
    __swig_setmethods__["var"] = _geosclassic.mpds_image_var_set
    __swig_getmethods__["var"] = _geosclassic.mpds_image_var_get
    if _newclass:
        var = _swig_property(_geosclassic.mpds_image_var_get, _geosclassic.mpds_image_var_set)

    def __init__(self):
        this = _geosclassic.new_mpds_image()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _geosclassic.delete_mpds_image
    __del__ = lambda self: None
mpds_image_swigregister = _geosclassic.mpds_image_swigregister
mpds_image_swigregister(mpds_image)


def MPDSCopyImage(arg1, arg2):
    return _geosclassic.MPDSCopyImage(arg1, arg2)
MPDSCopyImage = _geosclassic.MPDSCopyImage

def MPDSFreeImage(arg1):
    return _geosclassic.MPDSFreeImage(arg1)
MPDSFreeImage = _geosclassic.MPDSFreeImage

def MPDSGetImageOneVarValueIndex(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSGetImageOneVarValueIndex(arg1, arg2, arg3, arg4, arg5)
MPDSGetImageOneVarValueIndex = _geosclassic.MPDSGetImageOneVarValueIndex

def MPDSGetImageNumberVarValueMissing(arg1, arg2):
    return _geosclassic.MPDSGetImageNumberVarValueMissing(arg1, arg2)
MPDSGetImageNumberVarValueMissing = _geosclassic.MPDSGetImageNumberVarValueMissing

def MPDSGetImageOneVarValueMean(arg1, arg2, arg3):
    return _geosclassic.MPDSGetImageOneVarValueMean(arg1, arg2, arg3)
MPDSGetImageOneVarValueMean = _geosclassic.MPDSGetImageOneVarValueMean

def MPDSGetImageOneVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGetImageOneVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSGetImageOneVarValuePdf = _geosclassic.MPDSGetImageOneVarValuePdf

def MPDSGetImageOneVarValueRange(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGetImageOneVarValueRange(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSGetImageOneVarValueRange = _geosclassic.MPDSGetImageOneVarValueRange

def MPDSGetImageOneVarValueSD(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSGetImageOneVarValueSD(arg1, arg2, arg3, arg4)
MPDSGetImageOneVarValueSD = _geosclassic.MPDSGetImageOneVarValueSD

def MPDSGetImageVarStats(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGetImageVarStats(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSGetImageVarStats = _geosclassic.MPDSGetImageVarStats

def MPDSGetImageVarStatsLocal(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSGetImageVarStatsLocal(arg1, arg2, arg3, arg4)
MPDSGetImageVarStatsLocal = _geosclassic.MPDSGetImageVarStatsLocal

def MPDSGetImageVarValueMean(arg1, arg2):
    return _geosclassic.MPDSGetImageVarValueMean(arg1, arg2)
MPDSGetImageVarValueMean = _geosclassic.MPDSGetImageVarValueMean

def MPDSGetImageVarValuePdf(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSGetImageVarValuePdf(arg1, arg2, arg3, arg4, arg5)
MPDSGetImageVarValuePdf = _geosclassic.MPDSGetImageVarValuePdf

def MPDSGetImageVarValueRange(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSGetImageVarValueRange(arg1, arg2, arg3, arg4, arg5)
MPDSGetImageVarValueRange = _geosclassic.MPDSGetImageVarValueRange

def MPDSGetImageVarValueSD(arg1, arg2, arg3):
    return _geosclassic.MPDSGetImageVarValueSD(arg1, arg2, arg3)
MPDSGetImageVarValueSD = _geosclassic.MPDSGetImageVarValueSD

def MPDSGetImageVarVectorMissing(arg1, arg2, arg3):
    return _geosclassic.MPDSGetImageVarVectorMissing(arg1, arg2, arg3)
MPDSGetImageVarVectorMissing = _geosclassic.MPDSGetImageVarVectorMissing

def MPDSGetNImageOneVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSGetNImageOneVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
MPDSGetNImageOneVarValuePdf = _geosclassic.MPDSGetNImageOneVarValuePdf

def MPDSGetNImageVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGetNImageVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSGetNImageVarValuePdf = _geosclassic.MPDSGetNImageVarValuePdf

def MPDSImageEE(arg1):
    return _geosclassic.MPDSImageEE(arg1)
MPDSImageEE = _geosclassic.MPDSImageEE

def MPDSImageToImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSImageToImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSImageToImage = _geosclassic.MPDSImageToImage

def MPDSInitImage(arg1):
    return _geosclassic.MPDSInitImage(arg1)
MPDSInitImage = _geosclassic.MPDSInitImage

def MPDSMallocImage(arg1, arg2, arg3):
    return _geosclassic.MPDSMallocImage(arg1, arg2, arg3)
MPDSMallocImage = _geosclassic.MPDSMallocImage

def MPDSPrintImage(arg1, arg2, arg3):
    return _geosclassic.MPDSPrintImage(arg1, arg2, arg3)
MPDSPrintImage = _geosclassic.MPDSPrintImage

def MPDSPrintImageInfo(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSPrintImageInfo(arg1, arg2, arg3, arg4)
MPDSPrintImageInfo = _geosclassic.MPDSPrintImageInfo

def MPDSReadImage(arg1, arg2, arg3):
    return _geosclassic.MPDSReadImage(arg1, arg2, arg3)
MPDSReadImage = _geosclassic.MPDSReadImage

def MPDSReadImageGslibBinary(arg1, arg2):
    return _geosclassic.MPDSReadImageGslibBinary(arg1, arg2)
MPDSReadImageGslibBinary = _geosclassic.MPDSReadImageGslibBinary

def MPDSTransformLinearImageVar(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSTransformLinearImageVar(arg1, arg2, arg3, arg4)
MPDSTransformLinearImageVar = _geosclassic.MPDSTransformLinearImageVar

def MPDSTransformExplicitImageVar(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSTransformExplicitImageVar(arg1, arg2, arg3, arg4, arg5)
MPDSTransformExplicitImageVar = _geosclassic.MPDSTransformExplicitImageVar

def MPDSValidateImage(arg1, arg2, arg3):
    return _geosclassic.MPDSValidateImage(arg1, arg2, arg3)
MPDSValidateImage = _geosclassic.MPDSValidateImage

def MPDSWriteImage(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSWriteImage(arg1, arg2, arg3, arg4)
MPDSWriteImage = _geosclassic.MPDSWriteImage

def MPDSWriteImageGslibBinary(arg1, arg2):
    return _geosclassic.MPDSWriteImageGslibBinary(arg1, arg2)
MPDSWriteImageGslibBinary = _geosclassic.MPDSWriteImageGslibBinary

def MPDSFindLink(arg1, arg2):
    return _geosclassic.MPDSFindLink(arg1, arg2)
MPDSFindLink = _geosclassic.MPDSFindLink

def MPDSImageConnectivityEulerNumber(arg1, arg2, arg3):
    return _geosclassic.MPDSImageConnectivityEulerNumber(arg1, arg2, arg3)
MPDSImageConnectivityEulerNumber = _geosclassic.MPDSImageConnectivityEulerNumber

def MPDSImageConnectivityFunction0(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageConnectivityFunction0(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
MPDSImageConnectivityFunction0 = _geosclassic.MPDSImageConnectivityFunction0

def MPDSImageConnectivityFunction1(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageConnectivityFunction1(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
MPDSImageConnectivityFunction1 = _geosclassic.MPDSImageConnectivityFunction1

def MPDSImageConnectivityFunction2(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageConnectivityFunction2(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
MPDSImageConnectivityFunction2 = _geosclassic.MPDSImageConnectivityFunction2

def MPDSImageConnectivityGlobalIndicator(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSImageConnectivityGlobalIndicator(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSImageConnectivityGlobalIndicator = _geosclassic.MPDSImageConnectivityGlobalIndicator

def MPDSImageConnectivity6EulerNumberCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageConnectivity6EulerNumberCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSImageConnectivity6EulerNumberCurve = _geosclassic.MPDSImageConnectivity6EulerNumberCurve

def MPDSImageConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSImageConnectivity6GlobalIndicatorCurve = _geosclassic.MPDSImageConnectivity6GlobalIndicatorCurve

def MPDSImageConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSImageConnectivity18GlobalIndicatorCurve = _geosclassic.MPDSImageConnectivity18GlobalIndicatorCurve

def MPDSImageConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSImageConnectivity26GlobalIndicatorCurve = _geosclassic.MPDSImageConnectivity26GlobalIndicatorCurve

def MPDSImageCorrelogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageCorrelogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
MPDSImageCorrelogram = _geosclassic.MPDSImageCorrelogram

def MPDSImageCovariance(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageCovariance(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
MPDSImageCovariance = _geosclassic.MPDSImageCovariance

def MPDSImageCovarianceNotCentred(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageCovarianceNotCentred(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
MPDSImageCovarianceNotCentred = _geosclassic.MPDSImageCovarianceNotCentred

def MPDSImageDilate(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageDilate(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSImageDilate = _geosclassic.MPDSImageDilate

def MPDSImageDistanceByDilation(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSImageDistanceByDilation(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSImageDistanceByDilation = _geosclassic.MPDSImageDistanceByDilation

def MPDSImageDistanceEuclidean(arg1, arg2):
    return _geosclassic.MPDSImageDistanceEuclidean(arg1, arg2)
MPDSImageDistanceEuclidean = _geosclassic.MPDSImageDistanceEuclidean

def MPDSImageDistanceEuclideanBruteForce(arg1, arg2, arg3):
    return _geosclassic.MPDSImageDistanceEuclideanBruteForce(arg1, arg2, arg3)
MPDSImageDistanceEuclideanBruteForce = _geosclassic.MPDSImageDistanceEuclideanBruteForce

def MPDSImageDistanceEuclideanSign(arg1, arg2):
    return _geosclassic.MPDSImageDistanceEuclideanSign(arg1, arg2)
MPDSImageDistanceEuclideanSign = _geosclassic.MPDSImageDistanceEuclideanSign

def MPDSImageDistanceEuclideanConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceEuclideanConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
MPDSImageDistanceEuclideanConnectivity6GlobalIndicatorCurve = _geosclassic.MPDSImageDistanceEuclideanConnectivity6GlobalIndicatorCurve

def MPDSImageDistanceEuclideanConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceEuclideanConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
MPDSImageDistanceEuclideanConnectivity18GlobalIndicatorCurve = _geosclassic.MPDSImageDistanceEuclideanConnectivity18GlobalIndicatorCurve

def MPDSImageDistanceEuclideanConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceEuclideanConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
MPDSImageDistanceEuclideanConnectivity26GlobalIndicatorCurve = _geosclassic.MPDSImageDistanceEuclideanConnectivity26GlobalIndicatorCurve

def MPDSImageDistanceL1(arg1, arg2):
    return _geosclassic.MPDSImageDistanceL1(arg1, arg2)
MPDSImageDistanceL1 = _geosclassic.MPDSImageDistanceL1

def MPDSImageDistanceL1BruteForce(arg1, arg2, arg3):
    return _geosclassic.MPDSImageDistanceL1BruteForce(arg1, arg2, arg3)
MPDSImageDistanceL1BruteForce = _geosclassic.MPDSImageDistanceL1BruteForce

def MPDSImageDistanceL1Connectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceL1Connectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
MPDSImageDistanceL1Connectivity6GlobalIndicatorCurve = _geosclassic.MPDSImageDistanceL1Connectivity6GlobalIndicatorCurve

def MPDSImageDistanceL1Connectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceL1Connectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
MPDSImageDistanceL1Connectivity18GlobalIndicatorCurve = _geosclassic.MPDSImageDistanceL1Connectivity18GlobalIndicatorCurve

def MPDSImageDistanceL1Connectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceL1Connectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
MPDSImageDistanceL1Connectivity26GlobalIndicatorCurve = _geosclassic.MPDSImageDistanceL1Connectivity26GlobalIndicatorCurve

def MPDSImageDistanceL1Sign(arg1, arg2):
    return _geosclassic.MPDSImageDistanceL1Sign(arg1, arg2)
MPDSImageDistanceL1Sign = _geosclassic.MPDSImageDistanceL1Sign

def MPDSImageErode(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageErode(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSImageErode = _geosclassic.MPDSImageErode

def MPDSImageExtract1D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSImageExtract1D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSImageExtract1D = _geosclassic.MPDSImageExtract1D

def MPDSImageExtract2D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageExtract2D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
MPDSImageExtract2D = _geosclassic.MPDSImageExtract2D

def MPDSImageExtract3D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17):
    return _geosclassic.MPDSImageExtract3D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17)
MPDSImageExtract3D = _geosclassic.MPDSImageExtract3D

def MPDSImageGeobody6(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody6(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSImageGeobody6 = _geosclassic.MPDSImageGeobody6

def MPDSImageGeobody18(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody18(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSImageGeobody18 = _geosclassic.MPDSImageGeobody18

def MPDSImageGeobody26(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody26(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSImageGeobody26 = _geosclassic.MPDSImageGeobody26

def MPDSImageGeobodySize(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSImageGeobodySize(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSImageGeobodySize = _geosclassic.MPDSImageGeobodySize

def MPDSImageGeobody6Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody6Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSImageGeobody6Vector = _geosclassic.MPDSImageGeobody6Vector

def MPDSImageGeobody18Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody18Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSImageGeobody18Vector = _geosclassic.MPDSImageGeobody18Vector

def MPDSImageGeobody26Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody26Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSImageGeobody26Vector = _geosclassic.MPDSImageGeobody26Vector

def MPDSImageIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSImageIndicator = _geosclassic.MPDSImageIndicator

def MPDSImageIndicatorVector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageIndicatorVector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSImageIndicatorVector = _geosclassic.MPDSImageIndicatorVector

def MPDSImageMaxGeobody6SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageMaxGeobody6SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSImageMaxGeobody6SizeCurve = _geosclassic.MPDSImageMaxGeobody6SizeCurve

def MPDSImageMaxGeobody18SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageMaxGeobody18SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSImageMaxGeobody18SizeCurve = _geosclassic.MPDSImageMaxGeobody18SizeCurve

def MPDSImageMaxGeobody26SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageMaxGeobody26SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSImageMaxGeobody26SizeCurve = _geosclassic.MPDSImageMaxGeobody26SizeCurve

def MPDSImagePyramidExpand(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSImagePyramidExpand(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSImagePyramidExpand = _geosclassic.MPDSImagePyramidExpand

def MPDSImagePyramidReduce(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSImagePyramidReduce(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSImagePyramidReduce = _geosclassic.MPDSImagePyramidReduce

def MPDSImageTransiogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageTransiogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
MPDSImageTransiogram = _geosclassic.MPDSImageTransiogram

def MPDSImageVariogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageVariogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
MPDSImageVariogram = _geosclassic.MPDSImageVariogram

def MPDSMovingBoxAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSMovingBoxAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSMovingBoxAverageImage = _geosclassic.MPDSMovingBoxAverageImage

def MPDSMovingSearchNeighborhoodAverageImage(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSMovingSearchNeighborhoodAverageImage(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSMovingSearchNeighborhoodAverageImage = _geosclassic.MPDSMovingSearchNeighborhoodAverageImage

def MPDSResizeImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSResizeImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSResizeImage = _geosclassic.MPDSResizeImage
class mpds_pointSet(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mpds_pointSet, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mpds_pointSet, name)
    __repr__ = _swig_repr
    __swig_setmethods__["npoint"] = _geosclassic.mpds_pointSet_npoint_set
    __swig_getmethods__["npoint"] = _geosclassic.mpds_pointSet_npoint_get
    if _newclass:
        npoint = _swig_property(_geosclassic.mpds_pointSet_npoint_get, _geosclassic.mpds_pointSet_npoint_set)
    __swig_setmethods__["x"] = _geosclassic.mpds_pointSet_x_set
    __swig_getmethods__["x"] = _geosclassic.mpds_pointSet_x_get
    if _newclass:
        x = _swig_property(_geosclassic.mpds_pointSet_x_get, _geosclassic.mpds_pointSet_x_set)
    __swig_setmethods__["y"] = _geosclassic.mpds_pointSet_y_set
    __swig_getmethods__["y"] = _geosclassic.mpds_pointSet_y_get
    if _newclass:
        y = _swig_property(_geosclassic.mpds_pointSet_y_get, _geosclassic.mpds_pointSet_y_set)
    __swig_setmethods__["z"] = _geosclassic.mpds_pointSet_z_set
    __swig_getmethods__["z"] = _geosclassic.mpds_pointSet_z_get
    if _newclass:
        z = _swig_property(_geosclassic.mpds_pointSet_z_get, _geosclassic.mpds_pointSet_z_set)
    __swig_setmethods__["nvar"] = _geosclassic.mpds_pointSet_nvar_set
    __swig_getmethods__["nvar"] = _geosclassic.mpds_pointSet_nvar_get
    if _newclass:
        nvar = _swig_property(_geosclassic.mpds_pointSet_nvar_get, _geosclassic.mpds_pointSet_nvar_set)
    __swig_setmethods__["varName"] = _geosclassic.mpds_pointSet_varName_set
    __swig_getmethods__["varName"] = _geosclassic.mpds_pointSet_varName_get
    if _newclass:
        varName = _swig_property(_geosclassic.mpds_pointSet_varName_get, _geosclassic.mpds_pointSet_varName_set)
    __swig_setmethods__["var"] = _geosclassic.mpds_pointSet_var_set
    __swig_getmethods__["var"] = _geosclassic.mpds_pointSet_var_get
    if _newclass:
        var = _swig_property(_geosclassic.mpds_pointSet_var_get, _geosclassic.mpds_pointSet_var_set)

    def __init__(self):
        this = _geosclassic.new_mpds_pointSet()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _geosclassic.delete_mpds_pointSet
    __del__ = lambda self: None
mpds_pointSet_swigregister = _geosclassic.mpds_pointSet_swigregister
mpds_pointSet_swigregister(mpds_pointSet)


def MPDSCopyPointSet(arg1, arg2):
    return _geosclassic.MPDSCopyPointSet(arg1, arg2)
MPDSCopyPointSet = _geosclassic.MPDSCopyPointSet

def MPDSFreePointSet(arg1):
    return _geosclassic.MPDSFreePointSet(arg1)
MPDSFreePointSet = _geosclassic.MPDSFreePointSet

def MPDSGetIndexInGridForPointSet(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSGetIndexInGridForPointSet(arg1, arg2, arg3, arg4)
MPDSGetIndexInGridForPointSet = _geosclassic.MPDSGetIndexInGridForPointSet

def MPDSGetPointSetInfo(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18):
    return _geosclassic.MPDSGetPointSetInfo(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18)
MPDSGetPointSetInfo = _geosclassic.MPDSGetPointSetInfo

def MPDSGetXYZIndexInGridForPointSet(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGetXYZIndexInGridForPointSet(arg1, arg2, arg3, arg4, arg5, arg6)
MPDSGetXYZIndexInGridForPointSet = _geosclassic.MPDSGetXYZIndexInGridForPointSet

def MPDSImageToPointSet(arg1, arg2):
    return _geosclassic.MPDSImageToPointSet(arg1, arg2)
MPDSImageToPointSet = _geosclassic.MPDSImageToPointSet

def MPDSInitPointSet(arg1):
    return _geosclassic.MPDSInitPointSet(arg1)
MPDSInitPointSet = _geosclassic.MPDSInitPointSet

def MPDSMallocPointSet(arg1, arg2, arg3):
    return _geosclassic.MPDSMallocPointSet(arg1, arg2, arg3)
MPDSMallocPointSet = _geosclassic.MPDSMallocPointSet

def MPDSPointSetToImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSPointSetToImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSPointSetToImage = _geosclassic.MPDSPointSetToImage

def MPDSPrintPointSet(arg1, arg2, arg3):
    return _geosclassic.MPDSPrintPointSet(arg1, arg2, arg3)
MPDSPrintPointSet = _geosclassic.MPDSPrintPointSet

def MPDSPrintPointSetInfo(arg1, arg2, arg3):
    return _geosclassic.MPDSPrintPointSetInfo(arg1, arg2, arg3)
MPDSPrintPointSetInfo = _geosclassic.MPDSPrintPointSetInfo

def MPDSReadPointSet(arg1, arg2):
    return _geosclassic.MPDSReadPointSet(arg1, arg2)
MPDSReadPointSet = _geosclassic.MPDSReadPointSet

def MPDSValidatePointSet(arg1, arg2):
    return _geosclassic.MPDSValidatePointSet(arg1, arg2)
MPDSValidatePointSet = _geosclassic.MPDSValidatePointSet

def MPDSWritePointSet(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSWritePointSet(arg1, arg2, arg3, arg4)
MPDSWritePointSet = _geosclassic.MPDSWritePointSet
MPDS_WARNING_MSG_00001 = _geosclassic.MPDS_WARNING_MSG_00001
MPDS_WARNING_MSG_00002 = _geosclassic.MPDS_WARNING_MSG_00002
MPDS_WARNING_MSG_00003 = _geosclassic.MPDS_WARNING_MSG_00003
MPDS_WARNING_MSG_00010 = _geosclassic.MPDS_WARNING_MSG_00010
MPDS_WARNING_MSG_00012 = _geosclassic.MPDS_WARNING_MSG_00012
MPDS_WARNING_MSG_00014 = _geosclassic.MPDS_WARNING_MSG_00014
MPDS_WARNING_MSG_00020 = _geosclassic.MPDS_WARNING_MSG_00020
MPDS_WARNING_MSG_00021 = _geosclassic.MPDS_WARNING_MSG_00021
MPDS_WARNING_MSG_00025 = _geosclassic.MPDS_WARNING_MSG_00025
MPDS_WARNING_MSG_00027 = _geosclassic.MPDS_WARNING_MSG_00027
MPDS_WARNING_MSG_00026 = _geosclassic.MPDS_WARNING_MSG_00026
MPDS_WARNING_MSG_00030 = _geosclassic.MPDS_WARNING_MSG_00030
MPDS_WARNING_MSG_00031 = _geosclassic.MPDS_WARNING_MSG_00031
MPDS_WARNING_MSG_00032 = _geosclassic.MPDS_WARNING_MSG_00032
MPDS_WARNING_MSG_00033 = _geosclassic.MPDS_WARNING_MSG_00033
MPDS_WARNING_MSG_00034 = _geosclassic.MPDS_WARNING_MSG_00034
MPDS_WARNING_MSG_00035 = _geosclassic.MPDS_WARNING_MSG_00035
MPDS_WARNING_MSG_00036 = _geosclassic.MPDS_WARNING_MSG_00036
MPDS_WARNING_MSG_00038 = _geosclassic.MPDS_WARNING_MSG_00038
MPDS_WARNING_MSG_00039 = _geosclassic.MPDS_WARNING_MSG_00039
MPDS_WARNING_MSG_00040 = _geosclassic.MPDS_WARNING_MSG_00040
MPDS_WARNING_MSG_00041 = _geosclassic.MPDS_WARNING_MSG_00041
MPDS_WARNING_MSG_00042 = _geosclassic.MPDS_WARNING_MSG_00042
MPDS_WARNING_MSG_00043 = _geosclassic.MPDS_WARNING_MSG_00043
MPDS_WARNING_MSG_00044 = _geosclassic.MPDS_WARNING_MSG_00044
MPDS_WARNING_MSG_00045 = _geosclassic.MPDS_WARNING_MSG_00045
MPDS_WARNING_MSG_00046 = _geosclassic.MPDS_WARNING_MSG_00046
MPDS_WARNING_MSG_00049 = _geosclassic.MPDS_WARNING_MSG_00049
MPDS_WARNING_MSG_00050 = _geosclassic.MPDS_WARNING_MSG_00050
MPDS_WARNING_MSG_00051 = _geosclassic.MPDS_WARNING_MSG_00051
MPDS_WARNING_MSG_00055 = _geosclassic.MPDS_WARNING_MSG_00055
MPDS_WARNING_MSG_00060 = _geosclassic.MPDS_WARNING_MSG_00060
MPDS_WARNING_MSG_00061 = _geosclassic.MPDS_WARNING_MSG_00061
MPDS_WARNING_MSG_00062 = _geosclassic.MPDS_WARNING_MSG_00062
MPDS_WARNING_MSG_00063 = _geosclassic.MPDS_WARNING_MSG_00063
MPDS_WARNING_MSG_00070 = _geosclassic.MPDS_WARNING_MSG_00070
MPDS_WARNING_MSG_00071 = _geosclassic.MPDS_WARNING_MSG_00071
MPDS_WARNING_MSG_00075 = _geosclassic.MPDS_WARNING_MSG_00075
MPDS_WARNING_MSG_00076 = _geosclassic.MPDS_WARNING_MSG_00076
MPDS_WARNING_MSG_00077 = _geosclassic.MPDS_WARNING_MSG_00077
MPDS_WARNING_MSG_00078 = _geosclassic.MPDS_WARNING_MSG_00078
MPDS_WARNING_MSG_00080 = _geosclassic.MPDS_WARNING_MSG_00080
MPDS_WARNING_MSG_00085 = _geosclassic.MPDS_WARNING_MSG_00085
MPDS_WARNING_MSG_00090 = _geosclassic.MPDS_WARNING_MSG_00090
MPDS_WARNING_MSG_00100 = _geosclassic.MPDS_WARNING_MSG_00100
MPDS_WARNING_MSG_00111 = _geosclassic.MPDS_WARNING_MSG_00111
MPDS_WARNING_MSG_00115 = _geosclassic.MPDS_WARNING_MSG_00115
MPDS_WARNING_MSG_00120 = _geosclassic.MPDS_WARNING_MSG_00120
MPDS_WARNING_MSG_00143 = _geosclassic.MPDS_WARNING_MSG_00143
MPDS_WARNING_MSG_00144 = _geosclassic.MPDS_WARNING_MSG_00144
MPDS_WARNING_MSG_00145 = _geosclassic.MPDS_WARNING_MSG_00145
MPDS_WARNING_MSG_00146 = _geosclassic.MPDS_WARNING_MSG_00146
MPDS_WARNING_MSG_00150 = _geosclassic.MPDS_WARNING_MSG_00150
MPDS_WARNING_MSG_00160 = _geosclassic.MPDS_WARNING_MSG_00160
MPDS_WARNING_MSG_00210 = _geosclassic.MPDS_WARNING_MSG_00210
MPDS_WARNING_MSG_00212 = _geosclassic.MPDS_WARNING_MSG_00212
MPDS_WARNING_MSG_00214 = _geosclassic.MPDS_WARNING_MSG_00214
MPDS_WARNING_MSG_01010 = _geosclassic.MPDS_WARNING_MSG_01010
MPDS_WARNING_MSG_01011 = _geosclassic.MPDS_WARNING_MSG_01011
MPDS_WARNING_MSG_01012 = _geosclassic.MPDS_WARNING_MSG_01012
MPDS_WARNING_MSG_01013 = _geosclassic.MPDS_WARNING_MSG_01013
MPDS_WARNING_MSG_01014 = _geosclassic.MPDS_WARNING_MSG_01014
MPDS_WARNING_MSG_01015 = _geosclassic.MPDS_WARNING_MSG_01015
MPDS_WARNING_MSG_02001 = _geosclassic.MPDS_WARNING_MSG_02001
MPDS_WARNING_MSG_02002 = _geosclassic.MPDS_WARNING_MSG_02002
MPDS_WARNING_MSG_02005 = _geosclassic.MPDS_WARNING_MSG_02005
MPDS_WARNING_MSG_02012 = _geosclassic.MPDS_WARNING_MSG_02012
MPDS_WARNING_MSG_02015 = _geosclassic.MPDS_WARNING_MSG_02015
MPDS_WARNING_MSG_02016 = _geosclassic.MPDS_WARNING_MSG_02016
MPDS_WARNING_MSG_02020 = _geosclassic.MPDS_WARNING_MSG_02020
MPDS_WARNING_MSG_05011 = _geosclassic.MPDS_WARNING_MSG_05011
MPDS_WARNING_MSG_05030 = _geosclassic.MPDS_WARNING_MSG_05030
MPDS_WARNING_MSG_05044 = _geosclassic.MPDS_WARNING_MSG_05044
MPDS_WARNING_MSG_05045 = _geosclassic.MPDS_WARNING_MSG_05045
MPDS_WARNING_MSG_05125 = _geosclassic.MPDS_WARNING_MSG_05125
MPDS_WARNING_MSG_05127 = _geosclassic.MPDS_WARNING_MSG_05127
MPDS_WARNING_MSG_05126 = _geosclassic.MPDS_WARNING_MSG_05126
MPDS_WARNING_MSG_05100 = _geosclassic.MPDS_WARNING_MSG_05100
MPDS_WARNING_MSG_05101 = _geosclassic.MPDS_WARNING_MSG_05101
MPDS_WARNING_MSG_05102 = _geosclassic.MPDS_WARNING_MSG_05102
MPDS_WARNING_MSG_05103 = _geosclassic.MPDS_WARNING_MSG_05103
MPDS_WARNING_MSG_05104 = _geosclassic.MPDS_WARNING_MSG_05104
MPDS_WARNING_MSG_05105 = _geosclassic.MPDS_WARNING_MSG_05105
MPDS_WARNING_MSG_05120 = _geosclassic.MPDS_WARNING_MSG_05120
MPDS_WARNING_MSG_05130 = _geosclassic.MPDS_WARNING_MSG_05130
MPDS_WARNING_MSG_05131 = _geosclassic.MPDS_WARNING_MSG_05131
MPDS_WARNING_MSG_05200 = _geosclassic.MPDS_WARNING_MSG_05200
MPDS_WARNING_MSG_06830 = _geosclassic.MPDS_WARNING_MSG_06830
MPDS_WARNING_MSG_06835 = _geosclassic.MPDS_WARNING_MSG_06835
MPDS_WARNING_MSG_06836 = _geosclassic.MPDS_WARNING_MSG_06836
MPDS_WARNING_MSG_06837 = _geosclassic.MPDS_WARNING_MSG_06837
MPDS_WARNING_MSG_06838 = _geosclassic.MPDS_WARNING_MSG_06838
MPDS_WARNING_MSG_06839 = _geosclassic.MPDS_WARNING_MSG_06839
MPDS_WARNING_MSG_06840 = _geosclassic.MPDS_WARNING_MSG_06840
MPDS_WARNING_MSG_08001 = _geosclassic.MPDS_WARNING_MSG_08001
MPDS_WARNING_MSG_99998 = _geosclassic.MPDS_WARNING_MSG_99998
MPDS_MAX_NWARNING = _geosclassic.MPDS_MAX_NWARNING
MPDS_SHOW_PROGRESS_MONITOR = _geosclassic.MPDS_SHOW_PROGRESS_MONITOR
MPDS_MAX_PROGRESS_NAME_LENGTH = _geosclassic.MPDS_MAX_PROGRESS_NAME_LENGTH
class mpds_progressMonitor(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, mpds_progressMonitor, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, mpds_progressMonitor, name)
    __repr__ = _swig_repr
    __swig_setmethods__["progressName"] = _geosclassic.mpds_progressMonitor_progressName_set
    __swig_getmethods__["progressName"] = _geosclassic.mpds_progressMonitor_progressName_get
    if _newclass:
        progressName = _swig_property(_geosclassic.mpds_progressMonitor_progressName_get, _geosclassic.mpds_progressMonitor_progressName_set)
    __swig_setmethods__["warningNumber"] = _geosclassic.mpds_progressMonitor_warningNumber_set
    __swig_getmethods__["warningNumber"] = _geosclassic.mpds_progressMonitor_warningNumber_get
    if _newclass:
        warningNumber = _swig_property(_geosclassic.mpds_progressMonitor_warningNumber_get, _geosclassic.mpds_progressMonitor_warningNumber_set)
    __swig_setmethods__["nrealization"] = _geosclassic.mpds_progressMonitor_nrealization_set
    __swig_getmethods__["nrealization"] = _geosclassic.mpds_progressMonitor_nrealization_get
    if _newclass:
        nrealization = _swig_property(_geosclassic.mpds_progressMonitor_nrealization_get, _geosclassic.mpds_progressMonitor_nrealization_set)
    __swig_setmethods__["currentRealization"] = _geosclassic.mpds_progressMonitor_currentRealization_set
    __swig_getmethods__["currentRealization"] = _geosclassic.mpds_progressMonitor_currentRealization_get
    if _newclass:
        currentRealization = _swig_property(_geosclassic.mpds_progressMonitor_currentRealization_get, _geosclassic.mpds_progressMonitor_currentRealization_set)
    __swig_setmethods__["currentRealizationProgress"] = _geosclassic.mpds_progressMonitor_currentRealizationProgress_set
    __swig_getmethods__["currentRealizationProgress"] = _geosclassic.mpds_progressMonitor_currentRealizationProgress_get
    if _newclass:
        currentRealizationProgress = _swig_property(_geosclassic.mpds_progressMonitor_currentRealizationProgress_get, _geosclassic.mpds_progressMonitor_currentRealizationProgress_set)
    __swig_setmethods__["allRealizationProgress"] = _geosclassic.mpds_progressMonitor_allRealizationProgress_set
    __swig_getmethods__["allRealizationProgress"] = _geosclassic.mpds_progressMonitor_allRealizationProgress_get
    if _newclass:
        allRealizationProgress = _swig_property(_geosclassic.mpds_progressMonitor_allRealizationProgress_get, _geosclassic.mpds_progressMonitor_allRealizationProgress_set)
    __swig_setmethods__["abortedJobFlag"] = _geosclassic.mpds_progressMonitor_abortedJobFlag_set
    __swig_getmethods__["abortedJobFlag"] = _geosclassic.mpds_progressMonitor_abortedJobFlag_get
    if _newclass:
        abortedJobFlag = _swig_property(_geosclassic.mpds_progressMonitor_abortedJobFlag_get, _geosclassic.mpds_progressMonitor_abortedJobFlag_set)
    __swig_setmethods__["warningNumberList"] = _geosclassic.mpds_progressMonitor_warningNumberList_set
    __swig_getmethods__["warningNumberList"] = _geosclassic.mpds_progressMonitor_warningNumberList_get
    if _newclass:
        warningNumberList = _swig_property(_geosclassic.mpds_progressMonitor_warningNumberList_get, _geosclassic.mpds_progressMonitor_warningNumberList_set)
    __swig_setmethods__["nwarningNumber"] = _geosclassic.mpds_progressMonitor_nwarningNumber_set
    __swig_getmethods__["nwarningNumber"] = _geosclassic.mpds_progressMonitor_nwarningNumber_get
    if _newclass:
        nwarningNumber = _swig_property(_geosclassic.mpds_progressMonitor_nwarningNumber_get, _geosclassic.mpds_progressMonitor_nwarningNumber_set)
    __swig_setmethods__["nwarning"] = _geosclassic.mpds_progressMonitor_nwarning_set
    __swig_getmethods__["nwarning"] = _geosclassic.mpds_progressMonitor_nwarning_get
    if _newclass:
        nwarning = _swig_property(_geosclassic.mpds_progressMonitor_nwarning_get, _geosclassic.mpds_progressMonitor_nwarning_set)

    def __init__(self):
        this = _geosclassic.new_mpds_progressMonitor()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _geosclassic.delete_mpds_progressMonitor
    __del__ = lambda self: None
mpds_progressMonitor_swigregister = _geosclassic.mpds_progressMonitor_swigregister
mpds_progressMonitor_swigregister(mpds_progressMonitor)


def MPDSGetWarningMessage(arg1):
    return _geosclassic.MPDSGetWarningMessage(arg1)
MPDSGetWarningMessage = _geosclassic.MPDSGetWarningMessage

def MPDSInitProgressMonitor(arg1):
    return _geosclassic.MPDSInitProgressMonitor(arg1)
MPDSInitProgressMonitor = _geosclassic.MPDSInitProgressMonitor

def MPDSUpdateProgressMonitor0(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor0(arg1)
MPDSUpdateProgressMonitor0 = _geosclassic.MPDSUpdateProgressMonitor0

def MPDSUpdateProgressMonitor1(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor1(arg1)
MPDSUpdateProgressMonitor1 = _geosclassic.MPDSUpdateProgressMonitor1

def MPDSUpdateProgressMonitor1GI(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor1GI(arg1)
MPDSUpdateProgressMonitor1GI = _geosclassic.MPDSUpdateProgressMonitor1GI

def MPDSUpdateProgressMonitor2(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor2(arg1)
MPDSUpdateProgressMonitor2 = _geosclassic.MPDSUpdateProgressMonitor2

def MPDSUpdateProgressMonitor2GI(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor2GI(arg1)
MPDSUpdateProgressMonitor2GI = _geosclassic.MPDSUpdateProgressMonitor2GI

def MPDSUpdateProgressMonitor3(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor3(arg1)
MPDSUpdateProgressMonitor3 = _geosclassic.MPDSUpdateProgressMonitor3

def MPDSUpdateProgressMonitor3GI(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor3GI(arg1)
MPDSUpdateProgressMonitor3GI = _geosclassic.MPDSUpdateProgressMonitor3GI

def MPDSUpdateProgressMonitor4(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor4(arg1)
MPDSUpdateProgressMonitor4 = _geosclassic.MPDSUpdateProgressMonitor4

def MPDSUpdateProgressMonitor4GI(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor4GI(arg1)
MPDSUpdateProgressMonitor4GI = _geosclassic.MPDSUpdateProgressMonitor4GI

def MPDSOMPGeosClassicSim(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSOMPGeosClassicSim(arg1, arg2, arg3, arg4, arg5)
MPDSOMPGeosClassicSim = _geosclassic.MPDSOMPGeosClassicSim

def MPDSOMPGeosClassicIndicatorSim(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSOMPGeosClassicIndicatorSim(arg1, arg2, arg3, arg4, arg5)
MPDSOMPGeosClassicIndicatorSim = _geosclassic.MPDSOMPGeosClassicIndicatorSim

def MPDSOMPGeosClassicIndicatorSimEstimation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22):
    return _geosclassic.MPDSOMPGeosClassicIndicatorSimEstimation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22)
MPDSOMPGeosClassicIndicatorSimEstimation = _geosclassic.MPDSOMPGeosClassicIndicatorSimEstimation

def MPDSOMPGeosClassicIndicatorSimSimulation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23):
    return _geosclassic.MPDSOMPGeosClassicIndicatorSimSimulation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23)
MPDSOMPGeosClassicIndicatorSimSimulation = _geosclassic.MPDSOMPGeosClassicIndicatorSimSimulation

def MPDSOMPGeosClassicSimEstimation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22):
    return _geosclassic.MPDSOMPGeosClassicSimEstimation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22)
MPDSOMPGeosClassicSimEstimation = _geosclassic.MPDSOMPGeosClassicSimEstimation

def MPDSOMPGeosClassicSimEstimationUniqueSN(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15):
    return _geosclassic.MPDSOMPGeosClassicSimEstimationUniqueSN(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15)
MPDSOMPGeosClassicSimEstimationUniqueSN = _geosclassic.MPDSOMPGeosClassicSimEstimationUniqueSN

def MPDSOMPGeosClassicSimSimulation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27):
    return _geosclassic.MPDSOMPGeosClassicSimSimulation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27)
MPDSOMPGeosClassicSimSimulation = _geosclassic.MPDSOMPGeosClassicSimSimulation

def MPDSOMPImageConnectivityEulerNumber(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSOMPImageConnectivityEulerNumber(arg1, arg2, arg3, arg4)
MPDSOMPImageConnectivityEulerNumber = _geosclassic.MPDSOMPImageConnectivityEulerNumber

def MPDSOMPImageConnectivityFunction0(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageConnectivityFunction0(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)
MPDSOMPImageConnectivityFunction0 = _geosclassic.MPDSOMPImageConnectivityFunction0

def MPDSOMPImageConnectivityFunction1(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageConnectivityFunction1(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)
MPDSOMPImageConnectivityFunction1 = _geosclassic.MPDSOMPImageConnectivityFunction1

def MPDSOMPImageConnectivityFunction2(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageConnectivityFunction2(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)
MPDSOMPImageConnectivityFunction2 = _geosclassic.MPDSOMPImageConnectivityFunction2

def MPDSOMPImageConnectivityGlobalIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSOMPImageConnectivityGlobalIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
MPDSOMPImageConnectivityGlobalIndicator = _geosclassic.MPDSOMPImageConnectivityGlobalIndicator

def MPDSOMPImageConnectivity6EulerNumberCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageConnectivity6EulerNumberCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSOMPImageConnectivity6EulerNumberCurve = _geosclassic.MPDSOMPImageConnectivity6EulerNumberCurve

def MPDSOMPImageConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSOMPImageConnectivity6GlobalIndicatorCurve = _geosclassic.MPDSOMPImageConnectivity6GlobalIndicatorCurve

def MPDSOMPImageConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSOMPImageConnectivity18GlobalIndicatorCurve = _geosclassic.MPDSOMPImageConnectivity18GlobalIndicatorCurve

def MPDSOMPImageConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSOMPImageConnectivity26GlobalIndicatorCurve = _geosclassic.MPDSOMPImageConnectivity26GlobalIndicatorCurve

def MPDSOMPImageCorrelogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageCorrelogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)
MPDSOMPImageCorrelogram = _geosclassic.MPDSOMPImageCorrelogram

def MPDSOMPImageCovariance(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageCovariance(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)
MPDSOMPImageCovariance = _geosclassic.MPDSOMPImageCovariance

def MPDSOMPImageCovarianceNotCentred(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageCovarianceNotCentred(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)
MPDSOMPImageCovarianceNotCentred = _geosclassic.MPDSOMPImageCovarianceNotCentred

def MPDSOMPImageDilate(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageDilate(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSOMPImageDilate = _geosclassic.MPDSOMPImageDilate

def MPDSOMPImageDistanceEuclidean(arg1, arg2, arg3):
    return _geosclassic.MPDSOMPImageDistanceEuclidean(arg1, arg2, arg3)
MPDSOMPImageDistanceEuclidean = _geosclassic.MPDSOMPImageDistanceEuclidean

def MPDSOMPImageDistanceEuclideanConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceEuclideanConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSOMPImageDistanceEuclideanConnectivity6GlobalIndicatorCurve = _geosclassic.MPDSOMPImageDistanceEuclideanConnectivity6GlobalIndicatorCurve

def MPDSOMPImageDistanceEuclideanConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceEuclideanConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSOMPImageDistanceEuclideanConnectivity18GlobalIndicatorCurve = _geosclassic.MPDSOMPImageDistanceEuclideanConnectivity18GlobalIndicatorCurve

def MPDSOMPImageDistanceEuclideanConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceEuclideanConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSOMPImageDistanceEuclideanConnectivity26GlobalIndicatorCurve = _geosclassic.MPDSOMPImageDistanceEuclideanConnectivity26GlobalIndicatorCurve

def MPDSOMPImageDistanceEuclideanSign(arg1, arg2, arg3):
    return _geosclassic.MPDSOMPImageDistanceEuclideanSign(arg1, arg2, arg3)
MPDSOMPImageDistanceEuclideanSign = _geosclassic.MPDSOMPImageDistanceEuclideanSign

def MPDSOMPImageDistanceL1(arg1, arg2, arg3):
    return _geosclassic.MPDSOMPImageDistanceL1(arg1, arg2, arg3)
MPDSOMPImageDistanceL1 = _geosclassic.MPDSOMPImageDistanceL1

def MPDSOMPImageDistanceL1Connectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceL1Connectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSOMPImageDistanceL1Connectivity6GlobalIndicatorCurve = _geosclassic.MPDSOMPImageDistanceL1Connectivity6GlobalIndicatorCurve

def MPDSOMPImageDistanceL1Connectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceL1Connectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSOMPImageDistanceL1Connectivity18GlobalIndicatorCurve = _geosclassic.MPDSOMPImageDistanceL1Connectivity18GlobalIndicatorCurve

def MPDSOMPImageDistanceL1Connectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceL1Connectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
MPDSOMPImageDistanceL1Connectivity26GlobalIndicatorCurve = _geosclassic.MPDSOMPImageDistanceL1Connectivity26GlobalIndicatorCurve

def MPDSOMPImageDistanceL1Sign(arg1, arg2, arg3):
    return _geosclassic.MPDSOMPImageDistanceL1Sign(arg1, arg2, arg3)
MPDSOMPImageDistanceL1Sign = _geosclassic.MPDSOMPImageDistanceL1Sign

def MPDSOMPImageErode(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageErode(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSOMPImageErode = _geosclassic.MPDSOMPImageErode

def MPDSOMPImageIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11):
    return _geosclassic.MPDSOMPImageIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)
MPDSOMPImageIndicator = _geosclassic.MPDSOMPImageIndicator

def MPDSOMPImageMaxGeobody6SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11):
    return _geosclassic.MPDSOMPImageMaxGeobody6SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)
MPDSOMPImageMaxGeobody6SizeCurve = _geosclassic.MPDSOMPImageMaxGeobody6SizeCurve

def MPDSOMPImageMaxGeobody18SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11):
    return _geosclassic.MPDSOMPImageMaxGeobody18SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)
MPDSOMPImageMaxGeobody18SizeCurve = _geosclassic.MPDSOMPImageMaxGeobody18SizeCurve

def MPDSOMPImageMaxGeobody26SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11):
    return _geosclassic.MPDSOMPImageMaxGeobody26SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)
MPDSOMPImageMaxGeobody26SizeCurve = _geosclassic.MPDSOMPImageMaxGeobody26SizeCurve

def MPDSOMPImagePyramidExpand(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSOMPImagePyramidExpand(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSOMPImagePyramidExpand = _geosclassic.MPDSOMPImagePyramidExpand

def MPDSOMPImagePyramidReduce(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSOMPImagePyramidReduce(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
MPDSOMPImagePyramidReduce = _geosclassic.MPDSOMPImagePyramidReduce

def MPDSOMPImageTransiogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageTransiogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)
MPDSOMPImageTransiogram = _geosclassic.MPDSOMPImageTransiogram

def MPDSOMPImageVariogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageVariogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)
MPDSOMPImageVariogram = _geosclassic.MPDSOMPImageVariogram

def MPDSOMPMovingBoxAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPMovingBoxAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
MPDSOMPMovingBoxAverageImage = _geosclassic.MPDSOMPMovingBoxAverageImage

def MPDSOMPMovingSearchNeighborhoodAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSOMPMovingSearchNeighborhoodAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
MPDSOMPMovingSearchNeighborhoodAverageImage = _geosclassic.MPDSOMPMovingSearchNeighborhoodAverageImage

def new_int_array(nelements):
    return _geosclassic.new_int_array(nelements)
new_int_array = _geosclassic.new_int_array

def delete_int_array(ary):
    return _geosclassic.delete_int_array(ary)
delete_int_array = _geosclassic.delete_int_array

def int_array_getitem(ary, index):
    return _geosclassic.int_array_getitem(ary, index)
int_array_getitem = _geosclassic.int_array_getitem

def int_array_setitem(ary, index, value):
    return _geosclassic.int_array_setitem(ary, index, value)
int_array_setitem = _geosclassic.int_array_setitem

def new_intp_array(nelements):
    return _geosclassic.new_intp_array(nelements)
new_intp_array = _geosclassic.new_intp_array

def delete_intp_array(ary):
    return _geosclassic.delete_intp_array(ary)
delete_intp_array = _geosclassic.delete_intp_array

def intp_array_getitem(ary, index):
    return _geosclassic.intp_array_getitem(ary, index)
intp_array_getitem = _geosclassic.intp_array_getitem

def intp_array_setitem(ary, index, value):
    return _geosclassic.intp_array_setitem(ary, index, value)
intp_array_setitem = _geosclassic.intp_array_setitem

def new_double_array(nelements):
    return _geosclassic.new_double_array(nelements)
new_double_array = _geosclassic.new_double_array

def delete_double_array(ary):
    return _geosclassic.delete_double_array(ary)
delete_double_array = _geosclassic.delete_double_array

def double_array_getitem(ary, index):
    return _geosclassic.double_array_getitem(ary, index)
double_array_getitem = _geosclassic.double_array_getitem

def double_array_setitem(ary, index, value):
    return _geosclassic.double_array_setitem(ary, index, value)
double_array_setitem = _geosclassic.double_array_setitem

def new_real_array(nelements):
    return _geosclassic.new_real_array(nelements)
new_real_array = _geosclassic.new_real_array

def delete_real_array(ary):
    return _geosclassic.delete_real_array(ary)
delete_real_array = _geosclassic.delete_real_array

def real_array_getitem(ary, index):
    return _geosclassic.real_array_getitem(ary, index)
real_array_getitem = _geosclassic.real_array_getitem

def real_array_setitem(ary, index, value):
    return _geosclassic.real_array_setitem(ary, index, value)
real_array_setitem = _geosclassic.real_array_setitem

def new_realp_array(nelements):
    return _geosclassic.new_realp_array(nelements)
new_realp_array = _geosclassic.new_realp_array

def delete_realp_array(ary):
    return _geosclassic.delete_realp_array(ary)
delete_realp_array = _geosclassic.delete_realp_array

def realp_array_getitem(ary, index):
    return _geosclassic.realp_array_getitem(ary, index)
realp_array_getitem = _geosclassic.realp_array_getitem

def realp_array_setitem(ary, index, value):
    return _geosclassic.realp_array_setitem(ary, index, value)
realp_array_setitem = _geosclassic.realp_array_setitem

def new_MPDS_COVMODEL_array(nelements):
    return _geosclassic.new_MPDS_COVMODEL_array(nelements)
new_MPDS_COVMODEL_array = _geosclassic.new_MPDS_COVMODEL_array

def delete_MPDS_COVMODEL_array(ary):
    return _geosclassic.delete_MPDS_COVMODEL_array(ary)
delete_MPDS_COVMODEL_array = _geosclassic.delete_MPDS_COVMODEL_array

def MPDS_COVMODEL_array_getitem(ary, index):
    return _geosclassic.MPDS_COVMODEL_array_getitem(ary, index)
MPDS_COVMODEL_array_getitem = _geosclassic.MPDS_COVMODEL_array_getitem

def MPDS_COVMODEL_array_setitem(ary, index, value):
    return _geosclassic.MPDS_COVMODEL_array_setitem(ary, index, value)
MPDS_COVMODEL_array_setitem = _geosclassic.MPDS_COVMODEL_array_setitem

def new_MPDS_COVMODELELEM_array(nelements):
    return _geosclassic.new_MPDS_COVMODELELEM_array(nelements)
new_MPDS_COVMODELELEM_array = _geosclassic.new_MPDS_COVMODELELEM_array

def delete_MPDS_COVMODELELEM_array(ary):
    return _geosclassic.delete_MPDS_COVMODELELEM_array(ary)
delete_MPDS_COVMODELELEM_array = _geosclassic.delete_MPDS_COVMODELELEM_array

def MPDS_COVMODELELEM_array_getitem(ary, index):
    return _geosclassic.MPDS_COVMODELELEM_array_getitem(ary, index)
MPDS_COVMODELELEM_array_getitem = _geosclassic.MPDS_COVMODELELEM_array_getitem

def MPDS_COVMODELELEM_array_setitem(ary, index, value):
    return _geosclassic.MPDS_COVMODELELEM_array_setitem(ary, index, value)
MPDS_COVMODELELEM_array_setitem = _geosclassic.MPDS_COVMODELELEM_array_setitem

def new_MPDS_IMAGE_array(nelements):
    return _geosclassic.new_MPDS_IMAGE_array(nelements)
new_MPDS_IMAGE_array = _geosclassic.new_MPDS_IMAGE_array

def delete_MPDS_IMAGE_array(ary):
    return _geosclassic.delete_MPDS_IMAGE_array(ary)
delete_MPDS_IMAGE_array = _geosclassic.delete_MPDS_IMAGE_array

def MPDS_IMAGE_array_getitem(ary, index):
    return _geosclassic.MPDS_IMAGE_array_getitem(ary, index)
MPDS_IMAGE_array_getitem = _geosclassic.MPDS_IMAGE_array_getitem

def MPDS_IMAGE_array_setitem(ary, index, value):
    return _geosclassic.MPDS_IMAGE_array_setitem(ary, index, value)
MPDS_IMAGE_array_setitem = _geosclassic.MPDS_IMAGE_array_setitem

def new_MPDS_POINTSET_array(nelements):
    return _geosclassic.new_MPDS_POINTSET_array(nelements)
new_MPDS_POINTSET_array = _geosclassic.new_MPDS_POINTSET_array

def delete_MPDS_POINTSET_array(ary):
    return _geosclassic.delete_MPDS_POINTSET_array(ary)
delete_MPDS_POINTSET_array = _geosclassic.delete_MPDS_POINTSET_array

def MPDS_POINTSET_array_getitem(ary, index):
    return _geosclassic.MPDS_POINTSET_array_getitem(ary, index)
MPDS_POINTSET_array_getitem = _geosclassic.MPDS_POINTSET_array_getitem

def MPDS_POINTSET_array_setitem(ary, index, value):
    return _geosclassic.MPDS_POINTSET_array_setitem(ary, index, value)
MPDS_POINTSET_array_setitem = _geosclassic.MPDS_POINTSET_array_setitem

def malloc_MPDS_COVMODEL(*args):
    return _geosclassic.malloc_MPDS_COVMODEL(*args)
malloc_MPDS_COVMODEL = _geosclassic.malloc_MPDS_COVMODEL

def calloc_MPDS_COVMODEL(*args):
    return _geosclassic.calloc_MPDS_COVMODEL(*args)
calloc_MPDS_COVMODEL = _geosclassic.calloc_MPDS_COVMODEL

def realloc_MPDS_COVMODEL(ptr, nitems):
    return _geosclassic.realloc_MPDS_COVMODEL(ptr, nitems)
realloc_MPDS_COVMODEL = _geosclassic.realloc_MPDS_COVMODEL

def free_MPDS_COVMODEL(ptr):
    return _geosclassic.free_MPDS_COVMODEL(ptr)
free_MPDS_COVMODEL = _geosclassic.free_MPDS_COVMODEL
sizeof_MPDS_COVMODEL = _geosclassic.sizeof_MPDS_COVMODEL

def malloc_MPDS_COVMODELELEM(*args):
    return _geosclassic.malloc_MPDS_COVMODELELEM(*args)
malloc_MPDS_COVMODELELEM = _geosclassic.malloc_MPDS_COVMODELELEM

def calloc_MPDS_COVMODELELEM(*args):
    return _geosclassic.calloc_MPDS_COVMODELELEM(*args)
calloc_MPDS_COVMODELELEM = _geosclassic.calloc_MPDS_COVMODELELEM

def realloc_MPDS_COVMODELELEM(ptr, nitems):
    return _geosclassic.realloc_MPDS_COVMODELELEM(ptr, nitems)
realloc_MPDS_COVMODELELEM = _geosclassic.realloc_MPDS_COVMODELELEM

def free_MPDS_COVMODELELEM(ptr):
    return _geosclassic.free_MPDS_COVMODELELEM(ptr)
free_MPDS_COVMODELELEM = _geosclassic.free_MPDS_COVMODELELEM
sizeof_MPDS_COVMODELELEM = _geosclassic.sizeof_MPDS_COVMODELELEM

def malloc_MPDS_GRID(*args):
    return _geosclassic.malloc_MPDS_GRID(*args)
malloc_MPDS_GRID = _geosclassic.malloc_MPDS_GRID

def calloc_MPDS_GRID(*args):
    return _geosclassic.calloc_MPDS_GRID(*args)
calloc_MPDS_GRID = _geosclassic.calloc_MPDS_GRID

def realloc_MPDS_GRID(ptr, nitems):
    return _geosclassic.realloc_MPDS_GRID(ptr, nitems)
realloc_MPDS_GRID = _geosclassic.realloc_MPDS_GRID

def free_MPDS_GRID(ptr):
    return _geosclassic.free_MPDS_GRID(ptr)
free_MPDS_GRID = _geosclassic.free_MPDS_GRID
sizeof_MPDS_GRID = _geosclassic.sizeof_MPDS_GRID

def malloc_MPDS_IMAGE(*args):
    return _geosclassic.malloc_MPDS_IMAGE(*args)
malloc_MPDS_IMAGE = _geosclassic.malloc_MPDS_IMAGE

def calloc_MPDS_IMAGE(*args):
    return _geosclassic.calloc_MPDS_IMAGE(*args)
calloc_MPDS_IMAGE = _geosclassic.calloc_MPDS_IMAGE

def realloc_MPDS_IMAGE(ptr, nitems):
    return _geosclassic.realloc_MPDS_IMAGE(ptr, nitems)
realloc_MPDS_IMAGE = _geosclassic.realloc_MPDS_IMAGE

def free_MPDS_IMAGE(ptr):
    return _geosclassic.free_MPDS_IMAGE(ptr)
free_MPDS_IMAGE = _geosclassic.free_MPDS_IMAGE
sizeof_MPDS_IMAGE = _geosclassic.sizeof_MPDS_IMAGE

def malloc_MPDS_POINTSET(*args):
    return _geosclassic.malloc_MPDS_POINTSET(*args)
malloc_MPDS_POINTSET = _geosclassic.malloc_MPDS_POINTSET

def calloc_MPDS_POINTSET(*args):
    return _geosclassic.calloc_MPDS_POINTSET(*args)
calloc_MPDS_POINTSET = _geosclassic.calloc_MPDS_POINTSET

def realloc_MPDS_POINTSET(ptr, nitems):
    return _geosclassic.realloc_MPDS_POINTSET(ptr, nitems)
realloc_MPDS_POINTSET = _geosclassic.realloc_MPDS_POINTSET

def free_MPDS_POINTSET(ptr):
    return _geosclassic.free_MPDS_POINTSET(ptr)
free_MPDS_POINTSET = _geosclassic.free_MPDS_POINTSET
sizeof_MPDS_POINTSET = _geosclassic.sizeof_MPDS_POINTSET

def malloc_MPDS_GEOSCLASSICINPUT(*args):
    return _geosclassic.malloc_MPDS_GEOSCLASSICINPUT(*args)
malloc_MPDS_GEOSCLASSICINPUT = _geosclassic.malloc_MPDS_GEOSCLASSICINPUT

def calloc_MPDS_GEOSCLASSICINPUT(*args):
    return _geosclassic.calloc_MPDS_GEOSCLASSICINPUT(*args)
calloc_MPDS_GEOSCLASSICINPUT = _geosclassic.calloc_MPDS_GEOSCLASSICINPUT

def realloc_MPDS_GEOSCLASSICINPUT(ptr, nitems):
    return _geosclassic.realloc_MPDS_GEOSCLASSICINPUT(ptr, nitems)
realloc_MPDS_GEOSCLASSICINPUT = _geosclassic.realloc_MPDS_GEOSCLASSICINPUT

def free_MPDS_GEOSCLASSICINPUT(ptr):
    return _geosclassic.free_MPDS_GEOSCLASSICINPUT(ptr)
free_MPDS_GEOSCLASSICINPUT = _geosclassic.free_MPDS_GEOSCLASSICINPUT
sizeof_MPDS_GEOSCLASSICINPUT = _geosclassic.sizeof_MPDS_GEOSCLASSICINPUT

def malloc_MPDS_GEOSCLASSICINDICATORINPUT(*args):
    return _geosclassic.malloc_MPDS_GEOSCLASSICINDICATORINPUT(*args)
malloc_MPDS_GEOSCLASSICINDICATORINPUT = _geosclassic.malloc_MPDS_GEOSCLASSICINDICATORINPUT

def calloc_MPDS_GEOSCLASSICINDICATORINPUT(*args):
    return _geosclassic.calloc_MPDS_GEOSCLASSICINDICATORINPUT(*args)
calloc_MPDS_GEOSCLASSICINDICATORINPUT = _geosclassic.calloc_MPDS_GEOSCLASSICINDICATORINPUT

def realloc_MPDS_GEOSCLASSICINDICATORINPUT(ptr, nitems):
    return _geosclassic.realloc_MPDS_GEOSCLASSICINDICATORINPUT(ptr, nitems)
realloc_MPDS_GEOSCLASSICINDICATORINPUT = _geosclassic.realloc_MPDS_GEOSCLASSICINDICATORINPUT

def free_MPDS_GEOSCLASSICINDICATORINPUT(ptr):
    return _geosclassic.free_MPDS_GEOSCLASSICINDICATORINPUT(ptr)
free_MPDS_GEOSCLASSICINDICATORINPUT = _geosclassic.free_MPDS_GEOSCLASSICINDICATORINPUT
sizeof_MPDS_GEOSCLASSICINDICATORINPUT = _geosclassic.sizeof_MPDS_GEOSCLASSICINDICATORINPUT

def malloc_MPDS_GEOSCLASSICOUTPUT(*args):
    return _geosclassic.malloc_MPDS_GEOSCLASSICOUTPUT(*args)
malloc_MPDS_GEOSCLASSICOUTPUT = _geosclassic.malloc_MPDS_GEOSCLASSICOUTPUT

def calloc_MPDS_GEOSCLASSICOUTPUT(*args):
    return _geosclassic.calloc_MPDS_GEOSCLASSICOUTPUT(*args)
calloc_MPDS_GEOSCLASSICOUTPUT = _geosclassic.calloc_MPDS_GEOSCLASSICOUTPUT

def realloc_MPDS_GEOSCLASSICOUTPUT(ptr, nitems):
    return _geosclassic.realloc_MPDS_GEOSCLASSICOUTPUT(ptr, nitems)
realloc_MPDS_GEOSCLASSICOUTPUT = _geosclassic.realloc_MPDS_GEOSCLASSICOUTPUT

def free_MPDS_GEOSCLASSICOUTPUT(ptr):
    return _geosclassic.free_MPDS_GEOSCLASSICOUTPUT(ptr)
free_MPDS_GEOSCLASSICOUTPUT = _geosclassic.free_MPDS_GEOSCLASSICOUTPUT
sizeof_MPDS_GEOSCLASSICOUTPUT = _geosclassic.sizeof_MPDS_GEOSCLASSICOUTPUT

def malloc_MPDS_PROGRESSMONITOR(*args):
    return _geosclassic.malloc_MPDS_PROGRESSMONITOR(*args)
malloc_MPDS_PROGRESSMONITOR = _geosclassic.malloc_MPDS_PROGRESSMONITOR

def calloc_MPDS_PROGRESSMONITOR(*args):
    return _geosclassic.calloc_MPDS_PROGRESSMONITOR(*args)
calloc_MPDS_PROGRESSMONITOR = _geosclassic.calloc_MPDS_PROGRESSMONITOR

def realloc_MPDS_PROGRESSMONITOR(ptr, nitems):
    return _geosclassic.realloc_MPDS_PROGRESSMONITOR(ptr, nitems)
realloc_MPDS_PROGRESSMONITOR = _geosclassic.realloc_MPDS_PROGRESSMONITOR

def free_MPDS_PROGRESSMONITOR(ptr):
    return _geosclassic.free_MPDS_PROGRESSMONITOR(ptr)
free_MPDS_PROGRESSMONITOR = _geosclassic.free_MPDS_PROGRESSMONITOR
sizeof_MPDS_PROGRESSMONITOR = _geosclassic.sizeof_MPDS_PROGRESSMONITOR
MPDSUpdateProgressMonitor0_ptr = _geosclassic.MPDSUpdateProgressMonitor0_ptr
MPDSUpdateProgressMonitor1_ptr = _geosclassic.MPDSUpdateProgressMonitor1_ptr
MPDSUpdateProgressMonitor2_ptr = _geosclassic.MPDSUpdateProgressMonitor2_ptr
MPDSUpdateProgressMonitor3_ptr = _geosclassic.MPDSUpdateProgressMonitor3_ptr
MPDSUpdateProgressMonitor4_ptr = _geosclassic.MPDSUpdateProgressMonitor4_ptr

def mpds_get_error_message(ierr):
    return _geosclassic.mpds_get_error_message(ierr)
mpds_get_error_message = _geosclassic.mpds_get_error_message

def mpds_get_warning_message(iwarn):
    return _geosclassic.mpds_get_warning_message(iwarn)
mpds_get_warning_message = _geosclassic.mpds_get_warning_message

def mpds_set_int_vector_from_array(vector, offset, array):
    return _geosclassic.mpds_set_int_vector_from_array(vector, offset, array)
mpds_set_int_vector_from_array = _geosclassic.mpds_set_int_vector_from_array

def mpds_set_double_vector_from_array(vector, offset, array):
    return _geosclassic.mpds_set_double_vector_from_array(vector, offset, array)
mpds_set_double_vector_from_array = _geosclassic.mpds_set_double_vector_from_array

def mpds_set_real_vector_from_array(vector, offset, array):
    return _geosclassic.mpds_set_real_vector_from_array(vector, offset, array)
mpds_set_real_vector_from_array = _geosclassic.mpds_set_real_vector_from_array

def mpds_get_array_from_int_vector(vector, offset, array):
    return _geosclassic.mpds_get_array_from_int_vector(vector, offset, array)
mpds_get_array_from_int_vector = _geosclassic.mpds_get_array_from_int_vector

def mpds_get_array_from_double_vector(vector, offset, array):
    return _geosclassic.mpds_get_array_from_double_vector(vector, offset, array)
mpds_get_array_from_double_vector = _geosclassic.mpds_get_array_from_double_vector

def mpds_get_array_from_real_vector(vector, offset, array):
    return _geosclassic.mpds_get_array_from_real_vector(vector, offset, array)
mpds_get_array_from_real_vector = _geosclassic.mpds_get_array_from_real_vector

def mpds_set_real_vector_to_cst(arg1, arg2, arg3, arg4):
    return _geosclassic.mpds_set_real_vector_to_cst(arg1, arg2, arg3, arg4)
mpds_set_real_vector_to_cst = _geosclassic.mpds_set_real_vector_to_cst

def mpds_allocate_and_set_geosClassicInput_varname(geosClassicInput, STRING):
    return _geosclassic.mpds_allocate_and_set_geosClassicInput_varname(geosClassicInput, STRING)
mpds_allocate_and_set_geosClassicInput_varname = _geosclassic.mpds_allocate_and_set_geosClassicInput_varname

def mpds_allocate_and_set_geosClassicIndicatorInput_varname(geosClassicIndicatorInput, STRING):
    return _geosclassic.mpds_allocate_and_set_geosClassicIndicatorInput_varname(geosClassicIndicatorInput, STRING)
mpds_allocate_and_set_geosClassicIndicatorInput_varname = _geosclassic.mpds_allocate_and_set_geosClassicIndicatorInput_varname

def mpds_allocate_and_set_geosClassicInput_outputReportFileName(geosClassicInput, STRING):
    return _geosclassic.mpds_allocate_and_set_geosClassicInput_outputReportFileName(geosClassicInput, STRING)
mpds_allocate_and_set_geosClassicInput_outputReportFileName = _geosclassic.mpds_allocate_and_set_geosClassicInput_outputReportFileName

def mpds_allocate_and_set_geosClassicIndicatorInput_outputReportFileName(geosClassicIndicatorInput, STRING):
    return _geosclassic.mpds_allocate_and_set_geosClassicIndicatorInput_outputReportFileName(geosClassicIndicatorInput, STRING)
mpds_allocate_and_set_geosClassicIndicatorInput_outputReportFileName = _geosclassic.mpds_allocate_and_set_geosClassicIndicatorInput_outputReportFileName

def mpds_set_varname(varname, index, STRING):
    return _geosclassic.mpds_set_varname(varname, index, STRING)
mpds_set_varname = _geosclassic.mpds_set_varname

def mpds_get_varname(varname, index):
    return _geosclassic.mpds_get_varname(varname, index)
mpds_get_varname = _geosclassic.mpds_get_varname
# This file is compatible with both classic and new-style classes.


