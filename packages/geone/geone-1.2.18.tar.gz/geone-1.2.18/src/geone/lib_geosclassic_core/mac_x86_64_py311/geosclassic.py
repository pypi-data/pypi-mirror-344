# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.2.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _geosclassic
else:
    import _geosclassic

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



def fopen(filename, mode):
    return _geosclassic.fopen(filename, mode)

def fclose(f):
    return _geosclassic.fclose(f)
MPDS_VERSION_NUMBER = _geosclassic.MPDS_VERSION_NUMBER
MPDS_BUILD_NUMBER = _geosclassic.MPDS_BUILD_NUMBER
FALSE = _geosclassic.FALSE
TRUE = _geosclassic.TRUE
MPDS_FORMAT_DEFAULT = _geosclassic.MPDS_FORMAT_DEFAULT
MPDS_FORMAT_WIDTH = _geosclassic.MPDS_FORMAT_WIDTH
MPDS_FORMAT_PRECISION = _geosclassic.MPDS_FORMAT_PRECISION
MPDS_FILENAME_LENGTH = _geosclassic.MPDS_FILENAME_LENGTH
MPDS_VARNAME_LENGTH = _geosclassic.MPDS_VARNAME_LENGTH
MPDS_LINE_LENGTH = _geosclassic.MPDS_LINE_LENGTH
MPDS_WORD_LENGTH = _geosclassic.MPDS_WORD_LENGTH
MPDS_MISSING_VALUE = _geosclassic.MPDS_MISSING_VALUE
MPDS_INEQUALITY_DATA_SUFFIX_FOR_MIN = _geosclassic.MPDS_INEQUALITY_DATA_SUFFIX_FOR_MIN
MPDS_INEQUALITY_DATA_SUFFIX_FOR_MAX = _geosclassic.MPDS_INEQUALITY_DATA_SUFFIX_FOR_MAX
MPDS_JOB_VARNAME = _geosclassic.MPDS_JOB_VARNAME
MPDS_JOB_DATA_LOCATION = _geosclassic.MPDS_JOB_DATA_LOCATION
MPDS_JOB_DATA_VALUE = _geosclassic.MPDS_JOB_DATA_VALUE
MPDS_SHIFT_FACTOR_FOR_POINT = _geosclassic.MPDS_SHIFT_FACTOR_FOR_POINT
MPDS_MAX_NB_VALUE = _geosclassic.MPDS_MAX_NB_VALUE
MPDS_EPSILON_HARD = _geosclassic.MPDS_EPSILON_HARD
MPDS_EPSILON = _geosclassic.MPDS_EPSILON
MPDS_EPSILON_SOFT = _geosclassic.MPDS_EPSILON_SOFT
MPDS_INFINITY = _geosclassic.MPDS_INFINITY
MPDS_CHUNK = _geosclassic.MPDS_CHUNK
MPDS_NB_AVAILABLE_DISTANCE = _geosclassic.MPDS_NB_AVAILABLE_DISTANCE
MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_1D = _geosclassic.MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_1D
MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_2D = _geosclassic.MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_2D
MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_3D = _geosclassic.MPDS_POST_PROCESSING_NNEIGHBORINGNODE_DEFAULT_3D
MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_1D = _geosclassic.MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_1D
MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_2D = _geosclassic.MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_2D
MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_3D = _geosclassic.MPDS_POST_PROCESSING_NEIGHBORINGNODE_DENSITY_DEFAULT_3D
MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_0 = _geosclassic.MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_0
MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_1 = _geosclassic.MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_1
MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_2 = _geosclassic.MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_2
MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_3 = _geosclassic.MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_3
MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_4 = _geosclassic.MPDS_POST_PROCESSING_DISTANCE_THRESHOLD_DEFAULT_DISTANCETYPE_4
MPDS_POST_PROCESSING_MAX_SCAN_FRACTION_DEFAULT = _geosclassic.MPDS_POST_PROCESSING_MAX_SCAN_FRACTION_DEFAULT
MPDS_POST_PROCESSING_TOLERANCE_DEFAULT = _geosclassic.MPDS_POST_PROCESSING_TOLERANCE_DEFAULT
MPDS_POST_PROCESSING_SEED_INCREMENT = _geosclassic.MPDS_POST_PROCESSING_SEED_INCREMENT
MPDS_SIMULATION_GRID_AS_TRAINING_IMAGE = _geosclassic.MPDS_SIMULATION_GRID_AS_TRAINING_IMAGE
MPDS_USE_TRAINING_IMAGE_FOR_CONNECTIVITY = _geosclassic.MPDS_USE_TRAINING_IMAGE_FOR_CONNECTIVITY
MPDS_PREFIX_FOR_TEMPORARY_FILE = _geosclassic.MPDS_PREFIX_FOR_TEMPORARY_FILE
MPDS_PREFIX_FOR_OCCURRENCE_PROPORTION = _geosclassic.MPDS_PREFIX_FOR_OCCURRENCE_PROPORTION
MPDS_SUFFIX_FOR_REALIZATION = _geosclassic.MPDS_SUFFIX_FOR_REALIZATION
MPDS_SUFFIX_FOR_CLOSING = _geosclassic.MPDS_SUFFIX_FOR_CLOSING
MPDS_SUFFIX_FOR_CONNECTIVITY_FUNCTION = _geosclassic.MPDS_SUFFIX_FOR_CONNECTIVITY_FUNCTION
MPDS_SUFFIX_FOR_CORRELOGRAM = _geosclassic.MPDS_SUFFIX_FOR_CORRELOGRAM
MPDS_SUFFIX_FOR_COVARIANCE = _geosclassic.MPDS_SUFFIX_FOR_COVARIANCE
MPDS_SUFFIX_FOR_COVARIANCE_NOT_CENTRED = _geosclassic.MPDS_SUFFIX_FOR_COVARIANCE_NOT_CENTRED
MPDS_SUFFIX_FOR_DILATING = _geosclassic.MPDS_SUFFIX_FOR_DILATING
MPDS_SUFFIX_FOR_DISTANCE_DILATING = _geosclassic.MPDS_SUFFIX_FOR_DISTANCE_DILATING
MPDS_SUFFIX_FOR_DISTANCE_L1 = _geosclassic.MPDS_SUFFIX_FOR_DISTANCE_L1
MPDS_SUFFIX_FOR_DISTANCE_L1_SIGN = _geosclassic.MPDS_SUFFIX_FOR_DISTANCE_L1_SIGN
MPDS_SUFFIX_FOR_DISTANCE_L2 = _geosclassic.MPDS_SUFFIX_FOR_DISTANCE_L2
MPDS_SUFFIX_FOR_DISTANCE_L2_SIGN = _geosclassic.MPDS_SUFFIX_FOR_DISTANCE_L2_SIGN
MPDS_SUFFIX_FOR_ERODING = _geosclassic.MPDS_SUFFIX_FOR_ERODING
MPDS_SUFFIX_FOR_GEOBODY = _geosclassic.MPDS_SUFFIX_FOR_GEOBODY
MPDS_SUFFIX_FOR_INDICATOR = _geosclassic.MPDS_SUFFIX_FOR_INDICATOR
MPDS_SUFFIX_FOR_MOVING_SN_AVERAGE = _geosclassic.MPDS_SUFFIX_FOR_MOVING_SN_AVERAGE
MPDS_SUFFIX_FOR_MOVING_BOX_AVERAGE = _geosclassic.MPDS_SUFFIX_FOR_MOVING_BOX_AVERAGE
MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_EXP = _geosclassic.MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_EXP
MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_LAP = _geosclassic.MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_LAP
MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_RED = _geosclassic.MPDS_SUFFIX_FOR_GAUSSIAN_PYRAMID_RED
MPDS_SUFFIX_FOR_PYRAMID_LEVEL = _geosclassic.MPDS_SUFFIX_FOR_PYRAMID_LEVEL
MPDS_SUFFIX_FOR_OPENING = _geosclassic.MPDS_SUFFIX_FOR_OPENING
MPDS_SUFFIX_FOR_QC_INDICATOR_SCALE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_SCALE
MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_MEAN_AND_SD_SCALE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_MEAN_AND_SD_SCALE
MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_QUANTILE_SCALE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_QUANTILE_SCALE
MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_DETAIL_SCALE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_MARK_DETAIL_SCALE
MPDS_SUFFIX_FOR_QC_INDICATOR_ALL_PAIRS_SCALE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_ALL_PAIRS_SCALE
MPDS_SUFFIX_FOR_QC_INDICATOR_ENSEMBLE = _geosclassic.MPDS_SUFFIX_FOR_QC_INDICATOR_ENSEMBLE
MPDS_SUFFIX_FOR_QC_MPH_PATTERN_COUNT_SUM_ENSEMBLE = _geosclassic.MPDS_SUFFIX_FOR_QC_MPH_PATTERN_COUNT_SUM_ENSEMBLE
MPDS_SUFFIX_FOR_QC_ENSEMBLE_ZONE = _geosclassic.MPDS_SUFFIX_FOR_QC_ENSEMBLE_ZONE
MPDS_SUFFIX_FOR_QC_ENSEMBLE_ZONE_DESCRIPTION = _geosclassic.MPDS_SUFFIX_FOR_QC_ENSEMBLE_ZONE_DESCRIPTION
MPDS_SUFFIX_FOR_QC_ENSEMBLE_DESCRIPTION = _geosclassic.MPDS_SUFFIX_FOR_QC_ENSEMBLE_DESCRIPTION
MPDS_SUFFIX_FOR_QC_IMAGE_PATTERN_DISTANCE = _geosclassic.MPDS_SUFFIX_FOR_QC_IMAGE_PATTERN_DISTANCE
MPDS_SUFFIX_FOR_TRANSIOGRAM = _geosclassic.MPDS_SUFFIX_FOR_TRANSIOGRAM
MPDS_SUFFIX_FOR_VARIOGRAM = _geosclassic.MPDS_SUFFIX_FOR_VARIOGRAM
MPDS_EXTENSION_FOR_IMAGE_FILE = _geosclassic.MPDS_EXTENSION_FOR_IMAGE_FILE
MPDS_EXTENSION_FOR_TEXT_FILE = _geosclassic.MPDS_EXTENSION_FOR_TEXT_FILE
MPDS_EXTENSION_FOR_INPUT_FILE = _geosclassic.MPDS_EXTENSION_FOR_INPUT_FILE
MPDS_EXTENSION_FOR_BLOCK_DATA_FILE = _geosclassic.MPDS_EXTENSION_FOR_BLOCK_DATA_FILE
MPDS_NAME_FOR_PGM_VAR = _geosclassic.MPDS_NAME_FOR_PGM_VAR
MPDS_NAME_FOR_PPM_VAR0 = _geosclassic.MPDS_NAME_FOR_PPM_VAR0
MPDS_NAME_FOR_PPM_VAR1 = _geosclassic.MPDS_NAME_FOR_PPM_VAR1
MPDS_NAME_FOR_PPM_VAR2 = _geosclassic.MPDS_NAME_FOR_PPM_VAR2
MPDS_NAME_FOR_PATH_INDEX_VAR = _geosclassic.MPDS_NAME_FOR_PATH_INDEX_VAR
MPDS_NAME_FOR_ERROR_VAR = _geosclassic.MPDS_NAME_FOR_ERROR_VAR
MPDS_NAME_FOR_TI_GRID_NODE_INDEX_VAR = _geosclassic.MPDS_NAME_FOR_TI_GRID_NODE_INDEX_VAR
MPDS_NAME_FOR_TI_INDEX_VAR = _geosclassic.MPDS_NAME_FOR_TI_INDEX_VAR
MPDS_NAME_FOR_SECTION_TYPE = _geosclassic.MPDS_NAME_FOR_SECTION_TYPE
MPDS_NAME_FOR_SECTION_STEP = _geosclassic.MPDS_NAME_FOR_SECTION_STEP
MPDS_NB_DIGIT_FOR_REALIZATION_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_REALIZATION_NUMBER
MPDS_NB_DIGIT_FOR_LEVEL_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_LEVEL_NUMBER
MPDS_NB_DIGIT_FOR_INDEX_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_INDEX_NUMBER
MPDS_NB_DIGIT_FOR_SCALE_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_SCALE_NUMBER
MPDS_NB_DIGIT_FOR_ZONE_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_ZONE_NUMBER
MPDS_NB_DIGIT_FOR_VARIABLE_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_VARIABLE_NUMBER
MPDS_NB_DIGIT_FOR_QC_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_QC_NUMBER
MPDS_NB_DIGIT_FOR_ENSEMBLE_NUMBER = _geosclassic.MPDS_NB_DIGIT_FOR_ENSEMBLE_NUMBER
MPDS_NB_DIGIT_FOR_VALUE_NAME = _geosclassic.MPDS_NB_DIGIT_FOR_VALUE_NAME
MPDS_VTK_VERSION_NUMBER = _geosclassic.MPDS_VTK_VERSION_NUMBER
MPDS_SEPARATION_LINE_EQUAL = _geosclassic.MPDS_SEPARATION_LINE_EQUAL
MPDS_SEPARATION_LINE_STAR = _geosclassic.MPDS_SEPARATION_LINE_STAR
MPDS_SEPARATION_LINE_MINUS = _geosclassic.MPDS_SEPARATION_LINE_MINUS
MPDS_SEPARATION_LINE_PLUS = _geosclassic.MPDS_SEPARATION_LINE_PLUS
MPDS_NODEPATH_WEIGHT_MIN = _geosclassic.MPDS_NODEPATH_WEIGHT_MIN
MPDS_NODEPATH_A0_MIN = _geosclassic.MPDS_NODEPATH_A0_MIN
MPDS_NODEPATH_A0_MAX = _geosclassic.MPDS_NODEPATH_A0_MAX
MPDS_MIN_SPACING = _geosclassic.MPDS_MIN_SPACING
MPDS_MAX_NSIMVAR = _geosclassic.MPDS_MAX_NSIMVAR
MPDS_MAX_NVAR = _geosclassic.MPDS_MAX_NVAR
MPDS_MAX_NXYZ = _geosclassic.MPDS_MAX_NXYZ
MPDS_MAX_NXYZV = _geosclassic.MPDS_MAX_NXYZV
MPDS_MIN_ANISOTROPY_RATIO = _geosclassic.MPDS_MIN_ANISOTROPY_RATIO
MPDS_MAX_NTRAINIMAGE = _geosclassic.MPDS_MAX_NTRAINIMAGE
MPDS_MAX_TRAINVALUERANGEEXTENSIONMAX = _geosclassic.MPDS_MAX_TRAINVALUERANGEEXTENSIONMAX
MPDS_MAX_TRAIN_MISSING_VALUE_PROPORTION_FOR_WARNING = _geosclassic.MPDS_MAX_TRAIN_MISSING_VALUE_PROPORTION_FOR_WARNING
MPDS_MIN_NNEIGHBORINGNODE = _geosclassic.MPDS_MIN_NNEIGHBORINGNODE
MPDS_MAX_NNEIGHBORINGNODE = _geosclassic.MPDS_MAX_NNEIGHBORINGNODE
MPDS_MAX_NNEIGHBORINGNODE_ALL_VAR = _geosclassic.MPDS_MAX_NNEIGHBORINGNODE_ALL_VAR
MPDS_MIN_MAX_PROP_INEQUALITY_NODE = _geosclassic.MPDS_MIN_MAX_PROP_INEQUALITY_NODE
MPDS_MAX_MAX_PROP_INEQUALITY_NODE = _geosclassic.MPDS_MAX_MAX_PROP_INEQUALITY_NODE
MPDS_MIN_NEIGHBORINGNODE_DENSITY = _geosclassic.MPDS_MIN_NEIGHBORINGNODE_DENSITY
MPDS_MAX_NEIGHBORINGNODE_DENSITY = _geosclassic.MPDS_MAX_NEIGHBORINGNODE_DENSITY
MPDS_MIN_DISTANCETHRESHOLD = _geosclassic.MPDS_MIN_DISTANCETHRESHOLD
MPDS_MAX_DISTANCETHRESHOLD = _geosclassic.MPDS_MAX_DISTANCETHRESHOLD
MPDS_MIN_MAXSCANFRACTION = _geosclassic.MPDS_MIN_MAXSCANFRACTION
MPDS_MAX_MAXSCANFRACTION = _geosclassic.MPDS_MAX_MAXSCANFRACTION
MPDS_MIN_MAXSCANFRACTION_VARIABLE_TRANSFORM = _geosclassic.MPDS_MIN_MAXSCANFRACTION_VARIABLE_TRANSFORM
MPDS_MAX_MAXSCANFRACTION_VARIABLE_TRANSFORM = _geosclassic.MPDS_MAX_MAXSCANFRACTION_VARIABLE_TRANSFORM
MPDS_MIN_TOLERANCE = _geosclassic.MPDS_MIN_TOLERANCE
MPDS_MAX_TOLERANCE = _geosclassic.MPDS_MAX_TOLERANCE
MPDS_MIN_TARGET_INTERVAL_LENGTH = _geosclassic.MPDS_MIN_TARGET_INTERVAL_LENGTH
MPDS_MAX_NPOSTPROCESSINGPATHMAX = _geosclassic.MPDS_MAX_NPOSTPROCESSINGPATHMAX
MPDS_MAX_NREALIZATION = _geosclassic.MPDS_MAX_NREALIZATION
MPDS_MAX_RATIO_SEARCHNEIGHBORHOOD_SIZE_OVER_TI_SIZE = _geosclassic.MPDS_MAX_RATIO_SEARCHNEIGHBORHOOD_SIZE_OVER_TI_SIZE
MPDS_SEARCHNEIGHBORHOOD_RADIUS_RANGE_FACTOR = _geosclassic.MPDS_SEARCHNEIGHBORHOOD_RADIUS_RANGE_FACTOR
MPDS_APPROX_RANGE_TOLERANCE = _geosclassic.MPDS_APPROX_RANGE_TOLERANCE
MPDS_MIN_HOMOTHETY_RATIO = _geosclassic.MPDS_MIN_HOMOTHETY_RATIO
MPDS_MAX_HOMOTHETY_RATIO = _geosclassic.MPDS_MAX_HOMOTHETY_RATIO
MPDS_MIN_SOFT_PROBABILITY_NCLASS = _geosclassic.MPDS_MIN_SOFT_PROBABILITY_NCLASS
MPDS_MAX_SOFT_PROBABILITY_NCLASS = _geosclassic.MPDS_MAX_SOFT_PROBABILITY_NCLASS
MPDS_GLOBAL_PROBABILITY_SYNC_STEP_MIN = _geosclassic.MPDS_GLOBAL_PROBABILITY_SYNC_STEP_MIN
MPDS_GLOBAL_PROBABILITY_SYNC_STEP_MAX = _geosclassic.MPDS_GLOBAL_PROBABILITY_SYNC_STEP_MAX
MPDS_GLOBAL_PROBABILITY_SYNC_STEP_FACTOR = _geosclassic.MPDS_GLOBAL_PROBABILITY_SYNC_STEP_FACTOR
MPDS_MAX_RATIO_TEMPLATE_SIZE_PRODUCT_OVER_IMAGE_SIZE_PRODUCT = _geosclassic.MPDS_MAX_RATIO_TEMPLATE_SIZE_PRODUCT_OVER_IMAGE_SIZE_PRODUCT
MPDS_TOLEREANCE_ON_SUM_SOFT_PROBABILITY = _geosclassic.MPDS_TOLEREANCE_ON_SUM_SOFT_PROBABILITY
MPDS_MIN_PROBABILITY_CONSTRAINT_CONSTANT_THRESHOLD = _geosclassic.MPDS_MIN_PROBABILITY_CONSTRAINT_CONSTANT_THRESHOLD
MPDS_MAX_PROBABILITY_CONSTRAINT_CONSTANT_THRESHOLD = _geosclassic.MPDS_MAX_PROBABILITY_CONSTRAINT_CONSTANT_THRESHOLD
MPDS_MIN_PROBABILITY_CONSTRAINT_INDICATOR_VARIANCE = _geosclassic.MPDS_MIN_PROBABILITY_CONSTRAINT_INDICATOR_VARIANCE
MPDS_MAX_PROBABILITY_CONSTRAINT_MISMATCH = _geosclassic.MPDS_MAX_PROBABILITY_CONSTRAINT_MISMATCH
MPDS_LOCAL_PROBABILITY_CONSTRAINT_TABLE_LENGTH = _geosclassic.MPDS_LOCAL_PROBABILITY_CONSTRAINT_TABLE_LENGTH
MPDS_MIN_CONNECTIVITY_CONSTRAINT_THRESHOLD = _geosclassic.MPDS_MIN_CONNECTIVITY_CONSTRAINT_THRESHOLD
MPDS_MAX_CONNECTIVITY_CONSTRAINT_THRESHOLD = _geosclassic.MPDS_MAX_CONNECTIVITY_CONSTRAINT_THRESHOLD
MPDS_MAX_POWER_PATH_RANDOM_HD_DISTANCE_SUM = _geosclassic.MPDS_MAX_POWER_PATH_RANDOM_HD_DISTANCE_SUM
MPDS_CHANGE_TRANSFORMATION_STEP = _geosclassic.MPDS_CHANGE_TRANSFORMATION_STEP
MPDS_NDYNAMICTHRESHOLDPARAMETERS = _geosclassic.MPDS_NDYNAMICTHRESHOLDPARAMETERS
MPDS_MIN_BLOCK_DATA_LOCAL_VAR = _geosclassic.MPDS_MIN_BLOCK_DATA_LOCAL_VAR
MPDS_MIN_BLOCK_DATA_KERNEL_BANDWIDTH = _geosclassic.MPDS_MIN_BLOCK_DATA_KERNEL_BANDWIDTH
MPDS_MAX_BLOCK_DATA_SAMPLED_REGION = _geosclassic.MPDS_MAX_BLOCK_DATA_SAMPLED_REGION
MPDS_MAX_NB_RANDOM_TRY_FOR_INEQUALITY_DATA = _geosclassic.MPDS_MAX_NB_RANDOM_TRY_FOR_INEQUALITY_DATA
MPDS_PYRAMID_NLEVEL_MAX = _geosclassic.MPDS_PYRAMID_NLEVEL_MAX
MPDS_PYRAMID_FACTOR_MAX_N_NEIGHBOR_MIN = _geosclassic.MPDS_PYRAMID_FACTOR_MAX_N_NEIGHBOR_MIN
MPDS_PYRAMID_FACTOR_MAX_N_NEIGHBOR_MAX = _geosclassic.MPDS_PYRAMID_FACTOR_MAX_N_NEIGHBOR_MAX
MPDS_PYRAMID_FACTOR_DISTANCE_THRESHOLD_MIN = _geosclassic.MPDS_PYRAMID_FACTOR_DISTANCE_THRESHOLD_MIN
MPDS_PYRAMID_FACTOR_DISTANCE_THRESHOLD_MAX = _geosclassic.MPDS_PYRAMID_FACTOR_DISTANCE_THRESHOLD_MAX
MPDS_PYRAMID_FACTOR_MAX_SCAN_FRACTION_MIN = _geosclassic.MPDS_PYRAMID_FACTOR_MAX_SCAN_FRACTION_MIN
MPDS_PYRAMID_FACTOR_MAX_SCAN_FRACTION_MAX = _geosclassic.MPDS_PYRAMID_FACTOR_MAX_SCAN_FRACTION_MAX
MPDS_PYRAMID_REDUCTION_FACTOR_MAX = _geosclassic.MPDS_PYRAMID_REDUCTION_FACTOR_MAX
MPDS_PYRAMID_CATEGORICAL_NCLASS_MAX = _geosclassic.MPDS_PYRAMID_CATEGORICAL_NCLASS_MAX
MPDS_GAUSSIAN_PYRAMID_RED_TOTAL_WEIGHT_MIN = _geosclassic.MPDS_GAUSSIAN_PYRAMID_RED_TOTAL_WEIGHT_MIN
MPDS_GAUSSIAN_PYRAMID_EXP_TOTAL_WEIGHT_MIN = _geosclassic.MPDS_GAUSSIAN_PYRAMID_EXP_TOTAL_WEIGHT_MIN
MPDS_MIN_WEIGHT_PROPORTION_MOVING_BOX_SUM = _geosclassic.MPDS_MIN_WEIGHT_PROPORTION_MOVING_BOX_SUM
MPDS_MISSING_CLASSID = _geosclassic.MPDS_MISSING_CLASSID
MPDS_MIN_MPH_NCLASS = _geosclassic.MPDS_MIN_MPH_NCLASS
MPDS_MAX_MPH_NCLASS = _geosclassic.MPDS_MAX_MPH_NCLASS
MPDS_QC_NZONE_MAX = _geosclassic.MPDS_QC_NZONE_MAX
MPDS_QC_NTRENDVAR_MAX = _geosclassic.MPDS_QC_NTRENDVAR_MAX
MPDS_GRAPH_MAX_NLOOPMAX = _geosclassic.MPDS_GRAPH_MAX_NLOOPMAX
MPDS_GRAPH_MIN_CONNECTIVITY_CHECK_DIST_TO_EDGE_FACTOR = _geosclassic.MPDS_GRAPH_MIN_CONNECTIVITY_CHECK_DIST_TO_EDGE_FACTOR
MPDS_GRAPH_MAX_CONNECTIVITY_CHECK_DIST_TO_EDGE_FACTOR = _geosclassic.MPDS_GRAPH_MAX_CONNECTIVITY_CHECK_DIST_TO_EDGE_FACTOR
MPDS_CONNECTIVITY_GAMMA_VALUE_IF_NO_GEOBODY = _geosclassic.MPDS_CONNECTIVITY_GAMMA_VALUE_IF_NO_GEOBODY
MPDS_PRIME_NUMBER_LIST_SIZE = _geosclassic.MPDS_PRIME_NUMBER_LIST_SIZE
OUTPUT_FILE_NONE = _geosclassic.OUTPUT_FILE_NONE
OUTPUT_FILE_ASCII = _geosclassic.OUTPUT_FILE_ASCII
OUTPUT_FILE_BINARY = _geosclassic.OUTPUT_FILE_BINARY
MPDS_GEOS_CLASSIC_VERSION_NUMBER = _geosclassic.MPDS_GEOS_CLASSIC_VERSION_NUMBER
MPDS_GEOS_CLASSIC_BUILD_NUMBER = _geosclassic.MPDS_GEOS_CLASSIC_BUILD_NUMBER
MPDS_GEOS_CLASSIC_SUFFIX_FOR_REALIZATION = _geosclassic.MPDS_GEOS_CLASSIC_SUFFIX_FOR_REALIZATION
MPDS_GEOS_CLASSIC_SUFFIX_FOR_ESTIMATE = _geosclassic.MPDS_GEOS_CLASSIC_SUFFIX_FOR_ESTIMATE
MPDS_GEOS_CLASSIC_SUFFIX_FOR_ST_DEV = _geosclassic.MPDS_GEOS_CLASSIC_SUFFIX_FOR_ST_DEV
MPDS_GEOS_CLASSIC_SUFFIX_FOR_PROBABILITY = _geosclassic.MPDS_GEOS_CLASSIC_SUFFIX_FOR_PROBABILITY
MPDS_GEOS_CLASSIC_NB_DIGIT_FOR_REALIZATION_NUMBER = _geosclassic.MPDS_GEOS_CLASSIC_NB_DIGIT_FOR_REALIZATION_NUMBER
MPDS_GEOS_CLASSIC_NB_DIGIT_FOR_CATEGORY_INDEX = _geosclassic.MPDS_GEOS_CLASSIC_NB_DIGIT_FOR_CATEGORY_INDEX
MPDS_GEOSCLASSIC_NCATEGORY_MAX = _geosclassic.MPDS_GEOSCLASSIC_NCATEGORY_MAX
MPDS_GEOSCLASSIC_COV_RANGE_MIN = _geosclassic.MPDS_GEOSCLASSIC_COV_RANGE_MIN
MPDS_GEOSCLASSIC_COV_TOTAL_WEIGHT_MIN = _geosclassic.MPDS_GEOSCLASSIC_COV_TOTAL_WEIGHT_MIN
MPDS_GEOSCLASSIC_COV_POWER_MIN = _geosclassic.MPDS_GEOSCLASSIC_COV_POWER_MIN
MPDS_GEOSCLASSIC_COV_POWER_MAX = _geosclassic.MPDS_GEOSCLASSIC_COV_POWER_MAX
MPDS_GEOSCLASSIC_COV_MATERN_NU_MIN = _geosclassic.MPDS_GEOSCLASSIC_COV_MATERN_NU_MIN
MPDS_GEOSCLASSIC_COV_MATERN_NU_MAX = _geosclassic.MPDS_GEOSCLASSIC_COV_MATERN_NU_MAX
MPDS_GEOSCLASSIC_TOLEREANCE_ON_SUM_PROBABILITY = _geosclassic.MPDS_GEOSCLASSIC_TOLEREANCE_ON_SUM_PROBABILITY
MPDS_GEOSCLASSIC_SEARCHRADIUSRELATIVE_MIN = _geosclassic.MPDS_GEOSCLASSIC_SEARCHRADIUSRELATIVE_MIN
MPDS_GEOSCLASSIC_NGIBBSSAMPLERPATH_MIN = _geosclassic.MPDS_GEOSCLASSIC_NGIBBSSAMPLERPATH_MIN
MPDS_GEOSCLASSIC_NGIBBSSAMPLERPATH_MAX = _geosclassic.MPDS_GEOSCLASSIC_NGIBBSSAMPLERPATH_MAX
MPDS_GEOSCLASSIC_MAX_NREALIZATION = _geosclassic.MPDS_GEOSCLASSIC_MAX_NREALIZATION
COV_NUGGET = _geosclassic.COV_NUGGET
COV_SPHERICAL = _geosclassic.COV_SPHERICAL
COV_EXPONENTIAL = _geosclassic.COV_EXPONENTIAL
COV_GAUSSIAN = _geosclassic.COV_GAUSSIAN
COV_LINEAR = _geosclassic.COV_LINEAR
COV_CUBIC = _geosclassic.COV_CUBIC
COV_SINUS_CARDINAL = _geosclassic.COV_SINUS_CARDINAL
COV_GAMMA = _geosclassic.COV_GAMMA
COV_POWER = _geosclassic.COV_POWER
COV_EXPONENTIAL_GENERALIZED = _geosclassic.COV_EXPONENTIAL_GENERALIZED
COV_MATERN = _geosclassic.COV_MATERN
class mpds_covModelElem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    covModelType = property(_geosclassic.mpds_covModelElem_covModelType_get, _geosclassic.mpds_covModelElem_covModelType_set)
    weightImageFlag = property(_geosclassic.mpds_covModelElem_weightImageFlag_get, _geosclassic.mpds_covModelElem_weightImageFlag_set)
    rxImageFlag = property(_geosclassic.mpds_covModelElem_rxImageFlag_get, _geosclassic.mpds_covModelElem_rxImageFlag_set)
    ryImageFlag = property(_geosclassic.mpds_covModelElem_ryImageFlag_get, _geosclassic.mpds_covModelElem_ryImageFlag_set)
    rzImageFlag = property(_geosclassic.mpds_covModelElem_rzImageFlag_get, _geosclassic.mpds_covModelElem_rzImageFlag_set)
    sImageFlag = property(_geosclassic.mpds_covModelElem_sImageFlag_get, _geosclassic.mpds_covModelElem_sImageFlag_set)
    weightValue = property(_geosclassic.mpds_covModelElem_weightValue_get, _geosclassic.mpds_covModelElem_weightValue_set)
    rxValue = property(_geosclassic.mpds_covModelElem_rxValue_get, _geosclassic.mpds_covModelElem_rxValue_set)
    ryValue = property(_geosclassic.mpds_covModelElem_ryValue_get, _geosclassic.mpds_covModelElem_ryValue_set)
    rzValue = property(_geosclassic.mpds_covModelElem_rzValue_get, _geosclassic.mpds_covModelElem_rzValue_set)
    sValue = property(_geosclassic.mpds_covModelElem_sValue_get, _geosclassic.mpds_covModelElem_sValue_set)
    weightImage = property(_geosclassic.mpds_covModelElem_weightImage_get, _geosclassic.mpds_covModelElem_weightImage_set)
    rxImage = property(_geosclassic.mpds_covModelElem_rxImage_get, _geosclassic.mpds_covModelElem_rxImage_set)
    ryImage = property(_geosclassic.mpds_covModelElem_ryImage_get, _geosclassic.mpds_covModelElem_ryImage_set)
    rzImage = property(_geosclassic.mpds_covModelElem_rzImage_get, _geosclassic.mpds_covModelElem_rzImage_set)
    sImage = property(_geosclassic.mpds_covModelElem_sImage_get, _geosclassic.mpds_covModelElem_sImage_set)

    def __init__(self):
        _geosclassic.mpds_covModelElem_swiginit(self, _geosclassic.new_mpds_covModelElem())
    __swig_destroy__ = _geosclassic.delete_mpds_covModelElem

# Register mpds_covModelElem in _geosclassic:
_geosclassic.mpds_covModelElem_swigregister(mpds_covModelElem)
cvar = _geosclassic.cvar
stdout = cvar.stdout

class mpds_covModel(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    nelem = property(_geosclassic.mpds_covModel_nelem_get, _geosclassic.mpds_covModel_nelem_set)
    covModelElem = property(_geosclassic.mpds_covModel_covModelElem_get, _geosclassic.mpds_covModel_covModelElem_set)
    angle1ImageFlag = property(_geosclassic.mpds_covModel_angle1ImageFlag_get, _geosclassic.mpds_covModel_angle1ImageFlag_set)
    angle2ImageFlag = property(_geosclassic.mpds_covModel_angle2ImageFlag_get, _geosclassic.mpds_covModel_angle2ImageFlag_set)
    angle3ImageFlag = property(_geosclassic.mpds_covModel_angle3ImageFlag_get, _geosclassic.mpds_covModel_angle3ImageFlag_set)
    angle1Value = property(_geosclassic.mpds_covModel_angle1Value_get, _geosclassic.mpds_covModel_angle1Value_set)
    angle2Value = property(_geosclassic.mpds_covModel_angle2Value_get, _geosclassic.mpds_covModel_angle2Value_set)
    angle3Value = property(_geosclassic.mpds_covModel_angle3Value_get, _geosclassic.mpds_covModel_angle3Value_set)
    angle1Image = property(_geosclassic.mpds_covModel_angle1Image_get, _geosclassic.mpds_covModel_angle1Image_set)
    angle2Image = property(_geosclassic.mpds_covModel_angle2Image_get, _geosclassic.mpds_covModel_angle2Image_set)
    angle3Image = property(_geosclassic.mpds_covModel_angle3Image_get, _geosclassic.mpds_covModel_angle3Image_set)

    def __init__(self):
        _geosclassic.mpds_covModel_swiginit(self, _geosclassic.new_mpds_covModel())
    __swig_destroy__ = _geosclassic.delete_mpds_covModel

# Register mpds_covModel in _geosclassic:
_geosclassic.mpds_covModel_swigregister(mpds_covModel)

def MPDSGeosClassicEvaluateCovModel(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSGeosClassicEvaluateCovModel(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSGeosClassicEvaluateCovModelFixParam(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSGeosClassicEvaluateCovModelFixParam(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSGeosClassicEvaluateCovModelFixParamNoRotation(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGeosClassicEvaluateCovModelFixParamNoRotation(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSGeosClassicEvaluateCovModelNoRotation(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSGeosClassicEvaluateCovModelNoRotation(arg1, arg2, arg3, arg4, arg5, arg6, arg7)

def MPDSGeosClassicFreeCovModel(arg1):
    return _geosclassic.MPDSGeosClassicFreeCovModel(arg1)

def MPDSGeosClassicFreeCovModelElem(arg1):
    return _geosclassic.MPDSGeosClassicFreeCovModelElem(arg1)

def MPDSGeosClassicInitCovModel(arg1):
    return _geosclassic.MPDSGeosClassicInitCovModel(arg1)

def MPDSGeosClassicInitCovModelElem(arg1):
    return _geosclassic.MPDSGeosClassicInitCovModelElem(arg1)

def MPDSGeosClassicPrintCovModel(arg1, arg2, arg3):
    return _geosclassic.MPDSGeosClassicPrintCovModel(arg1, arg2, arg3)

def MPDSGeosClassicPrintCovModelElem(arg1, arg2, arg3):
    return _geosclassic.MPDSGeosClassicPrintCovModelElem(arg1, arg2, arg3)

def MPDSGeosClassicValidateCovModel(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSGeosClassicValidateCovModel(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSGeosClassicValidateCovModelElem(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSGeosClassicValidateCovModelElem(arg1, arg2, arg3, arg4, arg5, arg6, arg7)
GEOS_CLASSIC_OK = _geosclassic.GEOS_CLASSIC_OK
GEOS_CLASSIC_SK = _geosclassic.GEOS_CLASSIC_SK
GEOS_CLASSIC_SIM_OK = _geosclassic.GEOS_CLASSIC_SIM_OK
GEOS_CLASSIC_SIM_SK = _geosclassic.GEOS_CLASSIC_SIM_SK
GEOS_CLASSIC_OUTPUT_NO_FILE = _geosclassic.GEOS_CLASSIC_OUTPUT_NO_FILE
GEOS_CLASSIC_OUTPUT_ALL_IN_ONE_FILE = _geosclassic.GEOS_CLASSIC_OUTPUT_ALL_IN_ONE_FILE
GEOS_CLASSIC_OUTPUT_SEPARATE_FILE = _geosclassic.GEOS_CLASSIC_OUTPUT_SEPARATE_FILE
class mpds_geosClassicInput(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    consoleAppFlag = property(_geosclassic.mpds_geosClassicInput_consoleAppFlag_get, _geosclassic.mpds_geosClassicInput_consoleAppFlag_set)
    simName = property(_geosclassic.mpds_geosClassicInput_simName_get, _geosclassic.mpds_geosClassicInput_simName_set)
    simGrid = property(_geosclassic.mpds_geosClassicInput_simGrid_get, _geosclassic.mpds_geosClassicInput_simGrid_set)
    varName = property(_geosclassic.mpds_geosClassicInput_varName_get, _geosclassic.mpds_geosClassicInput_varName_set)
    formatString = property(_geosclassic.mpds_geosClassicInput_formatString_get, _geosclassic.mpds_geosClassicInput_formatString_set)
    outputMode = property(_geosclassic.mpds_geosClassicInput_outputMode_get, _geosclassic.mpds_geosClassicInput_outputMode_set)
    outputImageFileName = property(_geosclassic.mpds_geosClassicInput_outputImageFileName_get, _geosclassic.mpds_geosClassicInput_outputImageFileName_set)
    outputReportFlag = property(_geosclassic.mpds_geosClassicInput_outputReportFlag_get, _geosclassic.mpds_geosClassicInput_outputReportFlag_set)
    outputReportFileName = property(_geosclassic.mpds_geosClassicInput_outputReportFileName_get, _geosclassic.mpds_geosClassicInput_outputReportFileName_set)
    computationMode = property(_geosclassic.mpds_geosClassicInput_computationMode_get, _geosclassic.mpds_geosClassicInput_computationMode_set)
    covModel = property(_geosclassic.mpds_geosClassicInput_covModel_get, _geosclassic.mpds_geosClassicInput_covModel_set)
    searchRadiusRelative = property(_geosclassic.mpds_geosClassicInput_searchRadiusRelative_get, _geosclassic.mpds_geosClassicInput_searchRadiusRelative_set)
    nneighborMax = property(_geosclassic.mpds_geosClassicInput_nneighborMax_get, _geosclassic.mpds_geosClassicInput_nneighborMax_set)
    searchNeighborhoodSortMode = property(_geosclassic.mpds_geosClassicInput_searchNeighborhoodSortMode_get, _geosclassic.mpds_geosClassicInput_searchNeighborhoodSortMode_set)
    ndataImage = property(_geosclassic.mpds_geosClassicInput_ndataImage_get, _geosclassic.mpds_geosClassicInput_ndataImage_set)
    dataImage = property(_geosclassic.mpds_geosClassicInput_dataImage_get, _geosclassic.mpds_geosClassicInput_dataImage_set)
    ndataPointSet = property(_geosclassic.mpds_geosClassicInput_ndataPointSet_get, _geosclassic.mpds_geosClassicInput_ndataPointSet_set)
    dataPointSet = property(_geosclassic.mpds_geosClassicInput_dataPointSet_get, _geosclassic.mpds_geosClassicInput_dataPointSet_set)
    maskImageFlag = property(_geosclassic.mpds_geosClassicInput_maskImageFlag_get, _geosclassic.mpds_geosClassicInput_maskImageFlag_set)
    maskImage = property(_geosclassic.mpds_geosClassicInput_maskImage_get, _geosclassic.mpds_geosClassicInput_maskImage_set)
    meanUsage = property(_geosclassic.mpds_geosClassicInput_meanUsage_get, _geosclassic.mpds_geosClassicInput_meanUsage_set)
    meanValue = property(_geosclassic.mpds_geosClassicInput_meanValue_get, _geosclassic.mpds_geosClassicInput_meanValue_set)
    meanImage = property(_geosclassic.mpds_geosClassicInput_meanImage_get, _geosclassic.mpds_geosClassicInput_meanImage_set)
    varianceUsage = property(_geosclassic.mpds_geosClassicInput_varianceUsage_get, _geosclassic.mpds_geosClassicInput_varianceUsage_set)
    varianceValue = property(_geosclassic.mpds_geosClassicInput_varianceValue_get, _geosclassic.mpds_geosClassicInput_varianceValue_set)
    varianceImage = property(_geosclassic.mpds_geosClassicInput_varianceImage_get, _geosclassic.mpds_geosClassicInput_varianceImage_set)
    nGibbsSamplerPathMin = property(_geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMin_get, _geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMin_set)
    nGibbsSamplerPathMax = property(_geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMax_get, _geosclassic.mpds_geosClassicInput_nGibbsSamplerPathMax_set)
    seed = property(_geosclassic.mpds_geosClassicInput_seed_get, _geosclassic.mpds_geosClassicInput_seed_set)
    seedIncrement = property(_geosclassic.mpds_geosClassicInput_seedIncrement_get, _geosclassic.mpds_geosClassicInput_seedIncrement_set)
    nrealization = property(_geosclassic.mpds_geosClassicInput_nrealization_get, _geosclassic.mpds_geosClassicInput_nrealization_set)

    def __init__(self):
        _geosclassic.mpds_geosClassicInput_swiginit(self, _geosclassic.new_mpds_geosClassicInput())
    __swig_destroy__ = _geosclassic.delete_mpds_geosClassicInput

# Register mpds_geosClassicInput in _geosclassic:
_geosclassic.mpds_geosClassicInput_swigregister(mpds_geosClassicInput)
class mpds_geosClassicIndicatorInput(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    consoleAppFlag = property(_geosclassic.mpds_geosClassicIndicatorInput_consoleAppFlag_get, _geosclassic.mpds_geosClassicIndicatorInput_consoleAppFlag_set)
    simName = property(_geosclassic.mpds_geosClassicIndicatorInput_simName_get, _geosclassic.mpds_geosClassicIndicatorInput_simName_set)
    simGrid = property(_geosclassic.mpds_geosClassicIndicatorInput_simGrid_get, _geosclassic.mpds_geosClassicIndicatorInput_simGrid_set)
    varName = property(_geosclassic.mpds_geosClassicIndicatorInput_varName_get, _geosclassic.mpds_geosClassicIndicatorInput_varName_set)
    formatString = property(_geosclassic.mpds_geosClassicIndicatorInput_formatString_get, _geosclassic.mpds_geosClassicIndicatorInput_formatString_set)
    ncategory = property(_geosclassic.mpds_geosClassicIndicatorInput_ncategory_get, _geosclassic.mpds_geosClassicIndicatorInput_ncategory_set)
    categoryValue = property(_geosclassic.mpds_geosClassicIndicatorInput_categoryValue_get, _geosclassic.mpds_geosClassicIndicatorInput_categoryValue_set)
    outputMode = property(_geosclassic.mpds_geosClassicIndicatorInput_outputMode_get, _geosclassic.mpds_geosClassicIndicatorInput_outputMode_set)
    outputImageFileName = property(_geosclassic.mpds_geosClassicIndicatorInput_outputImageFileName_get, _geosclassic.mpds_geosClassicIndicatorInput_outputImageFileName_set)
    outputReportFlag = property(_geosclassic.mpds_geosClassicIndicatorInput_outputReportFlag_get, _geosclassic.mpds_geosClassicIndicatorInput_outputReportFlag_set)
    outputReportFileName = property(_geosclassic.mpds_geosClassicIndicatorInput_outputReportFileName_get, _geosclassic.mpds_geosClassicIndicatorInput_outputReportFileName_set)
    computationMode = property(_geosclassic.mpds_geosClassicIndicatorInput_computationMode_get, _geosclassic.mpds_geosClassicIndicatorInput_computationMode_set)
    covModel = property(_geosclassic.mpds_geosClassicIndicatorInput_covModel_get, _geosclassic.mpds_geosClassicIndicatorInput_covModel_set)
    searchRadiusRelative = property(_geosclassic.mpds_geosClassicIndicatorInput_searchRadiusRelative_get, _geosclassic.mpds_geosClassicIndicatorInput_searchRadiusRelative_set)
    nneighborMax = property(_geosclassic.mpds_geosClassicIndicatorInput_nneighborMax_get, _geosclassic.mpds_geosClassicIndicatorInput_nneighborMax_set)
    searchNeighborhoodSortMode = property(_geosclassic.mpds_geosClassicIndicatorInput_searchNeighborhoodSortMode_get, _geosclassic.mpds_geosClassicIndicatorInput_searchNeighborhoodSortMode_set)
    ndataImage = property(_geosclassic.mpds_geosClassicIndicatorInput_ndataImage_get, _geosclassic.mpds_geosClassicIndicatorInput_ndataImage_set)
    dataImage = property(_geosclassic.mpds_geosClassicIndicatorInput_dataImage_get, _geosclassic.mpds_geosClassicIndicatorInput_dataImage_set)
    ndataPointSet = property(_geosclassic.mpds_geosClassicIndicatorInput_ndataPointSet_get, _geosclassic.mpds_geosClassicIndicatorInput_ndataPointSet_set)
    dataPointSet = property(_geosclassic.mpds_geosClassicIndicatorInput_dataPointSet_get, _geosclassic.mpds_geosClassicIndicatorInput_dataPointSet_set)
    maskImageFlag = property(_geosclassic.mpds_geosClassicIndicatorInput_maskImageFlag_get, _geosclassic.mpds_geosClassicIndicatorInput_maskImageFlag_set)
    maskImage = property(_geosclassic.mpds_geosClassicIndicatorInput_maskImage_get, _geosclassic.mpds_geosClassicIndicatorInput_maskImage_set)
    probabilityUsage = property(_geosclassic.mpds_geosClassicIndicatorInput_probabilityUsage_get, _geosclassic.mpds_geosClassicIndicatorInput_probabilityUsage_set)
    probabilityValue = property(_geosclassic.mpds_geosClassicIndicatorInput_probabilityValue_get, _geosclassic.mpds_geosClassicIndicatorInput_probabilityValue_set)
    probabilityImage = property(_geosclassic.mpds_geosClassicIndicatorInput_probabilityImage_get, _geosclassic.mpds_geosClassicIndicatorInput_probabilityImage_set)
    seed = property(_geosclassic.mpds_geosClassicIndicatorInput_seed_get, _geosclassic.mpds_geosClassicIndicatorInput_seed_set)
    seedIncrement = property(_geosclassic.mpds_geosClassicIndicatorInput_seedIncrement_get, _geosclassic.mpds_geosClassicIndicatorInput_seedIncrement_set)
    nrealization = property(_geosclassic.mpds_geosClassicIndicatorInput_nrealization_get, _geosclassic.mpds_geosClassicIndicatorInput_nrealization_set)

    def __init__(self):
        _geosclassic.mpds_geosClassicIndicatorInput_swiginit(self, _geosclassic.new_mpds_geosClassicIndicatorInput())
    __swig_destroy__ = _geosclassic.delete_mpds_geosClassicIndicatorInput

# Register mpds_geosClassicIndicatorInput in _geosclassic:
_geosclassic.mpds_geosClassicIndicatorInput_swigregister(mpds_geosClassicIndicatorInput)

def MPDSGeosClassicFreeGeosClassicInput(arg1):
    return _geosclassic.MPDSGeosClassicFreeGeosClassicInput(arg1)

def MPDSGeosClassicFreeGeosClassicIndicatorInput(arg1):
    return _geosclassic.MPDSGeosClassicFreeGeosClassicIndicatorInput(arg1)

def MPDSGeosClassicInitGeosClassicInput(arg1):
    return _geosclassic.MPDSGeosClassicInitGeosClassicInput(arg1)

def MPDSGeosClassicInitGeosClassicIndicatorInput(arg1):
    return _geosclassic.MPDSGeosClassicInitGeosClassicIndicatorInput(arg1)

def MPDSGeosClassicPrintGeosClassicInput(arg1, arg2, arg3):
    return _geosclassic.MPDSGeosClassicPrintGeosClassicInput(arg1, arg2, arg3)

def MPDSGeosClassicPrintGeosClassicIndicatorInput(arg1, arg2, arg3):
    return _geosclassic.MPDSGeosClassicPrintGeosClassicIndicatorInput(arg1, arg2, arg3)

def MPDSGeosClassicPrintVersion(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSGeosClassicPrintVersion(arg1, arg2, arg3, arg4, arg5)

def MPDSGeosClassicValidateGeosClassicInput(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSGeosClassicValidateGeosClassicInput(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSGeosClassicValidateGeosClassicIndicatorInput(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSGeosClassicValidateGeosClassicIndicatorInput(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
class mpds_geosClassicOutput(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    outputImage = property(_geosclassic.mpds_geosClassicOutput_outputImage_get, _geosclassic.mpds_geosClassicOutput_outputImage_set)

    def __init__(self):
        _geosclassic.mpds_geosClassicOutput_swiginit(self, _geosclassic.new_mpds_geosClassicOutput())
    __swig_destroy__ = _geosclassic.delete_mpds_geosClassicOutput

# Register mpds_geosClassicOutput in _geosclassic:
_geosclassic.mpds_geosClassicOutput_swigregister(mpds_geosClassicOutput)

def MPDSGeosClassicFreeGeosClassicOutput(arg1):
    return _geosclassic.MPDSGeosClassicFreeGeosClassicOutput(arg1)

def MPDSGeosClassicInitGeosClassicOutput(arg1):
    return _geosclassic.MPDSGeosClassicInitGeosClassicOutput(arg1)
class mpds_grid(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    nx = property(_geosclassic.mpds_grid_nx_get, _geosclassic.mpds_grid_nx_set)
    ny = property(_geosclassic.mpds_grid_ny_get, _geosclassic.mpds_grid_ny_set)
    nz = property(_geosclassic.mpds_grid_nz_get, _geosclassic.mpds_grid_nz_set)
    sx = property(_geosclassic.mpds_grid_sx_get, _geosclassic.mpds_grid_sx_set)
    sy = property(_geosclassic.mpds_grid_sy_get, _geosclassic.mpds_grid_sy_set)
    sz = property(_geosclassic.mpds_grid_sz_get, _geosclassic.mpds_grid_sz_set)
    ox = property(_geosclassic.mpds_grid_ox_get, _geosclassic.mpds_grid_ox_set)
    oy = property(_geosclassic.mpds_grid_oy_get, _geosclassic.mpds_grid_oy_set)
    oz = property(_geosclassic.mpds_grid_oz_get, _geosclassic.mpds_grid_oz_set)
    nxy = property(_geosclassic.mpds_grid_nxy_get, _geosclassic.mpds_grid_nxy_set)
    nxyz = property(_geosclassic.mpds_grid_nxyz_get, _geosclassic.mpds_grid_nxyz_set)

    def __init__(self):
        _geosclassic.mpds_grid_swiginit(self, _geosclassic.new_mpds_grid())
    __swig_destroy__ = _geosclassic.delete_mpds_grid

# Register mpds_grid in _geosclassic:
_geosclassic.mpds_grid_swigregister(mpds_grid)

def MPDSCmpGrid(arg1, arg2):
    return _geosclassic.MPDSCmpGrid(arg1, arg2)

def MPDSCopyGrid(arg1, arg2):
    return _geosclassic.MPDSCopyGrid(arg1, arg2)

def MPDSGridCoordToId(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGridCoordToId(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSGridIdToCoord(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGridIdToCoord(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSInitGrid(arg1):
    return _geosclassic.MPDSInitGrid(arg1)

def MPDSPrintGrid(arg1, arg2, arg3):
    return _geosclassic.MPDSPrintGrid(arg1, arg2, arg3)

def MPDSReadGrid(arg1, arg2):
    return _geosclassic.MPDSReadGrid(arg1, arg2)

def MPDSValidateGrid(arg1, arg2):
    return _geosclassic.MPDSValidateGrid(arg1, arg2)
class mpds_image(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    grid = property(_geosclassic.mpds_image_grid_get, _geosclassic.mpds_image_grid_set)
    nvar = property(_geosclassic.mpds_image_nvar_get, _geosclassic.mpds_image_nvar_set)
    nxyzv = property(_geosclassic.mpds_image_nxyzv_get, _geosclassic.mpds_image_nxyzv_set)
    varName = property(_geosclassic.mpds_image_varName_get, _geosclassic.mpds_image_varName_set)
    var = property(_geosclassic.mpds_image_var_get, _geosclassic.mpds_image_var_set)

    def __init__(self):
        _geosclassic.mpds_image_swiginit(self, _geosclassic.new_mpds_image())
    __swig_destroy__ = _geosclassic.delete_mpds_image

# Register mpds_image in _geosclassic:
_geosclassic.mpds_image_swigregister(mpds_image)

def MPDSCopyImage(arg1, arg2):
    return _geosclassic.MPDSCopyImage(arg1, arg2)

def MPDSFreeImage(arg1):
    return _geosclassic.MPDSFreeImage(arg1)

def MPDSGetImageOneVarValueIndex(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSGetImageOneVarValueIndex(arg1, arg2, arg3, arg4, arg5)

def MPDSGetImageNumberVarValueMissing(arg1, arg2):
    return _geosclassic.MPDSGetImageNumberVarValueMissing(arg1, arg2)

def MPDSGetImageOneVarValueMean(arg1, arg2, arg3):
    return _geosclassic.MPDSGetImageOneVarValueMean(arg1, arg2, arg3)

def MPDSGetImageOneVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGetImageOneVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSGetImageOneVarValueRange(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGetImageOneVarValueRange(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSGetImageOneVarValueSD(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSGetImageOneVarValueSD(arg1, arg2, arg3, arg4)

def MPDSGetImageVarStats(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGetImageVarStats(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSGetImageVarStatsLocal(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSGetImageVarStatsLocal(arg1, arg2, arg3, arg4)

def MPDSGetImageVarValueMean(arg1, arg2):
    return _geosclassic.MPDSGetImageVarValueMean(arg1, arg2)

def MPDSGetImageVarValuePdf(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSGetImageVarValuePdf(arg1, arg2, arg3, arg4, arg5)

def MPDSGetImageVarValueRange(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSGetImageVarValueRange(arg1, arg2, arg3, arg4, arg5)

def MPDSGetImageVarValueSD(arg1, arg2, arg3):
    return _geosclassic.MPDSGetImageVarValueSD(arg1, arg2, arg3)

def MPDSGetImageVarVectorMissing(arg1, arg2, arg3):
    return _geosclassic.MPDSGetImageVarVectorMissing(arg1, arg2, arg3)

def MPDSGetNImageOneVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSGetNImageOneVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6, arg7)

def MPDSGetNImageVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGetNImageVarValuePdf(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSImageEE(arg1):
    return _geosclassic.MPDSImageEE(arg1)

def MPDSImageToImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSImageToImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSInitImage(arg1):
    return _geosclassic.MPDSInitImage(arg1)

def MPDSMallocImage(arg1, arg2, arg3):
    return _geosclassic.MPDSMallocImage(arg1, arg2, arg3)

def MPDSPrintImage(arg1, arg2, arg3):
    return _geosclassic.MPDSPrintImage(arg1, arg2, arg3)

def MPDSPrintImageInfo(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSPrintImageInfo(arg1, arg2, arg3, arg4)

def MPDSReadImage(arg1, arg2, arg3):
    return _geosclassic.MPDSReadImage(arg1, arg2, arg3)

def MPDSReadImageGslibBinary(arg1, arg2):
    return _geosclassic.MPDSReadImageGslibBinary(arg1, arg2)

def MPDSTransformLinearImageVar(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSTransformLinearImageVar(arg1, arg2, arg3, arg4)

def MPDSTransformExplicitImageVar(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSTransformExplicitImageVar(arg1, arg2, arg3, arg4, arg5)

def MPDSValidateImage(arg1, arg2, arg3):
    return _geosclassic.MPDSValidateImage(arg1, arg2, arg3)

def MPDSWriteImage(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSWriteImage(arg1, arg2, arg3, arg4)

def MPDSWriteImageGslibBinary(arg1, arg2):
    return _geosclassic.MPDSWriteImageGslibBinary(arg1, arg2)

def MPDSFindLink(arg1, arg2):
    return _geosclassic.MPDSFindLink(arg1, arg2)

def MPDSImageConnectivityEulerNumber(arg1, arg2, arg3):
    return _geosclassic.MPDSImageConnectivityEulerNumber(arg1, arg2, arg3)

def MPDSImageConnectivityFunction0(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageConnectivityFunction0(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)

def MPDSImageConnectivityFunction1(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageConnectivityFunction1(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)

def MPDSImageConnectivityFunction2(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageConnectivityFunction2(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)

def MPDSImageConnectivityGlobalIndicator(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSImageConnectivityGlobalIndicator(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSImageConnectivity6EulerNumberCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageConnectivity6EulerNumberCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSImageConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSImageConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSImageConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSImageCorrelogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageCorrelogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)

def MPDSImageCovariance(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageCovariance(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)

def MPDSImageCovarianceNotCentred(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageCovarianceNotCentred(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)

def MPDSImageDilate(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageDilate(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSImageDistanceByDilation(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSImageDistanceByDilation(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSImageDistanceEuclidean(arg1, arg2):
    return _geosclassic.MPDSImageDistanceEuclidean(arg1, arg2)

def MPDSImageDistanceEuclideanBruteForce(arg1, arg2, arg3):
    return _geosclassic.MPDSImageDistanceEuclideanBruteForce(arg1, arg2, arg3)

def MPDSImageDistanceEuclideanSign(arg1, arg2):
    return _geosclassic.MPDSImageDistanceEuclideanSign(arg1, arg2)

def MPDSImageDistanceEuclideanConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceEuclideanConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)

def MPDSImageDistanceEuclideanConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceEuclideanConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)

def MPDSImageDistanceEuclideanConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceEuclideanConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)

def MPDSImageDistanceL1(arg1, arg2):
    return _geosclassic.MPDSImageDistanceL1(arg1, arg2)

def MPDSImageDistanceL1BruteForce(arg1, arg2, arg3):
    return _geosclassic.MPDSImageDistanceL1BruteForce(arg1, arg2, arg3)

def MPDSImageDistanceL1Connectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceL1Connectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)

def MPDSImageDistanceL1Connectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceL1Connectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)

def MPDSImageDistanceL1Connectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSImageDistanceL1Connectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7)

def MPDSImageDistanceL1Sign(arg1, arg2):
    return _geosclassic.MPDSImageDistanceL1Sign(arg1, arg2)

def MPDSImageErode(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSImageErode(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSImageExtract1D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSImageExtract1D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSImageExtract2D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageExtract2D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)

def MPDSImageExtract3D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17):
    return _geosclassic.MPDSImageExtract3D(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17)

def MPDSImageGeobody6(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody6(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSImageGeobody18(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody18(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSImageGeobody26(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody26(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSImageGeobodySize(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSImageGeobodySize(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSImageGeobody6Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody6Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSImageGeobody18Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody18Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSImageGeobody26Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageGeobody26Vector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSImageIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSImageIndicatorVector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageIndicatorVector(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSImageMaxGeobody6SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageMaxGeobody6SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSImageMaxGeobody18SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageMaxGeobody18SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSImageMaxGeobody26SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSImageMaxGeobody26SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSImagePyramidExpand(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSImagePyramidExpand(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSImagePyramidReduce(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSImagePyramidReduce(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSImageTransiogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageTransiogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)

def MPDSImageVariogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13):
    return _geosclassic.MPDSImageVariogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)

def MPDSMovingBoxAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSMovingBoxAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSMovingSearchNeighborhoodAverageImage(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSMovingSearchNeighborhoodAverageImage(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSResizeImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSResizeImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
class mpds_pointSet(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    npoint = property(_geosclassic.mpds_pointSet_npoint_get, _geosclassic.mpds_pointSet_npoint_set)
    x = property(_geosclassic.mpds_pointSet_x_get, _geosclassic.mpds_pointSet_x_set)
    y = property(_geosclassic.mpds_pointSet_y_get, _geosclassic.mpds_pointSet_y_set)
    z = property(_geosclassic.mpds_pointSet_z_get, _geosclassic.mpds_pointSet_z_set)
    nvar = property(_geosclassic.mpds_pointSet_nvar_get, _geosclassic.mpds_pointSet_nvar_set)
    varName = property(_geosclassic.mpds_pointSet_varName_get, _geosclassic.mpds_pointSet_varName_set)
    var = property(_geosclassic.mpds_pointSet_var_get, _geosclassic.mpds_pointSet_var_set)

    def __init__(self):
        _geosclassic.mpds_pointSet_swiginit(self, _geosclassic.new_mpds_pointSet())
    __swig_destroy__ = _geosclassic.delete_mpds_pointSet

# Register mpds_pointSet in _geosclassic:
_geosclassic.mpds_pointSet_swigregister(mpds_pointSet)

def MPDSCopyPointSet(arg1, arg2):
    return _geosclassic.MPDSCopyPointSet(arg1, arg2)

def MPDSFreePointSet(arg1):
    return _geosclassic.MPDSFreePointSet(arg1)

def MPDSGetIndexInGridForPointSet(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSGetIndexInGridForPointSet(arg1, arg2, arg3, arg4)

def MPDSGetPointSetInfo(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18):
    return _geosclassic.MPDSGetPointSetInfo(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18)

def MPDSGetXYZIndexInGridForPointSet(arg1, arg2, arg3, arg4, arg5, arg6):
    return _geosclassic.MPDSGetXYZIndexInGridForPointSet(arg1, arg2, arg3, arg4, arg5, arg6)

def MPDSImageToPointSet(arg1, arg2):
    return _geosclassic.MPDSImageToPointSet(arg1, arg2)

def MPDSInitPointSet(arg1):
    return _geosclassic.MPDSInitPointSet(arg1)

def MPDSMallocPointSet(arg1, arg2, arg3):
    return _geosclassic.MPDSMallocPointSet(arg1, arg2, arg3)

def MPDSPointSetToImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSPointSetToImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSPrintPointSet(arg1, arg2, arg3):
    return _geosclassic.MPDSPrintPointSet(arg1, arg2, arg3)

def MPDSPrintPointSetInfo(arg1, arg2, arg3):
    return _geosclassic.MPDSPrintPointSetInfo(arg1, arg2, arg3)

def MPDSReadPointSet(arg1, arg2):
    return _geosclassic.MPDSReadPointSet(arg1, arg2)

def MPDSValidatePointSet(arg1, arg2):
    return _geosclassic.MPDSValidatePointSet(arg1, arg2)

def MPDSWritePointSet(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSWritePointSet(arg1, arg2, arg3, arg4)
MPDS_WARNING_MSG_00001 = _geosclassic.MPDS_WARNING_MSG_00001
MPDS_WARNING_MSG_00002 = _geosclassic.MPDS_WARNING_MSG_00002
MPDS_WARNING_MSG_00003 = _geosclassic.MPDS_WARNING_MSG_00003
MPDS_WARNING_MSG_00010 = _geosclassic.MPDS_WARNING_MSG_00010
MPDS_WARNING_MSG_00012 = _geosclassic.MPDS_WARNING_MSG_00012
MPDS_WARNING_MSG_00014 = _geosclassic.MPDS_WARNING_MSG_00014
MPDS_WARNING_MSG_00020 = _geosclassic.MPDS_WARNING_MSG_00020
MPDS_WARNING_MSG_00021 = _geosclassic.MPDS_WARNING_MSG_00021
MPDS_WARNING_MSG_00025 = _geosclassic.MPDS_WARNING_MSG_00025
MPDS_WARNING_MSG_00027 = _geosclassic.MPDS_WARNING_MSG_00027
MPDS_WARNING_MSG_00026 = _geosclassic.MPDS_WARNING_MSG_00026
MPDS_WARNING_MSG_00030 = _geosclassic.MPDS_WARNING_MSG_00030
MPDS_WARNING_MSG_00031 = _geosclassic.MPDS_WARNING_MSG_00031
MPDS_WARNING_MSG_00032 = _geosclassic.MPDS_WARNING_MSG_00032
MPDS_WARNING_MSG_00033 = _geosclassic.MPDS_WARNING_MSG_00033
MPDS_WARNING_MSG_00034 = _geosclassic.MPDS_WARNING_MSG_00034
MPDS_WARNING_MSG_00035 = _geosclassic.MPDS_WARNING_MSG_00035
MPDS_WARNING_MSG_00036 = _geosclassic.MPDS_WARNING_MSG_00036
MPDS_WARNING_MSG_00038 = _geosclassic.MPDS_WARNING_MSG_00038
MPDS_WARNING_MSG_00039 = _geosclassic.MPDS_WARNING_MSG_00039
MPDS_WARNING_MSG_00040 = _geosclassic.MPDS_WARNING_MSG_00040
MPDS_WARNING_MSG_00041 = _geosclassic.MPDS_WARNING_MSG_00041
MPDS_WARNING_MSG_00042 = _geosclassic.MPDS_WARNING_MSG_00042
MPDS_WARNING_MSG_00043 = _geosclassic.MPDS_WARNING_MSG_00043
MPDS_WARNING_MSG_00044 = _geosclassic.MPDS_WARNING_MSG_00044
MPDS_WARNING_MSG_00045 = _geosclassic.MPDS_WARNING_MSG_00045
MPDS_WARNING_MSG_00046 = _geosclassic.MPDS_WARNING_MSG_00046
MPDS_WARNING_MSG_00049 = _geosclassic.MPDS_WARNING_MSG_00049
MPDS_WARNING_MSG_00050 = _geosclassic.MPDS_WARNING_MSG_00050
MPDS_WARNING_MSG_00051 = _geosclassic.MPDS_WARNING_MSG_00051
MPDS_WARNING_MSG_00055 = _geosclassic.MPDS_WARNING_MSG_00055
MPDS_WARNING_MSG_00060 = _geosclassic.MPDS_WARNING_MSG_00060
MPDS_WARNING_MSG_00061 = _geosclassic.MPDS_WARNING_MSG_00061
MPDS_WARNING_MSG_00062 = _geosclassic.MPDS_WARNING_MSG_00062
MPDS_WARNING_MSG_00063 = _geosclassic.MPDS_WARNING_MSG_00063
MPDS_WARNING_MSG_00070 = _geosclassic.MPDS_WARNING_MSG_00070
MPDS_WARNING_MSG_00071 = _geosclassic.MPDS_WARNING_MSG_00071
MPDS_WARNING_MSG_00075 = _geosclassic.MPDS_WARNING_MSG_00075
MPDS_WARNING_MSG_00076 = _geosclassic.MPDS_WARNING_MSG_00076
MPDS_WARNING_MSG_00077 = _geosclassic.MPDS_WARNING_MSG_00077
MPDS_WARNING_MSG_00078 = _geosclassic.MPDS_WARNING_MSG_00078
MPDS_WARNING_MSG_00080 = _geosclassic.MPDS_WARNING_MSG_00080
MPDS_WARNING_MSG_00085 = _geosclassic.MPDS_WARNING_MSG_00085
MPDS_WARNING_MSG_00090 = _geosclassic.MPDS_WARNING_MSG_00090
MPDS_WARNING_MSG_00100 = _geosclassic.MPDS_WARNING_MSG_00100
MPDS_WARNING_MSG_00111 = _geosclassic.MPDS_WARNING_MSG_00111
MPDS_WARNING_MSG_00115 = _geosclassic.MPDS_WARNING_MSG_00115
MPDS_WARNING_MSG_00120 = _geosclassic.MPDS_WARNING_MSG_00120
MPDS_WARNING_MSG_00143 = _geosclassic.MPDS_WARNING_MSG_00143
MPDS_WARNING_MSG_00144 = _geosclassic.MPDS_WARNING_MSG_00144
MPDS_WARNING_MSG_00145 = _geosclassic.MPDS_WARNING_MSG_00145
MPDS_WARNING_MSG_00146 = _geosclassic.MPDS_WARNING_MSG_00146
MPDS_WARNING_MSG_00150 = _geosclassic.MPDS_WARNING_MSG_00150
MPDS_WARNING_MSG_00160 = _geosclassic.MPDS_WARNING_MSG_00160
MPDS_WARNING_MSG_00210 = _geosclassic.MPDS_WARNING_MSG_00210
MPDS_WARNING_MSG_00212 = _geosclassic.MPDS_WARNING_MSG_00212
MPDS_WARNING_MSG_00214 = _geosclassic.MPDS_WARNING_MSG_00214
MPDS_WARNING_MSG_01010 = _geosclassic.MPDS_WARNING_MSG_01010
MPDS_WARNING_MSG_01011 = _geosclassic.MPDS_WARNING_MSG_01011
MPDS_WARNING_MSG_01012 = _geosclassic.MPDS_WARNING_MSG_01012
MPDS_WARNING_MSG_01013 = _geosclassic.MPDS_WARNING_MSG_01013
MPDS_WARNING_MSG_01014 = _geosclassic.MPDS_WARNING_MSG_01014
MPDS_WARNING_MSG_01015 = _geosclassic.MPDS_WARNING_MSG_01015
MPDS_WARNING_MSG_02001 = _geosclassic.MPDS_WARNING_MSG_02001
MPDS_WARNING_MSG_02002 = _geosclassic.MPDS_WARNING_MSG_02002
MPDS_WARNING_MSG_02005 = _geosclassic.MPDS_WARNING_MSG_02005
MPDS_WARNING_MSG_02012 = _geosclassic.MPDS_WARNING_MSG_02012
MPDS_WARNING_MSG_02015 = _geosclassic.MPDS_WARNING_MSG_02015
MPDS_WARNING_MSG_02016 = _geosclassic.MPDS_WARNING_MSG_02016
MPDS_WARNING_MSG_02020 = _geosclassic.MPDS_WARNING_MSG_02020
MPDS_WARNING_MSG_05011 = _geosclassic.MPDS_WARNING_MSG_05011
MPDS_WARNING_MSG_05030 = _geosclassic.MPDS_WARNING_MSG_05030
MPDS_WARNING_MSG_05044 = _geosclassic.MPDS_WARNING_MSG_05044
MPDS_WARNING_MSG_05045 = _geosclassic.MPDS_WARNING_MSG_05045
MPDS_WARNING_MSG_05125 = _geosclassic.MPDS_WARNING_MSG_05125
MPDS_WARNING_MSG_05127 = _geosclassic.MPDS_WARNING_MSG_05127
MPDS_WARNING_MSG_05126 = _geosclassic.MPDS_WARNING_MSG_05126
MPDS_WARNING_MSG_05100 = _geosclassic.MPDS_WARNING_MSG_05100
MPDS_WARNING_MSG_05101 = _geosclassic.MPDS_WARNING_MSG_05101
MPDS_WARNING_MSG_05102 = _geosclassic.MPDS_WARNING_MSG_05102
MPDS_WARNING_MSG_05103 = _geosclassic.MPDS_WARNING_MSG_05103
MPDS_WARNING_MSG_05104 = _geosclassic.MPDS_WARNING_MSG_05104
MPDS_WARNING_MSG_05105 = _geosclassic.MPDS_WARNING_MSG_05105
MPDS_WARNING_MSG_05120 = _geosclassic.MPDS_WARNING_MSG_05120
MPDS_WARNING_MSG_05130 = _geosclassic.MPDS_WARNING_MSG_05130
MPDS_WARNING_MSG_05131 = _geosclassic.MPDS_WARNING_MSG_05131
MPDS_WARNING_MSG_05200 = _geosclassic.MPDS_WARNING_MSG_05200
MPDS_WARNING_MSG_06830 = _geosclassic.MPDS_WARNING_MSG_06830
MPDS_WARNING_MSG_06835 = _geosclassic.MPDS_WARNING_MSG_06835
MPDS_WARNING_MSG_06836 = _geosclassic.MPDS_WARNING_MSG_06836
MPDS_WARNING_MSG_06837 = _geosclassic.MPDS_WARNING_MSG_06837
MPDS_WARNING_MSG_06838 = _geosclassic.MPDS_WARNING_MSG_06838
MPDS_WARNING_MSG_06839 = _geosclassic.MPDS_WARNING_MSG_06839
MPDS_WARNING_MSG_06840 = _geosclassic.MPDS_WARNING_MSG_06840
MPDS_WARNING_MSG_08001 = _geosclassic.MPDS_WARNING_MSG_08001
MPDS_WARNING_MSG_99998 = _geosclassic.MPDS_WARNING_MSG_99998
MPDS_MAX_NWARNING = _geosclassic.MPDS_MAX_NWARNING
MPDS_SHOW_PROGRESS_MONITOR = _geosclassic.MPDS_SHOW_PROGRESS_MONITOR
MPDS_MAX_PROGRESS_NAME_LENGTH = _geosclassic.MPDS_MAX_PROGRESS_NAME_LENGTH
class mpds_progressMonitor(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    progressName = property(_geosclassic.mpds_progressMonitor_progressName_get, _geosclassic.mpds_progressMonitor_progressName_set)
    warningNumber = property(_geosclassic.mpds_progressMonitor_warningNumber_get, _geosclassic.mpds_progressMonitor_warningNumber_set)
    nrealization = property(_geosclassic.mpds_progressMonitor_nrealization_get, _geosclassic.mpds_progressMonitor_nrealization_set)
    currentRealization = property(_geosclassic.mpds_progressMonitor_currentRealization_get, _geosclassic.mpds_progressMonitor_currentRealization_set)
    currentRealizationProgress = property(_geosclassic.mpds_progressMonitor_currentRealizationProgress_get, _geosclassic.mpds_progressMonitor_currentRealizationProgress_set)
    allRealizationProgress = property(_geosclassic.mpds_progressMonitor_allRealizationProgress_get, _geosclassic.mpds_progressMonitor_allRealizationProgress_set)
    abortedJobFlag = property(_geosclassic.mpds_progressMonitor_abortedJobFlag_get, _geosclassic.mpds_progressMonitor_abortedJobFlag_set)
    warningNumberList = property(_geosclassic.mpds_progressMonitor_warningNumberList_get, _geosclassic.mpds_progressMonitor_warningNumberList_set)
    nwarningNumber = property(_geosclassic.mpds_progressMonitor_nwarningNumber_get, _geosclassic.mpds_progressMonitor_nwarningNumber_set)
    nwarning = property(_geosclassic.mpds_progressMonitor_nwarning_get, _geosclassic.mpds_progressMonitor_nwarning_set)

    def __init__(self):
        _geosclassic.mpds_progressMonitor_swiginit(self, _geosclassic.new_mpds_progressMonitor())
    __swig_destroy__ = _geosclassic.delete_mpds_progressMonitor

# Register mpds_progressMonitor in _geosclassic:
_geosclassic.mpds_progressMonitor_swigregister(mpds_progressMonitor)

def MPDSGetWarningMessage(arg1):
    return _geosclassic.MPDSGetWarningMessage(arg1)

def MPDSInitProgressMonitor(arg1):
    return _geosclassic.MPDSInitProgressMonitor(arg1)

def MPDSUpdateProgressMonitor0(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor0(arg1)

def MPDSUpdateProgressMonitor1(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor1(arg1)

def MPDSUpdateProgressMonitor1GI(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor1GI(arg1)

def MPDSUpdateProgressMonitor2(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor2(arg1)

def MPDSUpdateProgressMonitor2GI(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor2GI(arg1)

def MPDSUpdateProgressMonitor3(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor3(arg1)

def MPDSUpdateProgressMonitor3GI(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor3GI(arg1)

def MPDSUpdateProgressMonitor4(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor4(arg1)

def MPDSUpdateProgressMonitor4GI(arg1):
    return _geosclassic.MPDSUpdateProgressMonitor4GI(arg1)

def MPDSOMPGeosClassicSim(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSOMPGeosClassicSim(arg1, arg2, arg3, arg4, arg5)

def MPDSOMPGeosClassicIndicatorSim(arg1, arg2, arg3, arg4, arg5):
    return _geosclassic.MPDSOMPGeosClassicIndicatorSim(arg1, arg2, arg3, arg4, arg5)

def MPDSOMPGeosClassicIndicatorSimEstimation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22):
    return _geosclassic.MPDSOMPGeosClassicIndicatorSimEstimation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22)

def MPDSOMPGeosClassicIndicatorSimSimulation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23):
    return _geosclassic.MPDSOMPGeosClassicIndicatorSimSimulation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23)

def MPDSOMPGeosClassicSimEstimation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22):
    return _geosclassic.MPDSOMPGeosClassicSimEstimation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22)

def MPDSOMPGeosClassicSimEstimationUniqueSN(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15):
    return _geosclassic.MPDSOMPGeosClassicSimEstimationUniqueSN(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15)

def MPDSOMPGeosClassicSimSimulation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27):
    return _geosclassic.MPDSOMPGeosClassicSimSimulation(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27)

def MPDSOMPImageConnectivityEulerNumber(arg1, arg2, arg3, arg4):
    return _geosclassic.MPDSOMPImageConnectivityEulerNumber(arg1, arg2, arg3, arg4)

def MPDSOMPImageConnectivityFunction0(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageConnectivityFunction0(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)

def MPDSOMPImageConnectivityFunction1(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageConnectivityFunction1(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)

def MPDSOMPImageConnectivityFunction2(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageConnectivityFunction2(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)

def MPDSOMPImageConnectivityGlobalIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSOMPImageConnectivityGlobalIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7)

def MPDSOMPImageConnectivity6EulerNumberCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageConnectivity6EulerNumberCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSOMPImageConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSOMPImageConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSOMPImageConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSOMPImageCorrelogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageCorrelogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)

def MPDSOMPImageCovariance(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageCovariance(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)

def MPDSOMPImageCovarianceNotCentred(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageCovarianceNotCentred(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)

def MPDSOMPImageDilate(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageDilate(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSOMPImageDistanceEuclidean(arg1, arg2, arg3):
    return _geosclassic.MPDSOMPImageDistanceEuclidean(arg1, arg2, arg3)

def MPDSOMPImageDistanceEuclideanConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceEuclideanConnectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSOMPImageDistanceEuclideanConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceEuclideanConnectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSOMPImageDistanceEuclideanConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceEuclideanConnectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSOMPImageDistanceEuclideanSign(arg1, arg2, arg3):
    return _geosclassic.MPDSOMPImageDistanceEuclideanSign(arg1, arg2, arg3)

def MPDSOMPImageDistanceL1(arg1, arg2, arg3):
    return _geosclassic.MPDSOMPImageDistanceL1(arg1, arg2, arg3)

def MPDSOMPImageDistanceL1Connectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceL1Connectivity6GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSOMPImageDistanceL1Connectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceL1Connectivity18GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSOMPImageDistanceL1Connectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8):
    return _geosclassic.MPDSOMPImageDistanceL1Connectivity26GlobalIndicatorCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)

def MPDSOMPImageDistanceL1Sign(arg1, arg2, arg3):
    return _geosclassic.MPDSOMPImageDistanceL1Sign(arg1, arg2, arg3)

def MPDSOMPImageErode(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPImageErode(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSOMPImageIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11):
    return _geosclassic.MPDSOMPImageIndicator(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)

def MPDSOMPImageMaxGeobody6SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11):
    return _geosclassic.MPDSOMPImageMaxGeobody6SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)

def MPDSOMPImageMaxGeobody18SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11):
    return _geosclassic.MPDSOMPImageMaxGeobody18SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)

def MPDSOMPImageMaxGeobody26SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11):
    return _geosclassic.MPDSOMPImageMaxGeobody26SizeCurve(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)

def MPDSOMPImagePyramidExpand(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSOMPImagePyramidExpand(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSOMPImagePyramidReduce(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10):
    return _geosclassic.MPDSOMPImagePyramidReduce(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)

def MPDSOMPImageTransiogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageTransiogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)

def MPDSOMPImageVariogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14):
    return _geosclassic.MPDSOMPImageVariogram(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)

def MPDSOMPMovingBoxAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9):
    return _geosclassic.MPDSOMPMovingBoxAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)

def MPDSOMPMovingSearchNeighborhoodAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7):
    return _geosclassic.MPDSOMPMovingSearchNeighborhoodAverageImage(arg1, arg2, arg3, arg4, arg5, arg6, arg7)

def new_int_array(nelements):
    return _geosclassic.new_int_array(nelements)

def delete_int_array(ary):
    return _geosclassic.delete_int_array(ary)

def int_array_getitem(ary, index):
    return _geosclassic.int_array_getitem(ary, index)

def int_array_setitem(ary, index, value):
    return _geosclassic.int_array_setitem(ary, index, value)

def new_intp_array(nelements):
    return _geosclassic.new_intp_array(nelements)

def delete_intp_array(ary):
    return _geosclassic.delete_intp_array(ary)

def intp_array_getitem(ary, index):
    return _geosclassic.intp_array_getitem(ary, index)

def intp_array_setitem(ary, index, value):
    return _geosclassic.intp_array_setitem(ary, index, value)

def new_double_array(nelements):
    return _geosclassic.new_double_array(nelements)

def delete_double_array(ary):
    return _geosclassic.delete_double_array(ary)

def double_array_getitem(ary, index):
    return _geosclassic.double_array_getitem(ary, index)

def double_array_setitem(ary, index, value):
    return _geosclassic.double_array_setitem(ary, index, value)

def new_real_array(nelements):
    return _geosclassic.new_real_array(nelements)

def delete_real_array(ary):
    return _geosclassic.delete_real_array(ary)

def real_array_getitem(ary, index):
    return _geosclassic.real_array_getitem(ary, index)

def real_array_setitem(ary, index, value):
    return _geosclassic.real_array_setitem(ary, index, value)

def new_realp_array(nelements):
    return _geosclassic.new_realp_array(nelements)

def delete_realp_array(ary):
    return _geosclassic.delete_realp_array(ary)

def realp_array_getitem(ary, index):
    return _geosclassic.realp_array_getitem(ary, index)

def realp_array_setitem(ary, index, value):
    return _geosclassic.realp_array_setitem(ary, index, value)

def new_MPDS_COVMODEL_array(nelements):
    return _geosclassic.new_MPDS_COVMODEL_array(nelements)

def delete_MPDS_COVMODEL_array(ary):
    return _geosclassic.delete_MPDS_COVMODEL_array(ary)

def MPDS_COVMODEL_array_getitem(ary, index):
    return _geosclassic.MPDS_COVMODEL_array_getitem(ary, index)

def MPDS_COVMODEL_array_setitem(ary, index, value):
    return _geosclassic.MPDS_COVMODEL_array_setitem(ary, index, value)

def new_MPDS_COVMODELELEM_array(nelements):
    return _geosclassic.new_MPDS_COVMODELELEM_array(nelements)

def delete_MPDS_COVMODELELEM_array(ary):
    return _geosclassic.delete_MPDS_COVMODELELEM_array(ary)

def MPDS_COVMODELELEM_array_getitem(ary, index):
    return _geosclassic.MPDS_COVMODELELEM_array_getitem(ary, index)

def MPDS_COVMODELELEM_array_setitem(ary, index, value):
    return _geosclassic.MPDS_COVMODELELEM_array_setitem(ary, index, value)

def new_MPDS_IMAGE_array(nelements):
    return _geosclassic.new_MPDS_IMAGE_array(nelements)

def delete_MPDS_IMAGE_array(ary):
    return _geosclassic.delete_MPDS_IMAGE_array(ary)

def MPDS_IMAGE_array_getitem(ary, index):
    return _geosclassic.MPDS_IMAGE_array_getitem(ary, index)

def MPDS_IMAGE_array_setitem(ary, index, value):
    return _geosclassic.MPDS_IMAGE_array_setitem(ary, index, value)

def new_MPDS_POINTSET_array(nelements):
    return _geosclassic.new_MPDS_POINTSET_array(nelements)

def delete_MPDS_POINTSET_array(ary):
    return _geosclassic.delete_MPDS_POINTSET_array(ary)

def MPDS_POINTSET_array_getitem(ary, index):
    return _geosclassic.MPDS_POINTSET_array_getitem(ary, index)

def MPDS_POINTSET_array_setitem(ary, index, value):
    return _geosclassic.MPDS_POINTSET_array_setitem(ary, index, value)

def malloc_MPDS_COVMODEL(*args):
    return _geosclassic.malloc_MPDS_COVMODEL(*args)

def calloc_MPDS_COVMODEL(*args):
    return _geosclassic.calloc_MPDS_COVMODEL(*args)

def realloc_MPDS_COVMODEL(ptr, nitems):
    return _geosclassic.realloc_MPDS_COVMODEL(ptr, nitems)

def free_MPDS_COVMODEL(ptr):
    return _geosclassic.free_MPDS_COVMODEL(ptr)
sizeof_MPDS_COVMODEL = _geosclassic.sizeof_MPDS_COVMODEL

def malloc_MPDS_COVMODELELEM(*args):
    return _geosclassic.malloc_MPDS_COVMODELELEM(*args)

def calloc_MPDS_COVMODELELEM(*args):
    return _geosclassic.calloc_MPDS_COVMODELELEM(*args)

def realloc_MPDS_COVMODELELEM(ptr, nitems):
    return _geosclassic.realloc_MPDS_COVMODELELEM(ptr, nitems)

def free_MPDS_COVMODELELEM(ptr):
    return _geosclassic.free_MPDS_COVMODELELEM(ptr)
sizeof_MPDS_COVMODELELEM = _geosclassic.sizeof_MPDS_COVMODELELEM

def malloc_MPDS_GRID(*args):
    return _geosclassic.malloc_MPDS_GRID(*args)

def calloc_MPDS_GRID(*args):
    return _geosclassic.calloc_MPDS_GRID(*args)

def realloc_MPDS_GRID(ptr, nitems):
    return _geosclassic.realloc_MPDS_GRID(ptr, nitems)

def free_MPDS_GRID(ptr):
    return _geosclassic.free_MPDS_GRID(ptr)
sizeof_MPDS_GRID = _geosclassic.sizeof_MPDS_GRID

def malloc_MPDS_IMAGE(*args):
    return _geosclassic.malloc_MPDS_IMAGE(*args)

def calloc_MPDS_IMAGE(*args):
    return _geosclassic.calloc_MPDS_IMAGE(*args)

def realloc_MPDS_IMAGE(ptr, nitems):
    return _geosclassic.realloc_MPDS_IMAGE(ptr, nitems)

def free_MPDS_IMAGE(ptr):
    return _geosclassic.free_MPDS_IMAGE(ptr)
sizeof_MPDS_IMAGE = _geosclassic.sizeof_MPDS_IMAGE

def malloc_MPDS_POINTSET(*args):
    return _geosclassic.malloc_MPDS_POINTSET(*args)

def calloc_MPDS_POINTSET(*args):
    return _geosclassic.calloc_MPDS_POINTSET(*args)

def realloc_MPDS_POINTSET(ptr, nitems):
    return _geosclassic.realloc_MPDS_POINTSET(ptr, nitems)

def free_MPDS_POINTSET(ptr):
    return _geosclassic.free_MPDS_POINTSET(ptr)
sizeof_MPDS_POINTSET = _geosclassic.sizeof_MPDS_POINTSET

def malloc_MPDS_GEOSCLASSICINPUT(*args):
    return _geosclassic.malloc_MPDS_GEOSCLASSICINPUT(*args)

def calloc_MPDS_GEOSCLASSICINPUT(*args):
    return _geosclassic.calloc_MPDS_GEOSCLASSICINPUT(*args)

def realloc_MPDS_GEOSCLASSICINPUT(ptr, nitems):
    return _geosclassic.realloc_MPDS_GEOSCLASSICINPUT(ptr, nitems)

def free_MPDS_GEOSCLASSICINPUT(ptr):
    return _geosclassic.free_MPDS_GEOSCLASSICINPUT(ptr)
sizeof_MPDS_GEOSCLASSICINPUT = _geosclassic.sizeof_MPDS_GEOSCLASSICINPUT

def malloc_MPDS_GEOSCLASSICINDICATORINPUT(*args):
    return _geosclassic.malloc_MPDS_GEOSCLASSICINDICATORINPUT(*args)

def calloc_MPDS_GEOSCLASSICINDICATORINPUT(*args):
    return _geosclassic.calloc_MPDS_GEOSCLASSICINDICATORINPUT(*args)

def realloc_MPDS_GEOSCLASSICINDICATORINPUT(ptr, nitems):
    return _geosclassic.realloc_MPDS_GEOSCLASSICINDICATORINPUT(ptr, nitems)

def free_MPDS_GEOSCLASSICINDICATORINPUT(ptr):
    return _geosclassic.free_MPDS_GEOSCLASSICINDICATORINPUT(ptr)
sizeof_MPDS_GEOSCLASSICINDICATORINPUT = _geosclassic.sizeof_MPDS_GEOSCLASSICINDICATORINPUT

def malloc_MPDS_GEOSCLASSICOUTPUT(*args):
    return _geosclassic.malloc_MPDS_GEOSCLASSICOUTPUT(*args)

def calloc_MPDS_GEOSCLASSICOUTPUT(*args):
    return _geosclassic.calloc_MPDS_GEOSCLASSICOUTPUT(*args)

def realloc_MPDS_GEOSCLASSICOUTPUT(ptr, nitems):
    return _geosclassic.realloc_MPDS_GEOSCLASSICOUTPUT(ptr, nitems)

def free_MPDS_GEOSCLASSICOUTPUT(ptr):
    return _geosclassic.free_MPDS_GEOSCLASSICOUTPUT(ptr)
sizeof_MPDS_GEOSCLASSICOUTPUT = _geosclassic.sizeof_MPDS_GEOSCLASSICOUTPUT

def malloc_MPDS_PROGRESSMONITOR(*args):
    return _geosclassic.malloc_MPDS_PROGRESSMONITOR(*args)

def calloc_MPDS_PROGRESSMONITOR(*args):
    return _geosclassic.calloc_MPDS_PROGRESSMONITOR(*args)

def realloc_MPDS_PROGRESSMONITOR(ptr, nitems):
    return _geosclassic.realloc_MPDS_PROGRESSMONITOR(ptr, nitems)

def free_MPDS_PROGRESSMONITOR(ptr):
    return _geosclassic.free_MPDS_PROGRESSMONITOR(ptr)
sizeof_MPDS_PROGRESSMONITOR = _geosclassic.sizeof_MPDS_PROGRESSMONITOR
MPDSUpdateProgressMonitor0_ptr = _geosclassic.MPDSUpdateProgressMonitor0_ptr
MPDSUpdateProgressMonitor1_ptr = _geosclassic.MPDSUpdateProgressMonitor1_ptr
MPDSUpdateProgressMonitor2_ptr = _geosclassic.MPDSUpdateProgressMonitor2_ptr
MPDSUpdateProgressMonitor3_ptr = _geosclassic.MPDSUpdateProgressMonitor3_ptr
MPDSUpdateProgressMonitor4_ptr = _geosclassic.MPDSUpdateProgressMonitor4_ptr

def mpds_get_error_message(ierr):
    return _geosclassic.mpds_get_error_message(ierr)

def mpds_get_warning_message(iwarn):
    return _geosclassic.mpds_get_warning_message(iwarn)

def mpds_set_int_vector_from_array(vector, offset, array):
    return _geosclassic.mpds_set_int_vector_from_array(vector, offset, array)

def mpds_set_double_vector_from_array(vector, offset, array):
    return _geosclassic.mpds_set_double_vector_from_array(vector, offset, array)

def mpds_set_real_vector_from_array(vector, offset, array):
    return _geosclassic.mpds_set_real_vector_from_array(vector, offset, array)

def mpds_get_array_from_int_vector(vector, offset, array):
    return _geosclassic.mpds_get_array_from_int_vector(vector, offset, array)

def mpds_get_array_from_double_vector(vector, offset, array):
    return _geosclassic.mpds_get_array_from_double_vector(vector, offset, array)

def mpds_get_array_from_real_vector(vector, offset, array):
    return _geosclassic.mpds_get_array_from_real_vector(vector, offset, array)

def mpds_set_real_vector_to_cst(arg1, arg2, arg3, arg4):
    return _geosclassic.mpds_set_real_vector_to_cst(arg1, arg2, arg3, arg4)

def mpds_allocate_and_set_geosClassicInput_varname(geosClassicInput, STRING):
    return _geosclassic.mpds_allocate_and_set_geosClassicInput_varname(geosClassicInput, STRING)

def mpds_allocate_and_set_geosClassicIndicatorInput_varname(geosClassicIndicatorInput, STRING):
    return _geosclassic.mpds_allocate_and_set_geosClassicIndicatorInput_varname(geosClassicIndicatorInput, STRING)

def mpds_allocate_and_set_geosClassicInput_outputReportFileName(geosClassicInput, STRING):
    return _geosclassic.mpds_allocate_and_set_geosClassicInput_outputReportFileName(geosClassicInput, STRING)

def mpds_allocate_and_set_geosClassicIndicatorInput_outputReportFileName(geosClassicIndicatorInput, STRING):
    return _geosclassic.mpds_allocate_and_set_geosClassicIndicatorInput_outputReportFileName(geosClassicIndicatorInput, STRING)

def mpds_set_varname(varname, index, STRING):
    return _geosclassic.mpds_set_varname(varname, index, STRING)

def mpds_get_varname(varname, index):
    return _geosclassic.mpds_get_varname(varname, index)

