Metadata-Version: 2.4
Name: texsite
Version: 5.0.0
Project-URL: Homepage, https://www.texperience.de
Project-URL: Repository, https://gitlab.com/texperience/texsite
Author-email: Timo Rieber <trieber@texperience.de>
License: Copyright (c) 2016, Timo Rieber <trieber@texperience.de>
        
        Permission to use, copy, modify, and/or distribute this software for any
        purpose with or without fee is hereby granted, provided that the above
        copyright notice and this permission notice appear in all copies.
        
        THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
        WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
        MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
        ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
        WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
        ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
        OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
License-File: LICENSE
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 4.2
Classifier: Framework :: Wagtail
Classifier: Framework :: Wagtail :: 6
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: ISC License (ISCL)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Python: <3.14,>=3.9
Requires-Dist: django-bootstrap-ui<5.0,>=4.0
Requires-Dist: django<4.3,>=4.2
Requires-Dist: wagtail<6.4,>=6.3
Provides-Extra: development
Requires-Dist: coverage<8.0,>=7.8; extra == 'development'
Requires-Dist: ruff<1.0,>=0.11; extra == 'development'
Requires-Dist: tox<5.0,>=4.25; extra == 'development'
Provides-Extra: linting
Requires-Dist: ruff<1.0,>=0.11; extra == 'linting'
Provides-Extra: testing
Requires-Dist: coverage<8.0,>=7.8; extra == 'testing'
Requires-Dist: tox<5.0,>=4.25; extra == 'testing'
Description-Content-Type: text/markdown

# texsite

[![Pipeline][pipeline-badge]][pipeline-link]
[![Coverage][coverage-badge]][coverage-link]
[![PyPI][pypi-badge]][pypi-link]
[![License][license-badge]][license-link]

[pipeline-badge]: https://gitlab.com/texperience/texsite/badges/master/pipeline.svg
[pipeline-link]: https://gitlab.com/texperience/texsite/pipelines
[coverage-badge]: https://gitlab.com/texperience/texsite/badges/master/coverage.svg
[coverage-link]: https://gitlab.com/texperience/texsite/-/jobs
[pypi-badge]: https://img.shields.io/pypi/v/texsite.svg
[pypi-link]: https://pypi.python.org/pypi/texsite
[license-badge]: https://img.shields.io/pypi/l/texsite.svg
[license-link]: http://en.wikipedia.org/wiki/ISC_license

texsite delivers great and ready-to-use page templates for the modern, flexible and user-focused web content management system [Wagtail CMS][wagtail] backed by the popular [Django web framework][django], both written in [Python][python].

Based on the amazing [StreamField][wagtail-streamfield] introduced with Wagtail release 1.0, which texsite uses extensively, it has never been easier for editors to author awesome pages. Read more on how this concept works in the great blog article [Rich text fields and faster horses][wagtail-rtfafh] written by Matt Westcott, lead technical developer of Wagtail.

[wagtail]: https://wagtail.io/
[django]: https://www.djangoproject.com/
[python]: https://www.python.org/
[wagtail-streamfield]: http://docs.wagtail.io/en/stable/topics/streamfield.html
[wagtail-rtfafh]: https://torchbox.com/blog/rich-text-fields-and-faster-horses/

## Features

* Clean Blog Pages - based on the [Clean Blog][startbootstrap-cleanblog] theme by Start Bootstrap
* Business Casual Pages - based on the [Business Casual][startbootstrap-businesscasual] theme by Start Bootstrap
* Xperience Pages - inspired by the [Personal][startbootstrap-personal] theme by Start Bootstrap
* Outstanding test coverage
* Continuously integrated codebase

[startbootstrap-cleanblog]: https://startbootstrap.com/theme/clean-blog
[startbootstrap-businesscasual]: https://startbootstrap.com/theme/business-casual
[startbootstrap-personal]: https://startbootstrap.com/theme/personal

## Technical requirements

New feature releases frequently add support for newer versions of underlying technologies and drop support for older ones. The compatible versions of Wagtail, Django and Python for each texsite release are:

| Release | Wagtail  | Django   | Python                      |
|---------|----------|----------|-----------------------------|
| 5.0+    | 6.3 LTS  | 4.2 LTS  | 3.9, 3.10, 3.11, 3.12, 3.13 |
| 4.0+    | 4.1 LTS  | 3.2 LTS  | 3.8, 3.9, 3.10, 3.11        |
| 3.0     | 2.11 LTS | 3.1      | 3.8                         |
| 2.0     | 2.7 LTS  | 2.2 LTS  | 3.6, 3.7, 3.8               |
| 1.0     | 2.3 LTS  | 1.11 LTS | 3.4. 3.5, 3.6               |

## Code and contribution

The code is open source and released under the [ISC License (ISCL)][isc-license]. It is available on [Gitlab][gitlab] and follows the guidelines about [Semantic Versioning][semver] for transparency within the release cycle and backward compatibility whenever possible.

All contributions are welcome, whether bug reports, code contributions and reviews, documentation or feature requests.

If you're a developer, fork the repo and prepare a merge request:

```bash
# Prepare your environment the first time
python3.13 -m venv .venv
source .venv/bin/activate
pip install -e .[development]

# Running the tests while development
python -m django test --settings=tests.settings

# Individual supported versions tests and code quality checks
tox -e py313-dj42-wt63
tox -e ruff

# Ensure code quality running the entire test suite,
# this requires all supported Python releases to be installed
tox

# On created, changed or deleted translations...
# ...update the message files within the respective apps directory
python -m django makemessages --all

# ...edit and translate the message files manually
# ...compile the message files
python -m django compilemessages
```

[isc-license]: http://en.wikipedia.org/wiki/ISC_license
[semver]: http://semver.org/
[gitlab]: https://gitlab.com/texperience/texsite

## Installation

Install `texsite` directly from [PyPI][pypi] using pip:

```bash
pip install texsite
```

[pypi]: https://pypi.org/project/texsite/

## Configuration

The tool defines a set of environment variables to configure the application:

| Name                    | Default                    | Description                                                                                                        |
|-------------------------|----------------------------|--------------------------------------------------------------------------------------------------------------------|
| `TEXSITE_DATA_ROOT`     | `./.data`                  | Local path for storing data and logs.                                                                              |
| `TEXSITE_DEBUG`         | `False`                    | Enable debug mode.                                                                                                 |
| `TEXSITE_ALLOWED_HOSTS` | `localhost`                | Comma separated list of allowed hosts.                                                                             |
| `TEXSITE_SECRET_KEY`    | ``                         | At least 50 random characters.                                                                                     |
| `TEXSITE_SECURE_PROXY`  | `False`                    | Enable for deployments behind a reverse proxy with `Host`, `Origin` and `X-Forwarded-Proto` headers set correctly. |

We recommend to leverage a `.env` file to set the environment variables. It is recognised automatically (e.g. Docker compose) or can easily be configured in many tools.

If you need more flexibility, you may provide your own settings module. This is done by setting the `DJANGO_SETTINGS_MODULE` environment variable to the path of your custom settings module.

## Docker

We provide a Dockerfile to build a production-ready image to make use of our entrypoints.

For local testing and development purposes a predefined Docker compose file is available. It uses the same Dockerfile and showcases how to run the different entrypoints as containers.

```bash
docker compose up --build --detach --remove-orphans
```

This runs the following containers:

* Traefik as application proxy
* Gunicorn serving our WSGI application
* NGINX serving static and media files

In addition you can easily use the `cli` service to execute Django management commands:

```bash
docker compose run --rm --publish 8000:8000 cli runserver 0.0.0.0:8000
docker compose run --rm cli collectstatic
docker compose run --rm cli migrate
```
