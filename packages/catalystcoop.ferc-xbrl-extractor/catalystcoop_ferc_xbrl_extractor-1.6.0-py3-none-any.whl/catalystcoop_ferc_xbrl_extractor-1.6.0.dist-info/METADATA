Metadata-Version: 2.4
Name: catalystcoop.ferc_xbrl_extractor
Version: 1.6.0
Summary: A tool for extracting data from FERC XBRL Filings.
Author-email: Catalyst Cooperative <pudl@catalyst.coop>, Zach Schira <zach.schira@catalyst.coop>
License: MIT License
        
        Copyright (c) 2022 Catalyst Cooperative
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/catalyst-cooperative/ferc-xbrl-extractor
Project-URL: Source, https://github.com/catalyst-cooperative/ferc-xbrl-extractor
Project-URL: Documentation, https://catalystcoop-ferc-xbrl-extractor.readthedocs.io
Project-URL: Issue Tracker, https://github.com/catalyst-cooperative/ferc-xbrl-extractor/issues
Keywords: accounting,data,electricity,energy,federal energy regulatory commission,ferc,finance,gas,natural gas,oil,regulation,utility,xbrl
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: <3.14,>=3.10
Description-Content-Type: text/x-rst
License-File: LICENSE.txt
Requires-Dist: arelle-release<3,>=2.3
Requires-Dist: coloredlogs<15.1,>=14.0
Requires-Dist: frictionless<6,>=5
Requires-Dist: lxml<6,>=4.9.1
Requires-Dist: numpy<3,>=1.16
Requires-Dist: pandas<3,>=1.5
Requires-Dist: pyarrow>=14.0.1
Requires-Dist: pydantic<3,>=2
Requires-Dist: sqlalchemy<3,>=1.4
Requires-Dist: stringcase<2,>=1.2
Provides-Extra: dev
Requires-Dist: build<1.3,>=1.0; extra == "dev"
Requires-Dist: ruff<0.12,>=0.5.0; extra == "dev"
Requires-Dist: tox<4.26,>=4.16.0; extra == "dev"
Requires-Dist: twine<6.2,>=3.3; extra == "dev"
Provides-Extra: docs
Requires-Dist: doc8<1.2,>=1.0; extra == "docs"
Requires-Dist: furo>=2022.4.7; extra == "docs"
Requires-Dist: sphinx!=5.1.0,<8.3,>=4; extra == "docs"
Requires-Dist: sphinx-autoapi<3.7,>=3.1.2; extra == "docs"
Requires-Dist: sphinx-issues<5.1,>=1.2; extra == "docs"
Provides-Extra: tests
Requires-Dist: coverage<7.9,>=5.3; extra == "tests"
Requires-Dist: doc8<1.2,>=1.0; extra == "tests"
Requires-Dist: mypy<1.16,>=1.0; extra == "tests"
Requires-Dist: pre-commit<5,>=4; extra == "tests"
Requires-Dist: pydocstyle<6.4,>=5.1; extra == "tests"
Requires-Dist: pytest<8.4,>=6.2; extra == "tests"
Requires-Dist: pytest-console-scripts<1.5,>=1.1; extra == "tests"
Requires-Dist: pytest-cov<6.2,>=2.10; extra == "tests"
Requires-Dist: pytest-mock<3.15,>=3.0; extra == "tests"
Requires-Dist: ruff<0.12,>=0.5.0; extra == "tests"
Requires-Dist: tox<4.26,>=4.16.0; extra == "tests"
Provides-Extra: types
Requires-Dist: types-setuptools; extra == "types"
Dynamic: license-file

===============================================================================
FERC XBRL Extractor
===============================================================================


.. readme-intro

.. image:: https://www.repostatus.org/badges/latest/active.svg
   :target: https://www.repostatus.org/#active
   :alt: Project Status: Active

.. image:: https://github.com/catalyst-cooperative/ferc-xbrl-extractor/actions/workflows/tox-pytest.yml/badge.svg
   :target: https://github.com/catalyst-cooperative/ferc-xbrl-extractor/actions/workflows/tox-pytest.yml
   :alt: Tox-PyTest Status

.. image:: https://img.shields.io/codecov/c/github/catalyst-cooperative/ferc-xbrl-extractor?style=flat&logo=codecov
   :target: https://codecov.io/gh/catalyst-cooperative/ferc-xbrl-extractor
   :alt: Codecov Test Coverage

.. image:: https://img.shields.io/readthedocs/catalystcoop-ferc-xbrl-extractor?style=flat&logo=readthedocs
   :target: https://catalystcoop-ferc-xbrl-extractor.readthedocs.io/en/latest/
   :alt: Read the Docs Build Status

.. image:: https://img.shields.io/pypi/v/catalystcoop.ferc-xbrl-extractor
   :target: https://pypi.org/project/catalystcoop.ferc-xbrl-extractor/
   :alt: PyPI Latest Version

.. image:: https://img.shields.io/conda/vn/conda-forge/catalystcoop.ferc_xbrl_extractor
   :target: https://anaconda.org/conda-forge/catalystcoop.ferc_xbrl_extractor
   :alt: conda-forge Version

.. image:: https://img.shields.io/pypi/pyversions/catalystcoop.ferc-xbrl-extractor
   :target: https://pypi.org/project/catalystcoop.ferc-xbrl-extractor/
   :alt: Supported Python Versions

.. image:: https://img.shields.io/badge/code%20style-black-000000.svg
   :target: https://github.com/psf/black
   :alt: Any color you want, so long as it's black.

.. image:: https://results.pre-commit.ci/badge/github/catalyst-cooperative/ferc-xbrl-extractor/main.svg
   :target: https://results.pre-commit.ci/latest/github/catalyst-cooperative/ferc-xbrl-extractor/main
   :alt: pre-commit CI

.. image:: https://zenodo.org/badge/471019769.svg
  :target: https://zenodo.org/doi/10.5281/zenodo.10020145
   :alt: Zenodo DOI

The Federal Energy Regulatory Commission (FERC) has moved to collecting and distributing
data using `XBRL <https://en.wikipedia.org/wiki/XBRL>`__. XBRL is primarily designed for
financial reporting, and has been adopted by regulators in the US and other countries.
Much of the tooling in the XBRL ecosystem is targeted towards filers, and rendering
individual filings in a human readable way, but there is very little targeted towards
accessing and analyzing large collections of filings. This tool is designed to provide
that functionality for FERC XBRL data. Specifically, it can extract data from a set of
XBRL filings, and write that data to a SQLite database whose structure is generated from
an XBRL Taxonomy. While each XBRL instance contains a reference to a taxonomy,
this tool requires a path to a single taxonomy that will be used to interpret all
instances being processed. This means even if instances were created from different
versions of a Taxonomy, the provided taxonomy will be used when processing all of these
instances, so the output database will have a consistent structure. For more information
on the technical details of the XBRL extraction, see the docs.

We are currently using this tool to extract and publish the following FERC data:

.. list-table::
   :header-rows: 1

   * - FERC Form
     - Archived XBRL
     - SQLite DB
   * - `Form 1 <https://www.ferc.gov/industries-data/electric/general-information/electric-industry-forms/form-1-electric-utility-annual>`__
     - https://doi.org/10.5281/zenodo.4127043
     - https://data.catalyst.coop/ferc1_xbrl
   * - `Form 2 <https://www.ferc.gov/industries-data/natural-gas/industry-forms/form-2-2a-3-q-gas-historical-vfp-data>`__
     - https://doi.org/10.5281/zenodo.5879542
     - https://data.catalyst.coop/ferc2_xbrl
   * - `Form 6 <https://www.ferc.gov/industries-data/electric/general-information/electric-industry-forms/form-66-q-overview-orders>`__
     - https://doi.org/10.5281/zenodo.7126395
     - https://data.catalyst.coop/ferc6_xbrl
   * - `Form 60 <https://www.ferc.gov/ferc-online/ferc-online/filing-forms/service-companies-filing-forms/form-60-annual-report>`_
     - https://doi.org/10.5281/zenodo.7126434
     - https://data.catalyst.coop/ferc60_xbrl
   * - `Form 714 <https://www.ferc.gov/industries-data/electric/general-information/electric-industry-forms/form-no-714-annual-electric>`__
     - https://doi.org/10.5281/zenodo.4127100
     - https://data.catalyst.coop/ferc714_xbrl

Usage
-----

Installation
^^^^^^^^^^^^

To install using conda, run the following command, and activate the environment.

.. code-block:: console

    $ conda env create -f environment.yml

Activate:

.. code-block:: console

    $ conda activate ferc-xbrl-extractor


CLI
^^^

This tool can be used as a library, as it is in `PUDL <https://github.com/catalyst-cooperative/pudl>`__,
or there is a CLI provided for interacting with XBRL data. The only required options
for the CLI are a path to the filings to be extracted, and a path to the output
SQLite database. The path to the filings can point to a directory full of XBRL
Filings, a single XBRL filing, or a zipfile with XBRL filings. If
the path to the database points to an existing database, the ``--clobber`` option
can be used to drop all existing data before performing the extraction.

.. code-block:: console

    $ xbrl_extract {path_to_filings} {path_to_database}

This repo contains a small selection of FERC Form 1 filings from 2021, along with
an archive of taxonomies in the ``examples`` directory. To test the tool on these
filings, use the command:

.. code-block:: console

    $ xbrl_extract examples/ferc1-2021-sample.zip --db-path ./ferc1-2021-sample.sqlite \
        --taxonomy examples/ferc1-xbrl-taxonomies.zip

The tool expects the ``--taxonomy`` option to point to a zipfile containing archived
taxonomies produced by the `pudl-archiver <https://github.com/catalyst-cooperative/pudl-archiver>`__.
The extractor will parse all taxonomies in the archive, then use the taxonomy referenced
in each filing while parsing it.

Parsing XBRL filings can be a time consuming and CPU heavy task, so this tool
implements some basic multiprocessing to speed this up. It uses a
`process pool <https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor>`__
to do this. There are two options for configuring the process pool, ``--batch-size``
and ``--workers``. The batch size configures how many filings will be processed by
each child process at a time, and workers specifies how many child processes to
create in the pool. It may take some experimentation to get these options
optimally configured. The following command will use 5 worker processes to process
batches of 50 filings at a time.

.. code-block:: console

    $ xbrl_extract examples/ferc1-2021-sample.zip .--db-path /ferc1-2021-sample.sqlite \
        --taxonomy examples/ferc1-xbrl-taxonomies.zip
        --workers 5 \
        --batch-size 50

There are also several options included for extracting metadata from the taxonomy.
First is the ``--datapackage-path`` command to save a
`frictionless datapackage <https://specs.frictionlessdata.io/data-package/>`__
descriptor as JSON, which annotates the generated SQLite database. There is also the
``--metadata-path`` option, which writes more extensive taxonomy metadata to a json
file, grouped by table name. See the ``ferc_xbrl_extractor.arelle_interface`` module
for more info on the extracted metadata. To create both of these files using the example
filings and taxonomy, run the following command.

.. code-block:: console

    $ xbrl_extract examples/ferc1-2021-sample.zip .--db-path /ferc1-2021-sample.sqlite \
        --taxonomy examples/ferc1-xbrl-taxonomies.zip
        --metadata-path metadata.json \
        --datapackage-path datapackage.json

PUDL Sustainers
---------------

This package is part of the `Public Utility Data Liberation (PUDL) project
<https://github.com/catalyst-cooperative/pudl>`__.

The PUDL Sustainers provide ongoing financial support to ensure the open data keeps
flowing, and the project is sustainable long term. They're also involved in our
quarterly planning process. To learn more see `the PUDL Project on Open Collective
<https://opencollective.com/pudl>`__.
