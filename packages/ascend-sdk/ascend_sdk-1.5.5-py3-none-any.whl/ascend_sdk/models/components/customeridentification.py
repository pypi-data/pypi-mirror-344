"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .customeridentification_result import (
    CustomerIdentificationResult,
    CustomerIdentificationResultTypedDict,
)
from ascend_sdk import utils
from ascend_sdk.types import BaseModel
from ascend_sdk.utils import validate_open_enum
from enum import Enum
from pydantic.functional_validators import PlainValidator
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CheckTypes(str, Enum, metaclass=utils.OpenEnumMeta):
    CHECK_TYPE_UNSPECIFIED = "CHECK_TYPE_UNSPECIFIED"
    DATABASE = "DATABASE"
    DOCUMENTARY = "DOCUMENTARY"


class CustomerIdentificationTypedDict(TypedDict):
    r"""CustomerIdentification includes the details of a customer identification check"""

    check_types: NotRequired[List[CheckTypes]]
    r"""The types of checks being requested"""
    name: NotRequired[str]
    r"""required format: correspondents/{correspondent_id}/customerIdentifications/{customer_identification_id}"""
    results: NotRequired[List[CustomerIdentificationResultTypedDict]]
    r"""The results of the identity verification check(s)"""


class CustomerIdentification(BaseModel):
    r"""CustomerIdentification includes the details of a customer identification check"""

    check_types: Optional[
        List[Annotated[CheckTypes, PlainValidator(validate_open_enum(False))]]
    ] = None
    r"""The types of checks being requested"""

    name: Optional[str] = None
    r"""required format: correspondents/{correspondent_id}/customerIdentifications/{customer_identification_id}"""

    results: Optional[List[CustomerIdentificationResult]] = None
    r"""The results of the identity verification check(s)"""
