name: Test and release

on:
  push:
    branches: ["master"]
    tags:
      - "v*"

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tox and tox-gh-actions
        run: python -m pip install tox tox-gh-actions

      - name: Test with tox
        run: python -m tox

  build:
    name: Build package
    runs-on: ubuntu-latest
    needs: test
    # Only run when a tag is pushed or with manual trigger
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for setuptools_scm to determine version

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"  # Using latest stable Python for building

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine wheel setuptools setuptools_scm pre-commit

      - name: Run pre-commit checks
        run: |
          pip install -e .[dev]
          pre-commit run --all-files

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 5

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    # Only run when a tag is pushed
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment: pypi
    permissions:
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
