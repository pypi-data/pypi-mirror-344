[
    {
        "type": "ClassChunk",
        "name": "CalendarRelatedResource",
        "id": "lseg_analytics.reference_data.currencies.CalendarRelatedResource",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "id",
                "type": "str"
            },
            {
                "name": "location",
                "type": "Location"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 771,
        "content": "class CalendarRelatedResource:\n    \"\"\"Object identifying a calendar resource by either uuid or location (space and name).\n\n    Readonly variables are only populated by the server, and will be ignored when sending a request.\n\n    Attributes\n    ----------\n    type : str or ~analyticsapi.models.CALENDAR\n        The type of the resource.\n    id : str\n        The unique id of the resource.\n    location : ~analyticsapi.models.Location\n        An object to define the location of the resource (space and name).\n    \n    \"\"\"\n    type: typing.Optional[typing.Literal[<ResourceType.CALENDAR: 'Calendar'>]]\n    id: typing.Optional[str]\n    location: typing.Optional[ForwardRef('_models.Location')]",
        "metadata": {
            "doc": "Object identifying a calendar resource by either uuid or location (space and name).\n\n    Readonly variables are only populated by the server, and will be ignored when sending a request.\n\n    Attributes\n    ----------\n    type : str or ~analyticsapi.models.CALENDAR\n        The type of the resource.\n    id : str\n        The unique id of the resource.\n    location : ~analyticsapi.models.Location\n        An object to define the location of the resource (space and name).\n    \n",
            "annotations": "    type: typing.Optional[typing.Literal[<ResourceType.CALENDAR: 'Calendar'>]]\n    id: typing.Optional[str]\n    location: typing.Optional[ForwardRef('_models.Location')]",
            "signature": "class CalendarRelatedResource:\n    \"\"\"\"\"\"\n    type: typing.Optional[typing.Literal[<ResourceType.CALENDAR: 'Calendar'>]]\n    id: typing.Optional[str]\n    location: typing.Optional[ForwardRef('_models.Location')]"
        },
        "dependencies": {
            "children": [
                "lseg_analytics.reference_data.currencies.CalendarRelatedResource.__init__"
            ],
            "parent": [],
            "use": [
                "lseg_analytics.common.Location"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "OverloadedMethodChunk",
        "name": "CalendarRelatedResource.__init__",
        "id": "lseg_analytics.reference_data.currencies.CalendarRelatedResource.__init__",
        "params": [
            {
                "name": "args",
                "type": "Any"
            },
            {
                "name": "kwargs",
                "type": "Any"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 810,
        "content": "class CalendarRelatedResource:\n    @overload\n    def __init__(self, *, id: Optional[str] = None, location: Optional[ForwardRef('_models.Location')] = None):\n        \"\"\"\"\"\"\n\n    @overload\n    def __init__(self, mapping: Mapping[str, Any]):\n        \"\"\"\n        Parameters\n        ----------\n        mapping : Mapping[str, Any]\n            raw JSON to initialize the model.\n        \n        \"\"\"\n\n    def __init__(self, *args: Any, **kwargs: Any) -> None:\n        \"\"\"\"\"\"",
        "metadata": {
            "doc": "",
            "signature": "__init__(self, *args: Any, **kwargs: Any) -> None:",
            "class": "CalendarRelatedResource"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.currencies.CalendarRelatedResource"
            ],
            "use": [
                "lseg_analytics.common.Location"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "ClassChunk",
        "name": "Currency",
        "id": "lseg_analytics.reference_data.currencies.Currency",
        "params": [
            {
                "name": "definition",
                "type": "CurrencyDefinition"
            },
            {
                "name": "description",
                "type": "Description"
            }
        ],
        "file_path": "lseg_analytics/reference_data/currencies/_currency.py",
        "line_number": 24,
        "content": "class Currency:\n    \"\"\"\n    Currency object.\n\n    Contains all the necessary information to identify and define a Currency instance.\n\n    Attributes\n    ----------\n    type : Union[str, ResourceType], optional\n        The resource type. Possible values are: Calendar, Currency, CrossCurrency, IrCurve, FxForwardCurve, Analytics, Loan, FxSpot, NonDeliverableForward, Deposit, CrossCurrencySwap or Space.\n    id : str, optional\n        A resource ID is the unique resource identifier for an object on the platform. The resource ID is created on saving. IDs are read-only.\n    location : Location\n        Name and space are location attributes, which are automatically set when a resource object is saved for the first time. Unsaved resources have thier name and space set to None. Location attributes are read-only.\n    description : Description, optional\n        Description object that contains the resource summary and tags.\n    definition : CurrencyDefinition\n        The definition of the currency pair.\n\n    See Also\n    --------\n\n\n    Examples\n    --------\n\n\n    \n    \"\"\"\n",
        "metadata": {
            "doc": "\n    Currency object.\n\n    Contains all the necessary information to identify and define a Currency instance.\n\n    Attributes\n    ----------\n    type : Union[str, ResourceType], optional\n        The resource type. Possible values are: Calendar, Currency, CrossCurrency, IrCurve, FxForwardCurve, Analytics, Loan, FxSpot, NonDeliverableForward, Deposit, CrossCurrencySwap or Space.\n    id : str, optional\n        A resource ID is the unique resource identifier for an object on the platform. The resource ID is created on saving. IDs are read-only.\n    location : Location\n        Name and space are location attributes, which are automatically set when a resource object is saved for the first time. Unsaved resources have thier name and space set to None. Location attributes are read-only.\n    description : Description, optional\n        Description object that contains the resource summary and tags.\n    definition : CurrencyDefinition\n        The definition of the currency pair.\n\n    See Also\n    --------\n\n\n    Examples\n    --------\n\n\n    \n",
            "annotations": "",
            "signature": "class Currency:\n    \"\"\"\"\"\"\n"
        },
        "dependencies": {
            "children": [
                "lseg_analytics.reference_data.currencies.Currency.__init__",
                "lseg_analytics.reference_data.currencies.Currency.id",
                "lseg_analytics.reference_data.currencies.Currency.location",
                "lseg_analytics.reference_data.currencies.Currency.save",
                "lseg_analytics.reference_data.currencies.Currency.clone"
            ],
            "parent": [],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "MethodChunk",
        "name": "Currency.__init__",
        "id": "lseg_analytics.reference_data.currencies.Currency.__init__",
        "params": [
            {
                "name": "definition",
                "type": "CurrencyDefinition"
            },
            {
                "name": "description",
                "type": "Description"
            }
        ],
        "file_path": "lseg_analytics/reference_data/currencies/_currency.py",
        "line_number": 55,
        "content": "class Currency:\n    def __init__(self, definition: CurrencyDefinition, description: Optional[Description] = None):\n        \"\"\"\n        Currency constructor\n\n        Parameters\n        ----------\n        definition : CurrencyDefinition\n            The definition of the currency pair.\n        description : Description, optional\n            Description object that contains the resource summary and tags.\n\n        Examples\n        --------\n\n\n        \n        \"\"\"",
        "metadata": {
            "doc": "\n        Currency constructor\n\n        Parameters\n        ----------\n        definition : CurrencyDefinition\n            The definition of the currency pair.\n        description : Description, optional\n            Description object that contains the resource summary and tags.\n\n        Examples\n        --------\n\n\n        \n",
            "signature": "class Currency:\n    def __init__(self, definition: CurrencyDefinition, description: Optional[Description] = None):",
            "class": "Currency"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.currencies.Currency"
            ],
            "use": [
                "lseg_analytics.reference_data.currencies.CurrencyDefinition",
                "lseg_analytics.common.Description"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "PropertyChunk",
        "name": "Currency.id",
        "id": "lseg_analytics.reference_data.currencies.Currency.id",
        "content": "class Currency:\n    @property\n    def id(self):\n        \"\"\"\n        Returns the Currency id\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        str\n            A resource ID is the unique resource identifier for an object on the platform. The resource ID is created on saving. IDs are read-only.\n\n        Examples\n        --------\n\n\n        \n        \"\"\"",
        "metadata": {
            "doc": "\n        Returns the Currency id\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        str\n            A resource ID is the unique resource identifier for an object on the platform. The resource ID is created on saving. IDs are read-only.\n\n        Examples\n        --------\n\n\n        \n",
            "signature": "class Currency:\n    def id(self):",
            "class": "Currency"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.currencies.Currency"
            ],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "PropertyChunk",
        "name": "Currency.location",
        "id": "lseg_analytics.reference_data.currencies.Currency.location",
        "content": "class Currency:\n    @property\n    def location(self):\n        \"\"\"\n        Returns the Currency location\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        Location\n            Name and space are location attributes, which are automatically set when a resource object is saved for the first time. Unsaved resources have thier name and space set to None. Location attributes are read-only.\n\n        Examples\n        --------\n\n\n        \n        \"\"\"",
        "metadata": {
            "doc": "\n        Returns the Currency location\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        Location\n            Name and space are location attributes, which are automatically set when a resource object is saved for the first time. Unsaved resources have thier name and space set to None. Location attributes are read-only.\n\n        Examples\n        --------\n\n\n        \n",
            "signature": "class Currency:\n    def location(self):",
            "class": "Currency"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.currencies.Currency"
            ],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "MethodChunk",
        "name": "Currency.save",
        "id": "lseg_analytics.reference_data.currencies.Currency.save",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "name",
                "type": "str",
                "valuelookup": "Currency.name"
            },
            {
                "name": "space",
                "type": "str",
                "valuelookup": "Currency.space"
            }
        ],
        "file_path": "lseg_analytics/reference_data/currencies/_currency.py",
        "line_number": 197,
        "content": "class Currency:\n    def save(self, *, name: Optional[str] = None, space: Optional[str] = None) -> bool:\n        \"\"\"\n        Save Currency instance in the platform store.\n\n        Parameters\n        ----------\n        name : str, optional\n            The Currency name. The name parameter must be specified when the object is first created. Thereafter it is optional.\n        space : str, optional\n            The space where the Currency is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n            LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n        Returns\n        --------\n        bool, optional\n            True, if saved successfully, otherwise None\n\n\n        Examples\n        --------\n\n\n        \n        \"\"\"",
        "metadata": {
            "doc": "\n        Save Currency instance in the platform store.\n\n        Parameters\n        ----------\n        name : str, optional\n            The Currency name. The name parameter must be specified when the object is first created. Thereafter it is optional.\n        space : str, optional\n            The space where the Currency is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n            LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n        Returns\n        --------\n        bool, optional\n            True, if saved successfully, otherwise None\n\n\n        Examples\n        --------\n\n\n        \n",
            "signature": "class Currency:\n    def save(self, *, name: Optional[str] = None, space: Optional[str] = None) -> bool:",
            "class": "Currency"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.currencies.Currency"
            ],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "MethodChunk",
        "name": "Currency.clone",
        "id": "lseg_analytics.reference_data.currencies.Currency.clone",
        "params": [],
        "file_path": "lseg_analytics/reference_data/currencies/_currency.py",
        "line_number": 238,
        "content": "class Currency:\n    def clone(self) -> 'Currency':\n        \"\"\"\n        Return the same object, without id, name and space\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        Currency\n            The cloned Currency object\n\n\n        Examples\n        --------\n\n\n        \n        \"\"\"",
        "metadata": {
            "doc": "\n        Return the same object, without id, name and space\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        Currency\n            The cloned Currency object\n\n\n        Examples\n        --------\n\n\n        \n",
            "signature": "class Currency:\n    def clone(self) -> 'Currency':",
            "class": "Currency"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.currencies.Currency"
            ],
            "use": [
                "lseg_analytics.reference_data.currencies.Currency"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "ClassChunk",
        "name": "CurrencyAsCollectionItem",
        "id": "lseg_analytics.reference_data.currencies.CurrencyAsCollectionItem",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "location",
                "type": "Location"
            },
            {
                "name": "description",
                "type": "Description"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 1754,
        "content": "class CurrencyAsCollectionItem:\n    \"\"\"An object describing the basic properties of a currency.\n\n    Readonly variables are only populated by the server, and will be ignored when sending a request.\n\n    Attributes\n    ----------\n    type : str or ~analyticsapi.models.CURRENCY\n        The resource type. Possible values are: Calendar, Currency,\n        CrossCurrency, IrCurve, FxForwardCurve, Analytics, Loan, FxSpot,\n        NonDeliverableForward, Deposit, CrossCurrencySwap or Space.\n    id : str\n        A resource ID is the unique resource identifier for an object on the\n        platform. The resource ID is created on saving. IDs are read-only.\n    location : ~analyticsapi.models.Location\n        Name and space are location attributes, which are automatically set\n        when a resource object is saved for the first time. Unsaved resources\n        have thier name and space set to None. Location attributes are read-\n        only. Required.\n    description : ~analyticsapi.models.Description\n        Description object that contains the resource summary and tags.\n    \n    \"\"\"\n    type: typing.Optional[typing.Literal[<ResourceType.CURRENCY: 'Currency'>]]\n    id: typing.Optional[str]\n    location: _models.Location\n    description: typing.Optional[ForwardRef('_models.Description')]",
        "metadata": {
            "doc": "An object describing the basic properties of a currency.\n\n    Readonly variables are only populated by the server, and will be ignored when sending a request.\n\n    Attributes\n    ----------\n    type : str or ~analyticsapi.models.CURRENCY\n        The resource type. Possible values are: Calendar, Currency,\n        CrossCurrency, IrCurve, FxForwardCurve, Analytics, Loan, FxSpot,\n        NonDeliverableForward, Deposit, CrossCurrencySwap or Space.\n    id : str\n        A resource ID is the unique resource identifier for an object on the\n        platform. The resource ID is created on saving. IDs are read-only.\n    location : ~analyticsapi.models.Location\n        Name and space are location attributes, which are automatically set\n        when a resource object is saved for the first time. Unsaved resources\n        have thier name and space set to None. Location attributes are read-\n        only. Required.\n    description : ~analyticsapi.models.Description\n        Description object that contains the resource summary and tags.\n    \n",
            "annotations": "    type: typing.Optional[typing.Literal[<ResourceType.CURRENCY: 'Currency'>]]\n    id: typing.Optional[str]\n    location: _models.Location\n    description: typing.Optional[ForwardRef('_models.Description')]",
            "signature": "class CurrencyAsCollectionItem:\n    \"\"\"\"\"\"\n    type: typing.Optional[typing.Literal[<ResourceType.CURRENCY: 'Currency'>]]\n    id: typing.Optional[str]\n    location: _models.Location\n    description: typing.Optional[ForwardRef('_models.Description')]"
        },
        "dependencies": {
            "children": [
                "lseg_analytics.reference_data.currencies.CurrencyAsCollectionItem.__init__"
            ],
            "parent": [],
            "use": [
                "lseg_analytics.common.Location",
                "lseg_analytics.common.Description"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "OverloadedMethodChunk",
        "name": "CurrencyAsCollectionItem.__init__",
        "id": "lseg_analytics.reference_data.currencies.CurrencyAsCollectionItem.__init__",
        "params": [
            {
                "name": "args",
                "type": "Any"
            },
            {
                "name": "kwargs",
                "type": "Any"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 1808,
        "content": "class CurrencyAsCollectionItem:\n    @overload\n    def __init__(self, *, location: '_models.Location', description: Optional[ForwardRef('_models.Description')] = None):\n        \"\"\"\"\"\"\n\n    @overload\n    def __init__(self, mapping: Mapping[str, Any]):\n        \"\"\"\n        Parameters\n        ----------\n        mapping : Mapping[str, Any]\n            raw JSON to initialize the model.\n        \n        \"\"\"\n\n    def __init__(self, *args: Any, **kwargs: Any) -> None:\n        \"\"\"\"\"\"",
        "metadata": {
            "doc": "",
            "signature": "__init__(self, *args: Any, **kwargs: Any) -> None:",
            "class": "CurrencyAsCollectionItem"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.currencies.CurrencyAsCollectionItem"
            ],
            "use": [
                "lseg_analytics.common.Location",
                "lseg_analytics.common.Description"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "ClassChunk",
        "name": "CurrencyDefinition",
        "id": "lseg_analytics.reference_data.currencies.CurrencyDefinition",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "spot_lag",
                "type": "int"
            },
            {
                "name": "year_basis",
                "type": "YearBasis",
                "valuelookup": "enum.YearBasis"
            },
            {
                "name": "calendar",
                "type": "CalendarRelatedResource"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 1893,
        "content": "class CurrencyDefinition:\n    \"\"\"The definition of the currency pair.\n\n    Attributes\n    ----------\n    spot_lag : int\n        The number of business days to settlement. The minimum is 0. If not\n        provided, a default spot lag for the given code will be used, typically\n        2 business days. Required.\n    year_basis : str or ~analyticsapi.models.YearBasis\n        The number of days in a year. Required. Known values are: \"360\" and\n        \"365\".\n    calendar : ~analyticsapi.models.CalendarRelatedResource\n        Related calendar. Required.\n    \n    \"\"\"\n    spot_lag: int\n    year_basis: typing.Union[str, ForwardRef('_models.YearBasis')]\n    calendar: _models.CalendarRelatedResource",
        "metadata": {
            "doc": "The definition of the currency pair.\n\n    Attributes\n    ----------\n    spot_lag : int\n        The number of business days to settlement. The minimum is 0. If not\n        provided, a default spot lag for the given code will be used, typically\n        2 business days. Required.\n    year_basis : str or ~analyticsapi.models.YearBasis\n        The number of days in a year. Required. Known values are: \"360\" and\n        \"365\".\n    calendar : ~analyticsapi.models.CalendarRelatedResource\n        Related calendar. Required.\n    \n",
            "annotations": "    spot_lag: int\n    year_basis: typing.Union[str, ForwardRef('_models.YearBasis')]\n    calendar: _models.CalendarRelatedResource",
            "signature": "class CurrencyDefinition:\n    \"\"\"\"\"\"\n    spot_lag: int\n    year_basis: typing.Union[str, ForwardRef('_models.YearBasis')]\n    calendar: _models.CalendarRelatedResource"
        },
        "dependencies": {
            "children": [
                "lseg_analytics.reference_data.currencies.CurrencyDefinition.__init__"
            ],
            "parent": [],
            "use": [
                "lseg_analytics.common.YearBasis",
                "lseg_analytics.reference_data.currencies.CalendarRelatedResource"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "OverloadedMethodChunk",
        "name": "CurrencyDefinition.__init__",
        "id": "lseg_analytics.reference_data.currencies.CurrencyDefinition.__init__",
        "params": [
            {
                "name": "args",
                "type": "Any"
            },
            {
                "name": "kwargs",
                "type": "Any"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 1935,
        "content": "class CurrencyDefinition:\n    @overload\n    def __init__(self, *, spot_lag: int, year_basis: Union[str, ForwardRef('_models.YearBasis')], calendar: '_models.CalendarRelatedResource'):\n        \"\"\"\"\"\"\n\n    @overload\n    def __init__(self, mapping: Mapping[str, Any]):\n        \"\"\"\n        Parameters\n        ----------\n        mapping : Mapping[str, Any]\n            raw JSON to initialize the model.\n        \n        \"\"\"\n\n    def __init__(self, *args: Any, **kwargs: Any) -> None:\n        \"\"\"\"\"\"",
        "metadata": {
            "doc": "",
            "signature": "__init__(self, *args: Any, **kwargs: Any) -> None:",
            "class": "CurrencyDefinition"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.currencies.CurrencyDefinition"
            ],
            "use": [
                "lseg_analytics.common.YearBasis",
                "lseg_analytics.reference_data.currencies.CalendarRelatedResource"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "FunctionChunk",
        "name": "delete",
        "id": "lseg_analytics.reference_data.currencies.delete",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "resource_id",
                "type": "str",
                "valuelookup": "Currency.id"
            },
            {
                "name": "name",
                "type": "str",
                "valuelookup": "Currency.name"
            },
            {
                "name": "space",
                "type": "str",
                "valuelookup": "Currency.space"
            }
        ],
        "file_path": "lseg_analytics/reference_data/currencies/_functions.py",
        "line_number": 88,
        "content": "def delete(*, resource_id: Optional[str] = None, name: Optional[str] = None, space: Optional[str] = None):\n    \"\"\"\n    Delete Currency instance from the server.\n\n    Parameters\n    ----------\n    resource_id : str, optional\n        The Currency resource ID.\n        Required if name is not provided.\n    name : str, optional\n        The Currency name.\n        Required if resource_id is not provided.\n    space : str, optional\n        The space where the Currency is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n    Returns\n    -------\n    ServiceErrorResponse, optional\n        Error response, if applicable, otherwise None\n\n    Examples\n    --------\n\n\n    \n    \"\"\"",
        "metadata": {
            "doc": "\n    Delete Currency instance from the server.\n\n    Parameters\n    ----------\n    resource_id : str, optional\n        The Currency resource ID.\n        Required if name is not provided.\n    name : str, optional\n        The Currency name.\n        Required if resource_id is not provided.\n    space : str, optional\n        The space where the Currency is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n    Returns\n    -------\n    ServiceErrorResponse, optional\n        Error response, if applicable, otherwise None\n\n    Examples\n    --------\n\n\n    \n",
            "signature": "def delete(*, resource_id: Optional[str] = None, name: Optional[str] = None, space: Optional[str] = None):"
        },
        "dependencies": {
            "children": [],
            "parent": [],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "FunctionChunk",
        "name": "load",
        "id": "lseg_analytics.reference_data.currencies.load",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "resource_id",
                "type": "str",
                "valuelookup": "Currency.id"
            },
            {
                "name": "name",
                "type": "str",
                "valuelookup": "Currency.name"
            },
            {
                "name": "space",
                "type": "str",
                "valuelookup": "Currency.space"
            }
        ],
        "file_path": "lseg_analytics/reference_data/currencies/_functions.py",
        "line_number": 36,
        "content": "def load(*, resource_id: Optional[str] = None, name: Optional[str] = None, space: Optional[str] = None):\n    \"\"\"\n    Load a Currency using its name and space\n\n    Parameters\n    ----------\n    resource_id : str, optional\n        The Currency id.\n        Required if name is not provided.\n    name : str, optional\n        The Currency name.\n        Required if resource_id is not provided. The name parameter must be specified when the object is first created. Thereafter it is optional.\n    space : str, optional\n        The space where the Currency is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n    Returns\n    -------\n    Currency\n        The Currency instance.\n\n    Examples\n    --------\n\n\n    \n    \"\"\"",
        "metadata": {
            "doc": "\n    Load a Currency using its name and space\n\n    Parameters\n    ----------\n    resource_id : str, optional\n        The Currency id.\n        Required if name is not provided.\n    name : str, optional\n        The Currency name.\n        Required if resource_id is not provided. The name parameter must be specified when the object is first created. Thereafter it is optional.\n    space : str, optional\n        The space where the Currency is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n    Returns\n    -------\n    Currency\n        The Currency instance.\n\n    Examples\n    --------\n\n\n    \n",
            "signature": "def load(*, resource_id: Optional[str] = None, name: Optional[str] = None, space: Optional[str] = None):"
        },
        "dependencies": {
            "children": [],
            "parent": [],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    },
    {
        "type": "FunctionChunk",
        "name": "search",
        "id": "lseg_analytics.reference_data.currencies.search",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "item_per_page",
                "type": "int"
            },
            {
                "name": "names",
                "type": "List[str]",
                "valuelookup": "Currency.name"
            },
            {
                "name": "spaces",
                "type": "List[str]",
                "valuelookup": "Currency.space"
            },
            {
                "name": "tags",
                "type": "List[str]"
            }
        ],
        "file_path": "lseg_analytics/reference_data/currencies/_functions.py",
        "line_number": 206,
        "content": "def search(*, item_per_page: Optional[int] = None, names: Optional[List[str]] = None, spaces: Optional[List[str]] = None, tags: Optional[List[str]] = None) -> List[CurrencyAsCollectionItem]:\n    \"\"\"\n    Search resources via combination of name, space and tags\n\n    Parameters\n    ----------\n    item_per_page : int, optional\n        The maximum number of items for each search request. The valid range is 1-500. If not provided, 50 will be used.\n    names : List[str], optional\n        The list of resource names to be searched. Exact match is applied for each name.\n    spaces : List[str], optional\n        The space where the resource is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n    tags : List[str], optional\n        The list of resource tags to be searched.\n\n    Returns\n    --------\n    List[CurrencyAsCollectionItem]\n        An object describing the basic properties of a currency.\n\n    Examples\n    --------\n\n\n    \n    \"\"\"",
        "metadata": {
            "doc": "\n    Search resources via combination of name, space and tags\n\n    Parameters\n    ----------\n    item_per_page : int, optional\n        The maximum number of items for each search request. The valid range is 1-500. If not provided, 50 will be used.\n    names : List[str], optional\n        The list of resource names to be searched. Exact match is applied for each name.\n    spaces : List[str], optional\n        The space where the resource is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n    tags : List[str], optional\n        The list of resource tags to be searched.\n\n    Returns\n    --------\n    List[CurrencyAsCollectionItem]\n        An object describing the basic properties of a currency.\n\n    Examples\n    --------\n\n\n    \n",
            "signature": "def search(*, item_per_page: Optional[int] = None, names: Optional[List[str]] = None, spaces: Optional[List[str]] = None, tags: Optional[List[str]] = None) -> List[CurrencyAsCollectionItem]:"
        },
        "dependencies": {
            "children": [],
            "parent": [],
            "use": [
                "lseg_analytics.reference_data.currencies.CurrencyAsCollectionItem"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.currencies",
        "module_version": "1.0.0b9.post2"
    }
]