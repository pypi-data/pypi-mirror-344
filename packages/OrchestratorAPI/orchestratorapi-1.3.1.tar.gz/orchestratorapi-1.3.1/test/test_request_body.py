# coding: utf-8

"""
    OrchestratorAPI

    Orchestrator API

    The version of the OpenAPI document: 1.3.1
    Contact: luke.brown@3adesign.co.uk
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from OrchestratorAPI.models.request_body import RequestBody

class TestRequestBody(unittest.TestCase):
    """RequestBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RequestBody:
        """Test RequestBody
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RequestBody`
        """
        model = RequestBody()
        if include_optional:
            return RequestBody(
                components = [
                    OrchestratorAPI.models.request_body_components_inner.request_body_components_inner(
                        id = '', 
                        label = '', 
                        config = '', 
                        io_handles = OrchestratorAPI.models.request_body_components_inner_io_handles.request_body_components_inner_io_handles(
                            input = [
                                OrchestratorAPI.models.request_body_components_inner_io_handles_input_inner.request_body_components_inner_io_handles_input_inner(
                                    id = '', 
                                    label = '', )
                                ], 
                            output = [
                                OrchestratorAPI.models.request_body_components_inner_io_handles_input_inner.request_body_components_inner_io_handles_input_inner(
                                    id = '', 
                                    label = '', )
                                ], ), 
                        custom_environments = [
                            
                            ], )
                    ]
            )
        else:
            return RequestBody(
        )
        """

    def testRequestBody(self):
        """Test RequestBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
