# coding: utf-8

"""
    Compass API

    #### Welcome to the DeFi API from [Compass Labs](https://www.compasslabs.ai)!  Our API allows you to interact and transact in DeFi with ease.  We help you construct your transactions via a **simple REST API**.   You maintain custody at all times and **sign** all transactions **yourself**.

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from compass.api_client.models.uniswap_buy_exactly_call_data import UniswapBuyExactlyCallData

class TestUniswapBuyExactlyCallData(unittest.TestCase):
    """UniswapBuyExactlyCallData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UniswapBuyExactlyCallData:
        """Test UniswapBuyExactlyCallData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UniswapBuyExactlyCallData`
        """
        model = UniswapBuyExactlyCallData()
        if include_optional:
            return UniswapBuyExactlyCallData(
                token_in = '1INCH',
                token_out = '1INCH',
                fee = '0.01',
                amount_out = None,
                amount_in_maximum = None,
                wrap_eth = True
            )
        else:
            return UniswapBuyExactlyCallData(
                token_in = '1INCH',
                token_out = '1INCH',
                fee = '0.01',
                amount_out = None,
                amount_in_maximum = None,
        )
        """

    def testUniswapBuyExactlyCallData(self):
        """Test UniswapBuyExactlyCallData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
