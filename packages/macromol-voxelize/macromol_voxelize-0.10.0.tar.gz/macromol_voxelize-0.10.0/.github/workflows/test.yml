name: Test

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:

  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - run: pip install ruff
      - run: ruff check --output-format=github .

  test:
    name: Run tests

    strategy:
      matrix:
        python-version: ['3.8', '3.x']
        operating-system:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    runs-on: ${{ matrix.operating-system }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install PyMOL
        if: ${{ matrix.operating-system == 'ubuntu-latest' && matrix.python-version == '3.x' }}
        run: |
          sudo apt-get install \
            git build-essential python3-dev libglew-dev libpng-dev \
            libfreetype6-dev libxml2-dev libmsgpack-dev \
            python3-pyqt5.qtopengl libglm-dev libnetcdf-dev
          REPO=$(pwd)
          cd
          git clone https://github.com/schrodinger/pymol-open-source.git
          git clone https://github.com/rcsb/mmtf-cpp.git
          mv mmtf-cpp/include/mmtf* pymol-open-source/include/
          cd pymol-open-source
          python -m pip install numpy pyqt5 setuptools
          python setup.py build install
          prefix=$(python -c "import sys; print(sys.prefix)")
          echo "MMVOX_PYTEST_PYMOL=$prefix/bin/pymol" >> $GITHUB_ENV
          cd $REPO

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[test,docs,pymol] coverage[toml]

      - name: Run test suite
        run: |
          python -m coverage run -m pytest

      - name: Store coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.operating-system }}-${{ matrix.python-version }}
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error

  coverage:
    name: Report coverage
    runs-on: ubuntu-latest
    needs:
      - test

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
      - run: |
          python -m pip install --upgrade pip
          python -m pip install coverage[toml]
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*

      - name: Combine coverage data
        run: |
          python -m coverage combine coverage-data-*
          python -m coverage xml --debug=pathmap
          python -m coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY

      - name: Upload Codecov report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
