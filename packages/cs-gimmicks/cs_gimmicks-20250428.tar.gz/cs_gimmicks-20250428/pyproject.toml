[project]
name = "cs-gimmicks"
description = "Gimmicks and hacks to make some of my other modules more robust and less demanding of others."
authors = [
    { name = "Cameron Simpson", email = "cs@cskk.id.au" },
]
keywords = [
    "python2",
    "python3",
]
dependencies = []
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 2",
    "Programming Language :: Python :: 3",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]
version = "20250428"

[project.license]
text = "GNU General Public License v3 or later (GPLv3+)"

[project.urls]
"Monorepo Hg/Mercurial Mirror" = "https://hg.sr.ht/~cameron-simpson/css"
"Monorepo Git Mirror" = "https://github.com/cameron-simpson/css"
"MonoRepo Commits" = "https://bitbucket.org/cameron_simpson/css/commits/branch/main"
Source = "https://github.com/cameron-simpson/css/blob/main/lib/python/cs/gimmicks.py"

[project.readme]
text = """
Gimmicks and hacks to make some of my other modules more robust and
less demanding of others.

*Latest release 20250428*:
Define Buffer from collections.abc.Buffer, or from typing.ByteString for older Pythons.

Short summary:
* `open_append`: Ghastly hack to open something for append entirely because some Linux systems do not let you open a character device for append. Tries sane `'a'` and falls back through 'r+' and finally to 'w' only if `path` refers to a character device.

Module contents:
- <a name=\"debug\"></a>`debug(*a, **kw)`: Wrapper for `debug()` which does a deferred import.
- <a name=\"error\"></a>`error(*a, **kw)`: Wrapper for `error()` which does a deferred import.
- <a name=\"exception\"></a>`exception(*a, **kw)`: Wrapper for `exception()` which does a deferred import.
- <a name=\"info\"></a>`info(*a, **kw)`: Wrapper for `info()` which does a deferred import.
- <a name=\"log\"></a>`log(*a, **kw)`: Wrapper for `log()` which does a deferred import.
- <a name=\"open_append\"></a>`open_append(path)`: Ghastly hack to open something for append
  entirely because some Linux systems do not let you open a
  character device for append.
  Tries sane `'a'` and falls back through 'r+' and finally to
  'w' only if `path` refers to a character device.
- <a name=\"r\"></a>`r(obj)`: simplistic versions of cs.lex r() and s()
- <a name=\"trace\"></a>`trace(*a, **kw)`: Wrapper for `info()` which does a deferred import.
- <a name=\"warning\"></a>`warning(*a, **kw)`: Wrapper for `warning()` which does a deferred import.

# Release Log



*Release 20250428*:
Define Buffer from collections.abc.Buffer, or from typing.ByteString for older Pythons.

*Release 20250323*:
Provide direct r() and s() instead of circular cs.lex import.

*Release 20240316*:
Fixed release upload artifacts.

*Release 20230331*:
New open_append to handle idiotic Linux do-not-open-tty-for-append semantics.

*Release 20230212*:
Add gimmicks for cs.lex.r and cs.lex.s.

*Release 20230210*:
DEVNULL default open for \"r+b\" instead of \"wb\".

*Release 20221228*:
Generalise the logging function map, add trace function, bugfix logging call lookup.

*Release 20220429*:
Add DEVNULL symbol, needed before Python 3.3.

*Release 20211208*:
Define TimeoutError.

*Release 20210306*:
Add simple implementations of nullcontext and SimpleNamespace.

*Release 20200418.1*:
Initial release with logging call stubs."""
content-type = "text/markdown"

[build-system]
build-backend = "flit_core.buildapi"
requires = [
    "flit_core >=3.2,<4",
]

[tool.flit.module]
name = "cs.gimmicks"
