[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gitag"
version = "0.0.2"
description = "A CLI tool for automatic git tagging based on commit messages"
readme = "README.md"
requires-python = ">=3.11"
authors = [{ name = "Henry Manke", email = "info@hm-co.de" }]
license = "MIT"

dependencies = []

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Version Control :: Git",
    "Intended Audience :: Developers",
]

[project.urls]
Homepage = "https://github.com/henrymanke/gitag"
Issues = "https://github.com/henrymanke/gitag/issues"

[project.scripts]
gitag = "gitag.main:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-mock",
    "coverage",
    "build",
    "twine",
    "flake8>=5.0.0",
    "flake8-bugbear",
    "flake8-docstrings",
    "black>=23.1",
    "isort>=5.10",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["gitag*"]

# --- Black Configuration ---
[tool.black]
line-length = 120
target-version = ["py311"]
exclude = '''
/(
    \.git
  | __pycache__
  | \.venv
  | env
  | venv
  | ENV
  | env\.bak
  | venv\.bak
  | build
  | dist
  | downloads
  | eggs
  | \.eggs
  | lib
  | lib64
  | parts
  | sdist
  | var
  | wheels
  | share/python-wheels
  | \.egg-info
  | \.installed\.cfg
  | MANIFEST
  | \.manifest
  | \.spec
  | pip-log\.txt
  | pip-delete-this-directory\.txt
  | htmlcov
  | \.tox
  | \.nox
  | \.coverage.*
  | \.cache
  | nosetests\.xml
  | coverage\.xml
  | cover
  | \.hypothesis
  | \.pytest_cache
  | docs/_build
  | profile_default
  | ipython_config\.py
  | \.python-version
  | \.pdm\.toml
  | \.pdm-python
  | \.pdm-build
  | __pypackages__
  | celerybeat-schedule
  | celerybeat\.pid
  | \.ipynb_checkpoints
  | site
  | \.mypy_cache
  | \.dmypy\.json
  | \.pyre
  | \.pytype
  | cython_debug
  | \.idea
  | \.ruff_cache
  | \.pypirc
  | \.DS_Store
)/
'''


# --- isort Configuration ---
[tool.isort]
profile = "black"
line_length = 120
skip = ["env", "venv", ".venv", "build", "dist", "__pycache__"]

# --- Coverage Configuration ---
[tool.coverage.run]
branch = true
source = ["gitag"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 100
