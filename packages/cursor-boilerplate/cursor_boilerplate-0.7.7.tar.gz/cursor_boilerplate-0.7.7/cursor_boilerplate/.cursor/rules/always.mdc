---
description: 
globs: 
alwaysApply: true
---
# 프로젝트 필수 구성 요소

프로젝트 진행을 위한 필수 디렉토리 구조와 파일을 기술합니다.
필수 구성 요소가 없는 경우, 사용자에게 승인 받아 생성합니다.

- 기술 스택 : `docs/tech-stack.md`  
  프로젝트에서 사용되는 기술 스택을 상세히 기술합니다. 예: 언어, 프레임워크, 라이브러리, 인프라 등

- 디렉토리 구조 : `docs/directory-structure.md`  
  프로젝트의 디렉토리 구조와 각 디렉토리의 목적, 포함되는 주요 파일을 기술합니다.

- `README.md`  
  다음 항목들을 포함합니다:  
  - 프로젝트 개요  
  - 주요 기능 요약  
  - 설치 및 실행 방법  
  - 기술 스택 요약  
  - 라이센스 정보  
  - (필요 시) 스크린샷 또는 데모 링크

- `.gitignore`  
  개발 환경 및 기술 스택에 맞춰 Git이 추적하지 않아야 할 파일들을 명시합니다. 

- 작업 계획서 : `tasks/{task-no}.{task-name}.md`  
  새로운 기능 또는 변경 사항을 도입할 때마다 생성되는 작업 명세서입니다. 다음 항목을 포함합니다:  
  - 작업 개요  
  - 요구사항  
  - 구현 방법  
  - 고려사항  
  - 예상 산출물  
  - 관련 링크 및 참고자료  

  작업 파일은 `{task-no}`와 `{task-name}`의 조합으로 구성되며 다음과 같은 규칙을 따릅니다:  
  - `task-no`는 숫자로 구성하며, 자릿수가 3자리 미만일 경우 앞을 0으로 채웁니다 (예: `000`, `001`, `042`)  
  - 최초 작업 계획서가 작성되는 경우 `tasks/000.init.md` 파일로 시작합니다. 
  - 이후 작업은 번호를 증가시키며 `tasks/001.setup-project.md`, `tasks/002.add-auth.md` 등의 형식으로 관리합니다.
  - `{task-name}`은 가급적 영문으로 작성하며, Git 브랜치 전략(`feature/{task-name}`)과의 연계를 고려합니다. 
  - 번호는 중복 없이 일관되게 유지하며, 커밋 또는 작업 단위로 하나의 파일을 생성합니다.

## 구성 요소가 존재하지 않을 경우

- 위에 명시된 디렉토리 및 파일이 존재하지 않는 경우, 최초 작업 계획서를 작성하는 단계에서 생성합니다.  
  예: `docs/`, `tasks/` 디렉토리 등
