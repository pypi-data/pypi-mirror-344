"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .updateshortcutrequest import UpdateShortcutRequest, UpdateShortcutRequestTypedDict
from glean.types import BaseModel
from glean.utils import FieldMetadata, HeaderMetadata, RequestMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class UpdateshortcutRequestRequestTypedDict(TypedDict):
    update_shortcut_request: UpdateShortcutRequestTypedDict
    r"""Shortcut content. Id need to be specified for the shortcut."""
    x_glean_act_as: NotRequired[str]
    r"""Email address of a user on whose behalf the request is intended to be made (should be non-empty only for global tokens)."""
    x_glean_auth_type: NotRequired[str]
    r"""Auth type being used to access the endpoint (should be non-empty only for global tokens)."""


class UpdateshortcutRequestRequest(BaseModel):
    update_shortcut_request: Annotated[
        UpdateShortcutRequest,
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ]
    r"""Shortcut content. Id need to be specified for the shortcut."""

    x_glean_act_as: Annotated[
        Optional[str],
        pydantic.Field(alias="X-Glean-ActAs"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""Email address of a user on whose behalf the request is intended to be made (should be non-empty only for global tokens)."""

    x_glean_auth_type: Annotated[
        Optional[str],
        pydantic.Field(alias="X-Glean-Auth-Type"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""Auth type being used to access the endpoint (should be non-empty only for global tokens)."""
