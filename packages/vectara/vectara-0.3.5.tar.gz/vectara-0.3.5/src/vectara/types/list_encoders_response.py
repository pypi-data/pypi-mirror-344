# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .encoder import Encoder
from .list_metadata import ListMetadata


class ListEncodersResponse(UniversalBaseModel):
    """
    Response containing a list of available encoders for converting text to vector embeddings.
    """

    encoders: typing.Optional[typing.List[Encoder]] = None
    metadata: typing.Optional[ListMetadata] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
