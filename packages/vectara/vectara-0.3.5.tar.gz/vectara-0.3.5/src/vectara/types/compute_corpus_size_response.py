# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ComputeCorpusSizeResponse(UniversalBaseModel):
    """
    Response containing the computed size of a corpus
    """

    used_docs: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of documents in the corpus
    """

    used_parts: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of document parts in the corpus
    """

    used_characters: typing.Optional[int] = pydantic.Field(default=None)
    """
    Total number of characters in the corpus
    """

    used_metadata_characters: typing.Optional[int] = pydantic.Field(default=None)
    """
    Number of metadata characters in the corpus
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
