# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class Reranker(UniversalBaseModel):
    """
    A reranker can be used in query or chat endpoints to reorder the search results.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ID of the reranker.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of the reranker.
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    The description of the reranker.
    """

    enabled: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether the reranker is enabled.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
