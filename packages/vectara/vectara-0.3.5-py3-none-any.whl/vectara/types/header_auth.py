# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class HeaderAuth(UniversalBaseModel):
    """
    Custom header-based authentication
    """

    type: typing.Literal["header"] = "header"
    header: str = pydantic.Field()
    """
    The header name to use (e.g. x-api-key)
    """

    value: str = pydantic.Field()
    """
    The header value to use
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
