from eskmo.base.interface import APIReferable as APIReferable
from eskmo.base.mvtype import ACCOUNT as ACCOUNT, API_CALLBACK_ID as API_CALLBACK_ID, API_ORDER_CALL as API_ORDER_CALL, API_TYPE as API_TYPE, ID as ID, OPENED_PROCESSES as OPENED_PROCESSES, ORDER_ACTION as ORDER_ACTION, ORDER_ACTION_CANCEL as ORDER_ACTION_CANCEL, ORDER_ACTION_CANCEL_ALL as ORDER_ACTION_CANCEL_ALL, ORDER_ACTION_CANCEL_BY_BOOK_NO as ORDER_ACTION_CANCEL_BY_BOOK_NO, ORDER_ACTION_CANCEL_BY_SEQ_NO as ORDER_ACTION_CANCEL_BY_SEQ_NO, ORDER_ACTION_CANCEL_BY_STOCK_NO as ORDER_ACTION_CANCEL_BY_STOCK_NO, ORDER_ACTION_DECREASE_QTY as ORDER_ACTION_DECREASE_QTY, ORDER_ACTION_MODIFY_PRICE as ORDER_ACTION_MODIFY_PRICE, ORDER_ACTION_SEND as ORDER_ACTION_SEND, ORDER_BOOK_NO as ORDER_BOOK_NO, ORDER_CLASS as ORDER_CLASS, ORDER_DICT as ORDER_DICT, ORDER_PRICE as ORDER_PRICE, ORDER_QTY as ORDER_QTY, ORDER_SEQ_NO as ORDER_SEQ_NO, ORDER_STOCK_NO as ORDER_STOCK_NO, PID as PID
from eskmo.const.event import E_LOGIN_SUCCESS as E_LOGIN_SUCCESS, E_QUOTE_BID_ASK as E_QUOTE_BID_ASK, E_QUOTE_PRICE_CHANGED as E_QUOTE_PRICE_CHANGED, E_QUOTE_TICK as E_QUOTE_TICK
from eskmo.const.skcom import ACCOUNTS as ACCOUNTS, API_SKCOM as API_SKCOM, SK_MARKETS_FUTURE as SK_MARKETS_FUTURE, SK_MARKETS_STOCK as SK_MARKETS_STOCK, SK_STRATEGY_SMART_KEY_NO as SK_STRATEGY_SMART_KEY_NO
from eskmo.internal.account import Account as Account, FutureAccount as FutureAccount, StockAccount as StockAccount
from eskmo.internal.listenable import Listenable as Listenable
from eskmo.internal.symbol import Stock as Stock, Stocks as Stocks
from eskmo.skcom.recipe import SKMITOrderRecipe as SKMITOrderRecipe, SKOrderRecipe as SKOrderRecipe
from eskmo.symbol.stock import HANDLER_STOCK_INFO as HANDLER_STOCK_INFO, StockInfoHandler as StockInfoHandler
from eskmo.trading import TradingAPI as TradingAPI
from eskmo.utils.logger import Logger as Logger
from eskmo.utils.misc import TESTING as TESTING, threadStart as threadStart
from eskmo.utils.thread import ThreadHandler as ThreadHandler

class User(TradingAPI, APIReferable, Listenable):
    is_login_success_bind: bool
    def __init__(self, api, pid, broker, connections, **kwargs) -> None: ...
    @property
    def summary(self): ...
    @property
    def id(self): ...
    @property
    def account(self) -> Account: ...
    @property
    def accounts(self): ...
    def set_main_account(self, tag) -> None: ...
    def on_login_success(self, callback) -> None: ...
    def on_quote_bid_ask(self, callback) -> None: ...
    def on_quote_tick(self, callback) -> None: ...
    def on_quote_price_changed(self, callback) -> None: ...
    def update_account_name(self, prev: str, curr: str): ...
    def login(self, userId: str = '', password: str = '') -> None: ...
    def setId(self, id, data) -> None: ...
    def init_accounts(self) -> None: ...
    def create_account(self, market, accountId) -> None: ...
    def get_all_stock_symbols(self): ...
    def get_all_stocks(self): ...
    def get_account_ids(self): ...
    def sendOrder(self, order: SKOrderRecipe, userId: str = None): ...
    def cancelOrderBySeqNo(self, seqNo: str, userId: str = None): ...
    def cancelOrderByBookNo(self, bookNo: str, userId: str = None): ...
    def cancelAll(self, userId: str = None): ...
    def cancelOrderByStockNo(self, stockNo: str, userId: str = None): ...
    def cancelMITOrderBySmartKeyNo(self, smartKeyNo: str, userId: str = None): ...
    def modifyOrderPrice(self, seqNo: str, price: str, userId: str = None): ...
    def decreaseOrderQty(self, seqNo: str, qty: int, userId: str = None): ...
    def apiCallWithAction(self, action: str, updated: dict, userId: str = None): ...
    @property
    def accounts(self) -> dict[str, Account]: ...
    def details(self) -> dict: ...
