from eskmo.const.skcom import *
from _typeshed import Incomplete
from eskmo.base.mvtype import SERIAL_NUMBER as SERIAL_NUMBER, THREAD_ZMQ_PREFIX as THREAD_ZMQ_PREFIX
from eskmo.base.types import RUNNER_NAME as RUNNER_NAME
from eskmo.const.event import E_LOGIN_PROGRESS_NOTIFY as E_LOGIN_PROGRESS_NOTIFY
from eskmo.skcom.function import SKQ_GET_STOCK_BY_INDEX_LONG as SKQ_GET_STOCK_BY_INDEX_LONG, isSkSuccess as isSkSuccess
from eskmo.skcom.runner import SkcomRunner as SkcomRunner
from eskmo.utils.datetime import parseHHMMSS as parseHHMMSS
from eskmo.utils.misc import toADDateStr as toADDateStr, toMinguoDateStr as toMinguoDateStr

class SKOrderLibEvents:
    api: SkcomRunner
    queues: Incomplete
    count: Incomplete
    sendToHandlerQueue: Incomplete
    def __init__(self, api) -> None: ...
    def listenSendToHandler(self) -> None: ...
    def sendToHandler(self, event, data) -> None: ...
    def buildUnrealizedPnLQuery(self, queryDict): ...
    def buildRealizedPnLQuery(self, queryDict): ...
    def buildDayTradePnLQuery(self, queryDict): ...
    def toTSProfitLossGWQuery(self, queryDict): ...
    def startMonitorQueues(self) -> None: ...
    def OnAccount(self, bstrLogInID, bstrAccountData) -> None: ...
    def OnAsyncOrder(self, nThreadID, nCode, bstrMessage) -> None: ...
    def OnRealBalanceReport(self, bstrData) -> None: ...
    def OnOpenInterest(self, bstrData) -> None: ...
    def OnStopLossReport(self, bstrData) -> None: ...
    def OnOverseaFuture(self, bstrData) -> None: ...
    def OnOverseaOption(self, bstrData) -> None: ...
    def OnFutureRights(self, bstrData) -> None: ...
    def OnOverSeaFutureRight(self, bstrData) -> None: ...
    def OnMarginPurchaseAmountLimit(self, bstrData) -> None: ...
    def OnBalanceQuery(self, bstrData) -> None: ...
    def OnTSSmartStrategyReport(self, bstrData) -> None: ...
    def OnAsyncOrderOLID(self, nThreadID, nCode, bstrMessage, bstrOrderLinkedID) -> None: ...
    def OnProfitLossGWReport(self, bstrData) -> None: ...
    def OnOverseaFutureOpenInterest(self, bstrData) -> None: ...
    def OnOverseaFutureOpenInterestGW(self, bstrData) -> None: ...
    def OnTelnetTest(self, bstrData) -> None: ...
    def OnProxyStatus(self, bstrUserId, nCode) -> None: ...
    def OnProxyOrder(self, nStampID, nCode, bstrMessage) -> None: ...

class SKReplyLibEvents:
    api: SkcomRunner
    queues: Incomplete
    count: Incomplete
    onNewDataQueue: Incomplete
    sendToHandlerQueue: Incomplete
    def __init__(self, api) -> None: ...
    def listenSendToHandler(self) -> None: ...
    def sendToHandler(self, event, data) -> None: ...
    def OnConnect(self, bstrUserID, nErrorCode) -> None: ...
    def OnDisconnect(self, bstrUserID, nErrorCode) -> None: ...
    def OnComplete(self, bstrUserID) -> None: ...
    def OnReplyMessage(self, bstrUserID, bstrMessages): ...
    def OnReplyClear(self, bstrUserID, bstrMarket) -> None: ...
    def OnNewData(self, *args) -> None: ...
    def listenOnNewData(self) -> None: ...
    def OnSolaceReplyDisconnect(self, bstrUserID, nErrorCode) -> None: ...
    def OnSolaceReplyConnection(self, bstrUserID, nErrorCode) -> None: ...
    def OnReplyClearMessage(self, bstrUserID) -> None: ...
    def OnStrategyData(self, bstrUserID, bstrData) -> None: ...

class SKQuoteLibEvents:
    api: SkcomRunner
    queues: Incomplete
    count: Incomplete
    sendToHandlerQueue: Incomplete
    def __init__(self, api) -> None: ...
    def listenSendToHandler(self) -> None: ...
    def sendToHandler(self, event, data) -> None: ...
    def setConnectionState(self, nKind) -> None: ...
    def OnConnection(self, nKind, nCode) -> None: ...
    def OnNotifyQuoteLONG(self, sMarketNo, nStockIdx): ...
    def OnNotifyTicksLONG(self, sMarketNo, nStockidx, nPtr, lDate, lTimehms, lTimemillismicros, nBid, nAsk, nClose, nQty, nSimulate) -> None: ...
    def OnNotifyBest5LONG(self, sMarketNo, nStockidx, nBestBid1, nBestBidQty1, nBestBid2, nBestBidQty2, nBestBid3, nBestBidQty3, nBestBid4, nBestBidQty4, nBestBid5, nBestBidQty5, nExtendBid, nExtendBidQty, nBestAsk1, nBestAskQty1, nBestAsk2, nBestAskQty2, nBestAsk3, nBestAskQty3, nBestAsk4, nBestAskQty4, nBestAsk5, nBestAskQty5, nExtendAsk, nExtendAskQty, nSimulate) -> None: ...
    def OnNotifyKLineData(self, bstrStockNo, bstrData) -> None: ...
    def OnNotifyMarketTot(self, sMarketNo, sPtr, nTime, nTotv, nTots, nTotc) -> None: ...
    def OnNotifyMarketHighLow(self, sMarketNo, sPtr, nTime, sUp, sDown, sHigh, sLow, sNoChange) -> None: ...
    def OnNotifyStockList(self, sMarketNo, bstrStockData) -> None: ...
    def OnNotifyMarketBuySell(self, sMarketNo, sPtr, nTime, nBc, nSc, nBs, nSs) -> None: ...
    def OnNotifyServerTime(self, sHour, sMinute, sSecond, nTotal) -> None: ...
    def OnNotifyBoolTunelLONG(self, sMarketNo, nStockIdx, bstrAVG, bstrUBT, bstrLBT) -> None: ...
    def OnNotifyMACDLONG(self, sMarketNo, nStockidx, bstrMACD, bstrDIF, bstrOSC) -> None: ...
    def OnNotifyFutureTradeInfoLONG(self, bstrStockNo, sMarketNo, nStockidx, nBuyTotalCount, nSellTotalCount, nBuyTotalQty, nSellTotalQty, nBuyDealTotalCount, nSellDealTotalCount) -> None: ...
    def OnNotifyStrikePrices(self, bstrOptionData) -> None: ...

class SKCenterLibEvents:
    api: SkcomRunner
    def __init__(self, api) -> None: ...
    def OnTimer(self, nTime) -> None: ...
    def OnShowAgreement(self, bstrData) -> None: ...
