from _typeshed import Incomplete

def createAllTick(tickRule): ...

class BasicTick:
    price: Incomplete
    def __init__(self, price: float = 0.01) -> None: ...
    def __add__(self, o): ...
    def __sub__(self, o): ...
    def __getitem__(self, index): ...
    def getLowerTickPrice(self, price): ...
    def getUpperTickPrice(self, price): ...

class ReitsTick(BasicTick):
    tickRule: Incomplete
    tickPositionMap: Incomplete
    tickList: Incomplete

class CBTick(BasicTick):
    tickRule: Incomplete
    tickPositionMap: Incomplete
    tickList: Incomplete

class WarrantTick(BasicTick):
    tickRule: Incomplete
    tickPositionMap: Incomplete
    tickList: Incomplete

class StockTick(BasicTick):
    tickRule: Incomplete
    tickPositionMap: Incomplete
    tickList: Incomplete

class ETFTick(BasicTick):
    tickRule: Incomplete
    tickPositionMap: Incomplete
    tickList: Incomplete

class CheckHelper:
    tseWarrantSet: Incomplete
    otcWarrantSet: Incomplete
    domesticPutWarrantsEnd: Incomplete
    zero2NineSet: Incomplete
    one2NineSet: Incomplete
    one2NintySet: Incomplete
    D2LSet: Incomplete
    A2CSet: Incomplete
    A2FSet: Incomplete
    L2ZSet: Incomplete
    def commonStock(symbolCode): ...
    def preferredStock(symbolCode): ...
    def warrantCertificate(symbolCode): ...
    def convertiblePreferredStock(symbolCode): ...
    def beneficiaryCertificateClosedEndFund(symbolCode): ...
    def etf(symbolCode): ...
    def etfForeignCurrency(symbolCode): ...
    def leveragedEtf(symbolCode): ...
    def leveragedEtfForeignCurrency(symbolCode): ...
    def inverseEtf(symbolCode): ...
    def inverseEtfForeignCurrency(symbolCode): ...
    def futuresTrustEtf(symbolCode): ...
    def futuresTrustEtfForeignCurrency(symbolCode): ...
    def reitBeneficiarySecurities(symbolCode): ...
    def financialAssetSecuritizationBeneficiarySecurities(symbolCode): ...
    def reitInvestSecurities(symbolCode): ...
    def tseDomesticCallWarrants(symbolCode): ...
    def tseDomesticPutWarrants(symbolCode): ...
    def tseForeignCallWarrants(symbolCode): ...
    def tseForeignPutWarrants(symbolCode): ...
    def tseLowerLimitCallWarrants(symbolCode): ...
    def tseUpperLimitPutWarrants(symbolCode): ...
    def tseExtendableLowerLimitCallWarrants(symbolCode): ...
    def tseExtendableUpperLimitPutWarrants(symbolCode): ...
    def otcDomesticCallWarrants(symbolCode): ...
    def otcDomesticPutWarrants(symbolCode): ...
    def otcForeignCallWarrants(symbolCode): ...
    def otcForeignPutWarrants(symbolCode): ...
    def otcLowerLimitCallWarrants(symbolCode): ...
    def otcUpperLimitPutWarrants(symbolCode): ...
    def otcExtendableLowerLimitCallWarrants(symbolCode): ...
    def otcExtendableUpperLimitPutWarrants(symbolCode): ...
    def taiwanDepositoryReceipts(symbolCode): ...
    def convertibleBondsWithTdr(symbolCode): ...
    def convertibleBondsWithTdrAndWarrants(symbolCode): ...
    def convertibleBondsWithTdrAndWarrantsAfterFulfillment(symbolCode): ...
    def stockWarrantsWithTdr(symbolCode): ...
    def foreignStocks(symbolCode): ...
    def convertibleBonds(symbolCode): ...
    def exchangeableBondsAndExchangeableFinancialBonds(symbolCode): ...
    def stockOptions(symbolCode): ...
    def convertibleBondsWithStockWarrants(symbolCode): ...
    def convertibleBondsWithStockWarrantsAfterFulfillment(symbolCode): ...

class BaseTickCategoryRule:
    ruleMap: Incomplete
    symbolLenCategoryMap: Incomplete
    @staticmethod
    def check(symbolCode): ...
    @staticmethod
    def checkFourCharSymbol(symbolCode): ...
    @staticmethod
    def checkFiveCharSymbol(symbolCode): ...
    @staticmethod
    def checkSixCharSymbol(symbolCode): ...

class TickType:
    categoryTypeMap: Incomplete
    typeTickMap: Incomplete
    def classify(self, category): ...
    @staticmethod
    def getTick(category): ...
