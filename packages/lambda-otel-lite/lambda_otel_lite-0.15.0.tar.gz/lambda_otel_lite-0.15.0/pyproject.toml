[build-system]
requires = ["hatchling>=1.0.0"]
build-backend = "hatchling.build"

# Use Hatch's built-in version hook to generate version.py
[tool.hatch.build.hooks.version]
path = "src/lambda_otel_lite/version.py"

[project]
name = "lambda_otel_lite"
version = "0.15.0"
description = "Lightweight OpenTelemetry instrumentation for AWS Lambda"
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [
    { name = "Alessandro Bologna", email = "alessandro.bologna@gmail.com" }
]
keywords = ["aws", "lambda", "opentelemetry", "otel", "tracing"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
]
dependencies = [
    "opentelemetry-api>=1.32.1",
    "opentelemetry-sdk>=1.32.1",
    "otlp-stdout-span-exporter>=0.15.0",
    "opentelemetry-propagator-aws-xray>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/dev7a/serverless-otlp-forwarder"
Repository = "https://github.com/dev7a/serverless-otlp-forwarder/tree/main/packages/python/lambda-otel-lite"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.14.0",
]

otlp-http = [
    "opentelemetry-exporter-otlp-proto-http>=1.30.0",
]

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

[tool.ruff.lint.isort]
known-first-party = ["lambda_otel_lite"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=lambda_otel_lite --cov-report=term-missing"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = false
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.hatch.build]
only-packages = true
sources = ["src"]

# Ensure artifacts are included in the packages
[tool.hatch.build.targets.wheel]
artifacts = ["src/lambda_otel_lite/version.py"]

[tool.hatch.build.targets.sdist]
artifacts = ["src/lambda_otel_lite/version.py"]