name: Release to PyPI and GitHub Releases

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*" # Match tags like v1.0.0, v1.2.3-alpha etc.

jobs:
  build:
    name: Build distribution packages
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for setuptools_scm to get version from git tags

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox

      - name: Build package
        run: tox -e build

      - name: Store built distributions
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          if-no-files-found: error

  publish:
    name: Publish to PyPI and GitHub Releases
    runs-on: ubuntu-latest
    needs: build
    environment: release
    permissions:
      contents: write # Needed for creating GitHub Releases
      id-token: write # Needed for trusted publishing to PyPI

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download built distributions
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          skip-existing: true

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}

            See the [changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.rst) for details.
          files: dist/*
          fail_on_unmatched_files: true
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
