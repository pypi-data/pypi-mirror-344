[tox]
requires =
    tox>=4.2
env_list =
    default

[testenv]
description = Invoke pytest to run automated tests
extras =
    dev
    testing
pass_env =
    HOME
    SETUPTOOLS_*
set_env =
    TOXINIDIR = {toxinidir}
commands =
    pytest {posargs}

[testenv:lint]
description = Perform static analysis and style checks
skip_install = true
deps =
    pre-commit
pass_env =
    HOMEPATH
    PROGRAMDATA
    SETUPTOOLS_*
commands =
    pre-commit run --all-files {posargs:--show-diff-on-failure}

[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
skip_install = true
deps =
    build: build[virtualenv]
pass_env =
    SETUPTOOLS_*
change_dir = {toxinidir}
commands =
    clean: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    clean: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    build: python -m build {posargs}

[testenv:{docs,doctests,linkcheck}]
description =
    docs: Invoke sphinx-build to build the docs
    doctests: Invoke sphinx-build to run doctests
    linkcheck: Check for broken links in the documentation
deps =
    -r {toxinidir}/docs/requirements.txt
pass_env =
    SETUPTOOLS_*
set_env =
    BUILDDIR = {toxinidir}/docs/_build
    DOCSDIR = {toxinidir}/docs
    docs: BUILD = html
    doctests: BUILD = doctest
    linkcheck: BUILD = linkcheck
commands =
    sphinx-build --color -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}

[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = true
deps =
    twine
pass_env =
    TWINE_PASSWORD
    TWINE_REPOSITORY
    TWINE_REPOSITORY_URL
    TWINE_USERNAME
change_dir = {toxinidir}
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository {env:TWINE_REPOSITORY:testpypi}} dist/*
