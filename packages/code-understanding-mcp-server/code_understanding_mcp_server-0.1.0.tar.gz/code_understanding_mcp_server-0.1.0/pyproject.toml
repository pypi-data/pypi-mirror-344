[build-system]
requires = ["setuptools>=45", "wheel", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "code-understanding-mcp-server"
version = "0.1.0"
description = "MCP server for code understanding and context generation"
readme = "README.md"
authors = [
    {name = "Tim Kitchens", email = "codingthefuturewithai@gmail.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11,<3.13"
dependencies = [
    "mcp>=1.0.0",
    "mcp[cli]>=1.0.0",
    "gitpython>=3.1.0",
    "langchain>=0.3.0",
    "aiohttp>=3.8.0",
    "pyyaml>=6.0",
    "typing-extensions>=4.5.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pathspec>=0.12.1",
    "aider-chat==0.82.1",  # Brings in all needed tree-sitter and parsing dependencies
    "identify>=2.5.35",  # For reliable text file detection
    "lizard>=1.17.24",
    "debugpy>=1.8.1",  # For VS Code debugging support
    "platformdirs>=4.2.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0"
]

[project.scripts]
mcp-code-understanding = "code_understanding.mcp.server.app:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["code_understanding*"]
namespaces = true

[tool.setuptools.package-data]
code_understanding = [
    "config/*.yaml",
    "resources/*",
    "resources/*.txt"
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=code_understanding --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
branch = true
source = ["code_understanding"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
]
