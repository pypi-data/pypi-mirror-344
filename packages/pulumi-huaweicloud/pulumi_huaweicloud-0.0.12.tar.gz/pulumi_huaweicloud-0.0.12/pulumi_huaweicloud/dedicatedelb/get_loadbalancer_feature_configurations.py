# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetLoadbalancerFeatureConfigurationsResult',
    'AwaitableGetLoadbalancerFeatureConfigurationsResult',
    'get_loadbalancer_feature_configurations',
    'get_loadbalancer_feature_configurations_output',
]

@pulumi.output_type
class GetLoadbalancerFeatureConfigurationsResult:
    """
    A collection of values returned by getLoadbalancerFeatureConfigurations.
    """
    def __init__(__self__, features=None, id=None, loadbalancer_id=None, region=None):
        if features and not isinstance(features, list):
            raise TypeError("Expected argument 'features' to be a list")
        pulumi.set(__self__, "features", features)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if loadbalancer_id and not isinstance(loadbalancer_id, str):
            raise TypeError("Expected argument 'loadbalancer_id' to be a str")
        pulumi.set(__self__, "loadbalancer_id", loadbalancer_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @property
    @pulumi.getter
    def features(self) -> Sequence['outputs.GetLoadbalancerFeatureConfigurationsFeatureResult']:
        """
        Specifies the load balancer feature information list.
        """
        return pulumi.get(self, "features")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="loadbalancerId")
    def loadbalancer_id(self) -> str:
        return pulumi.get(self, "loadbalancer_id")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")


class AwaitableGetLoadbalancerFeatureConfigurationsResult(GetLoadbalancerFeatureConfigurationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLoadbalancerFeatureConfigurationsResult(
            features=self.features,
            id=self.id,
            loadbalancer_id=self.loadbalancer_id,
            region=self.region)


def get_loadbalancer_feature_configurations(loadbalancer_id: Optional[str] = None,
                                            region: Optional[str] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLoadbalancerFeatureConfigurationsResult:
    """
    Use this data source to get the list of feature configurations of a load balancer.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    loadbalancer_id = config.require_object("loadbalancerId")
    test = huaweicloud.DedicatedElb.get_loadbalancer_feature_configurations(loadbalancer_id=loadbalancer_id)
    ```


    :param str loadbalancer_id: Specifies the load balancer ID.
    :param str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['loadbalancerId'] = loadbalancer_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:DedicatedElb/getLoadbalancerFeatureConfigurations:getLoadbalancerFeatureConfigurations', __args__, opts=opts, typ=GetLoadbalancerFeatureConfigurationsResult).value

    return AwaitableGetLoadbalancerFeatureConfigurationsResult(
        features=__ret__.features,
        id=__ret__.id,
        loadbalancer_id=__ret__.loadbalancer_id,
        region=__ret__.region)


@_utilities.lift_output_func(get_loadbalancer_feature_configurations)
def get_loadbalancer_feature_configurations_output(loadbalancer_id: Optional[pulumi.Input[str]] = None,
                                                   region: Optional[pulumi.Input[Optional[str]]] = None,
                                                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetLoadbalancerFeatureConfigurationsResult]:
    """
    Use this data source to get the list of feature configurations of a load balancer.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    loadbalancer_id = config.require_object("loadbalancerId")
    test = huaweicloud.DedicatedElb.get_loadbalancer_feature_configurations(loadbalancer_id=loadbalancer_id)
    ```


    :param str loadbalancer_id: Specifies the load balancer ID.
    :param str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    ...
