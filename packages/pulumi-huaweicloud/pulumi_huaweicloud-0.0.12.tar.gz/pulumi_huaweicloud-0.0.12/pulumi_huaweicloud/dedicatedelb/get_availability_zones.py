# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetAvailabilityZonesResult',
    'AwaitableGetAvailabilityZonesResult',
    'get_availability_zones',
    'get_availability_zones_output',
]

@pulumi.output_type
class GetAvailabilityZonesResult:
    """
    A collection of values returned by getAvailabilityZones.
    """
    def __init__(__self__, availability_zones=None, id=None, loadbalancer_id=None, public_border_group=None, region=None):
        if availability_zones and not isinstance(availability_zones, list):
            raise TypeError("Expected argument 'availability_zones' to be a list")
        pulumi.set(__self__, "availability_zones", availability_zones)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if loadbalancer_id and not isinstance(loadbalancer_id, str):
            raise TypeError("Expected argument 'loadbalancer_id' to be a str")
        pulumi.set(__self__, "loadbalancer_id", loadbalancer_id)
        if public_border_group and not isinstance(public_border_group, str):
            raise TypeError("Expected argument 'public_border_group' to be a str")
        pulumi.set(__self__, "public_border_group", public_border_group)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @property
    @pulumi.getter(name="availabilityZones")
    def availability_zones(self) -> Sequence['outputs.GetAvailabilityZonesAvailabilityZoneResult']:
        """
        Indicates the AZs that are available during load balancer creation. For example, in [az1,az2] and
        [az2,az3] sets, you can select **az1** and **az2** or **az2** and **az3**, but cannot select **az1** and **az3**.
        The availability_zones structure is documented below.
        """
        return pulumi.get(self, "availability_zones")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="loadbalancerId")
    def loadbalancer_id(self) -> Optional[str]:
        return pulumi.get(self, "loadbalancer_id")

    @property
    @pulumi.getter(name="publicBorderGroup")
    def public_border_group(self) -> Optional[str]:
        """
        Indicates the public border group, for example, **center**.
        """
        return pulumi.get(self, "public_border_group")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")


class AwaitableGetAvailabilityZonesResult(GetAvailabilityZonesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAvailabilityZonesResult(
            availability_zones=self.availability_zones,
            id=self.id,
            loadbalancer_id=self.loadbalancer_id,
            public_border_group=self.public_border_group,
            region=self.region)


def get_availability_zones(loadbalancer_id: Optional[str] = None,
                           public_border_group: Optional[str] = None,
                           region: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAvailabilityZonesResult:
    """
    Use this data source to get the list of available AZs when create a load balancer.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.DedicatedElb.get_availability_zones()
    ```


    :param str loadbalancer_id: Specifies the load balancer ID.
    :param str public_border_group: Specifies the public border group.
    :param str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['loadbalancerId'] = loadbalancer_id
    __args__['publicBorderGroup'] = public_border_group
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:DedicatedElb/getAvailabilityZones:getAvailabilityZones', __args__, opts=opts, typ=GetAvailabilityZonesResult).value

    return AwaitableGetAvailabilityZonesResult(
        availability_zones=__ret__.availability_zones,
        id=__ret__.id,
        loadbalancer_id=__ret__.loadbalancer_id,
        public_border_group=__ret__.public_border_group,
        region=__ret__.region)


@_utilities.lift_output_func(get_availability_zones)
def get_availability_zones_output(loadbalancer_id: Optional[pulumi.Input[Optional[str]]] = None,
                                  public_border_group: Optional[pulumi.Input[Optional[str]]] = None,
                                  region: Optional[pulumi.Input[Optional[str]]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAvailabilityZonesResult]:
    """
    Use this data source to get the list of available AZs when create a load balancer.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    test = huaweicloud.DedicatedElb.get_availability_zones()
    ```


    :param str loadbalancer_id: Specifies the load balancer ID.
    :param str public_border_group: Specifies the public border group.
    :param str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    ...
