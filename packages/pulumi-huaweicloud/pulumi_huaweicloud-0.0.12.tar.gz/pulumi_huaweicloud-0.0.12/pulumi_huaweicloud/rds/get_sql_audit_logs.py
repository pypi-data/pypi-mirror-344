# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetSqlAuditLogsResult',
    'AwaitableGetSqlAuditLogsResult',
    'get_sql_audit_logs',
    'get_sql_audit_logs_output',
]

@pulumi.output_type
class GetSqlAuditLogsResult:
    """
    A collection of values returned by getSqlAuditLogs.
    """
    def __init__(__self__, audit_logs=None, end_time=None, id=None, instance_id=None, region=None, start_time=None):
        if audit_logs and not isinstance(audit_logs, list):
            raise TypeError("Expected argument 'audit_logs' to be a list")
        pulumi.set(__self__, "audit_logs", audit_logs)
        if end_time and not isinstance(end_time, str):
            raise TypeError("Expected argument 'end_time' to be a str")
        pulumi.set(__self__, "end_time", end_time)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if start_time and not isinstance(start_time, str):
            raise TypeError("Expected argument 'start_time' to be a str")
        pulumi.set(__self__, "start_time", start_time)

    @property
    @pulumi.getter(name="auditLogs")
    def audit_logs(self) -> Sequence['outputs.GetSqlAuditLogsAuditLogResult']:
        """
        Indicates the list of the SQL audit logs.
        """
        return pulumi.get(self, "audit_logs")

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> str:
        """
        Indicates the end time of the audit log.
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> str:
        return pulumi.get(self, "start_time")


class AwaitableGetSqlAuditLogsResult(GetSqlAuditLogsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSqlAuditLogsResult(
            audit_logs=self.audit_logs,
            end_time=self.end_time,
            id=self.id,
            instance_id=self.instance_id,
            region=self.region,
            start_time=self.start_time)


def get_sql_audit_logs(end_time: Optional[str] = None,
                       instance_id: Optional[str] = None,
                       region: Optional[str] = None,
                       start_time: Optional[str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSqlAuditLogsResult:
    """
    Use this data source to get the list of RDS SQL audit logs.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    start_time = config.require_object("startTime")
    end_time = config.require_object("endTime")
    test = huaweicloud.Rds.get_sql_audit_logs(instance_id=instance_id,
        start_time=start_time,
        end_time=end_time)
    ```


    :param str end_time: Specifies the end time in the **yyyy-mm-ddThh:mm:ssZ** format.
           It must be later than the start time. The time span cannot be longer than 30 days.
    :param str instance_id: Specifies the ID of the RDS instance.
    :param str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param str start_time: Specifies the start time in the **yyyy-mm-ddThh:mm:ssZ** format.
    """
    __args__ = dict()
    __args__['endTime'] = end_time
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    __args__['startTime'] = start_time
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Rds/getSqlAuditLogs:getSqlAuditLogs', __args__, opts=opts, typ=GetSqlAuditLogsResult).value

    return AwaitableGetSqlAuditLogsResult(
        audit_logs=__ret__.audit_logs,
        end_time=__ret__.end_time,
        id=__ret__.id,
        instance_id=__ret__.instance_id,
        region=__ret__.region,
        start_time=__ret__.start_time)


@_utilities.lift_output_func(get_sql_audit_logs)
def get_sql_audit_logs_output(end_time: Optional[pulumi.Input[str]] = None,
                              instance_id: Optional[pulumi.Input[str]] = None,
                              region: Optional[pulumi.Input[Optional[str]]] = None,
                              start_time: Optional[pulumi.Input[str]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSqlAuditLogsResult]:
    """
    Use this data source to get the list of RDS SQL audit logs.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    start_time = config.require_object("startTime")
    end_time = config.require_object("endTime")
    test = huaweicloud.Rds.get_sql_audit_logs(instance_id=instance_id,
        start_time=start_time,
        end_time=end_time)
    ```


    :param str end_time: Specifies the end time in the **yyyy-mm-ddThh:mm:ssZ** format.
           It must be later than the start time. The time span cannot be longer than 30 days.
    :param str instance_id: Specifies the ID of the RDS instance.
    :param str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    :param str start_time: Specifies the start time in the **yyyy-mm-ddThh:mm:ssZ** format.
    """
    ...
