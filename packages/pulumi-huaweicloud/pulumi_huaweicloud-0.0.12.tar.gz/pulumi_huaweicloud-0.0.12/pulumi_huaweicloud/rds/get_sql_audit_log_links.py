# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetSqlAuditLogLinksResult',
    'AwaitableGetSqlAuditLogLinksResult',
    'get_sql_audit_log_links',
    'get_sql_audit_log_links_output',
]

@pulumi.output_type
class GetSqlAuditLogLinksResult:
    """
    A collection of values returned by getSqlAuditLogLinks.
    """
    def __init__(__self__, id=None, ids=None, instance_id=None, links=None, region=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ids and not isinstance(ids, list):
            raise TypeError("Expected argument 'ids' to be a list")
        pulumi.set(__self__, "ids", ids)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if links and not isinstance(links, list):
            raise TypeError("Expected argument 'links' to be a list")
        pulumi.set(__self__, "links", links)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def ids(self) -> Sequence[str]:
        return pulumi.get(self, "ids")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter
    def links(self) -> Sequence[str]:
        """
        Indicates the list of audit log download links.
        """
        return pulumi.get(self, "links")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")


class AwaitableGetSqlAuditLogLinksResult(GetSqlAuditLogLinksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSqlAuditLogLinksResult(
            id=self.id,
            ids=self.ids,
            instance_id=self.instance_id,
            links=self.links,
            region=self.region)


def get_sql_audit_log_links(ids: Optional[Sequence[str]] = None,
                            instance_id: Optional[str] = None,
                            region: Optional[str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSqlAuditLogLinksResult:
    """
    Use this data source to get the list of RDS audit log links.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.Rds.get_sql_audit_log_links(instance_id=instance_id,
        ids=[
            "sql_audit_log_id1",
            "sql_audit_log_id2",
        ])
    ```


    :param Sequence[str] ids: Specifies the list of audit log IDs.
           A maximum of 50 audit log IDs are allowed in the list.
    :param str instance_id: Specifies the instance ID.
    :param str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['ids'] = ids
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Rds/getSqlAuditLogLinks:getSqlAuditLogLinks', __args__, opts=opts, typ=GetSqlAuditLogLinksResult).value

    return AwaitableGetSqlAuditLogLinksResult(
        id=__ret__.id,
        ids=__ret__.ids,
        instance_id=__ret__.instance_id,
        links=__ret__.links,
        region=__ret__.region)


@_utilities.lift_output_func(get_sql_audit_log_links)
def get_sql_audit_log_links_output(ids: Optional[pulumi.Input[Sequence[str]]] = None,
                                   instance_id: Optional[pulumi.Input[str]] = None,
                                   region: Optional[pulumi.Input[Optional[str]]] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSqlAuditLogLinksResult]:
    """
    Use this data source to get the list of RDS audit log links.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.Rds.get_sql_audit_log_links(instance_id=instance_id,
        ids=[
            "sql_audit_log_id1",
            "sql_audit_log_id2",
        ])
    ```


    :param Sequence[str] ids: Specifies the list of audit log IDs.
           A maximum of 50 audit log IDs are allowed in the list.
    :param str instance_id: Specifies the instance ID.
    :param str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    ...
