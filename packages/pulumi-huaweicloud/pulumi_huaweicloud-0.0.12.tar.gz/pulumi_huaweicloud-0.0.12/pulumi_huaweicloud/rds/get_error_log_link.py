# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetErrorLogLinkResult',
    'AwaitableGetErrorLogLinkResult',
    'get_error_log_link',
    'get_error_log_link_output',
]

@pulumi.output_type
class GetErrorLogLinkResult:
    """
    A collection of values returned by getErrorLogLink.
    """
    def __init__(__self__, created_at=None, file_link=None, file_name=None, file_size=None, id=None, instance_id=None, region=None):
        if created_at and not isinstance(created_at, int):
            raise TypeError("Expected argument 'created_at' to be a int")
        pulumi.set(__self__, "created_at", created_at)
        if file_link and not isinstance(file_link, str):
            raise TypeError("Expected argument 'file_link' to be a str")
        pulumi.set(__self__, "file_link", file_link)
        if file_name and not isinstance(file_name, str):
            raise TypeError("Expected argument 'file_name' to be a str")
        pulumi.set(__self__, "file_name", file_name)
        if file_size and not isinstance(file_size, str):
            raise TypeError("Expected argument 'file_size' to be a str")
        pulumi.set(__self__, "file_size", file_size)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> int:
        """
        Indicates the creation time.
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter(name="fileLink")
    def file_link(self) -> str:
        """
        Indicates the download link.
        """
        return pulumi.get(self, "file_link")

    @property
    @pulumi.getter(name="fileName")
    def file_name(self) -> str:
        """
        Indicates the name of the file
        """
        return pulumi.get(self, "file_name")

    @property
    @pulumi.getter(name="fileSize")
    def file_size(self) -> str:
        """
        Indicates the file size in KB.
        """
        return pulumi.get(self, "file_size")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")


class AwaitableGetErrorLogLinkResult(GetErrorLogLinkResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetErrorLogLinkResult(
            created_at=self.created_at,
            file_link=self.file_link,
            file_name=self.file_name,
            file_size=self.file_size,
            id=self.id,
            instance_id=self.instance_id,
            region=self.region)


def get_error_log_link(instance_id: Optional[str] = None,
                       region: Optional[str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetErrorLogLinkResult:
    """
    Use this data source to get the RDS error log link.


    :param str instance_id: Specifies the ID of the RDS instance.
    :param str region: Specifies the region in which to create the resource. If omitted, the provider-level
           region will be used.
    """
    __args__ = dict()
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Rds/getErrorLogLink:getErrorLogLink', __args__, opts=opts, typ=GetErrorLogLinkResult).value

    return AwaitableGetErrorLogLinkResult(
        created_at=__ret__.created_at,
        file_link=__ret__.file_link,
        file_name=__ret__.file_name,
        file_size=__ret__.file_size,
        id=__ret__.id,
        instance_id=__ret__.instance_id,
        region=__ret__.region)


@_utilities.lift_output_func(get_error_log_link)
def get_error_log_link_output(instance_id: Optional[pulumi.Input[str]] = None,
                              region: Optional[pulumi.Input[Optional[str]]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetErrorLogLinkResult]:
    """
    Use this data source to get the RDS error log link.


    :param str instance_id: Specifies the ID of the RDS instance.
    :param str region: Specifies the region in which to create the resource. If omitted, the provider-level
           region will be used.
    """
    ...
