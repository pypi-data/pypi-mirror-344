# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetSqlserverCollationsResult',
    'AwaitableGetSqlserverCollationsResult',
    'get_sqlserver_collations',
    'get_sqlserver_collations_output',
]

@pulumi.output_type
class GetSqlserverCollationsResult:
    """
    A collection of values returned by getSqlserverCollations.
    """
    def __init__(__self__, char_sets=None, id=None, region=None):
        if char_sets and not isinstance(char_sets, list):
            raise TypeError("Expected argument 'char_sets' to be a list")
        pulumi.set(__self__, "char_sets", char_sets)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @property
    @pulumi.getter(name="charSets")
    def char_sets(self) -> Sequence[str]:
        """
        Indicates the character set information list.
        """
        return pulumi.get(self, "char_sets")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")


class AwaitableGetSqlserverCollationsResult(GetSqlserverCollationsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSqlserverCollationsResult(
            char_sets=self.char_sets,
            id=self.id,
            region=self.region)


def get_sqlserver_collations(region: Optional[str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSqlserverCollationsResult:
    """
    Use this data source to get the list of RDS SQLServer collations.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    collations = huaweicloud.Rds.get_sqlserver_collations()
    ```


    :param str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Rds/getSqlserverCollations:getSqlserverCollations', __args__, opts=opts, typ=GetSqlserverCollationsResult).value

    return AwaitableGetSqlserverCollationsResult(
        char_sets=__ret__.char_sets,
        id=__ret__.id,
        region=__ret__.region)


@_utilities.lift_output_func(get_sqlserver_collations)
def get_sqlserver_collations_output(region: Optional[pulumi.Input[Optional[str]]] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSqlserverCollationsResult]:
    """
    Use this data source to get the list of RDS SQLServer collations.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    collations = huaweicloud.Rds.get_sqlserver_collations()
    ```


    :param str region: Specifies the region in which to query the data source.
           If omitted, the provider-level region will be used.
    """
    ...
