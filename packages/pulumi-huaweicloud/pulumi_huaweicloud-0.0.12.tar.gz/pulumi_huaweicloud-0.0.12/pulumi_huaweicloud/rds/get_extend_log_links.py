# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetExtendLogLinksResult',
    'AwaitableGetExtendLogLinksResult',
    'get_extend_log_links',
    'get_extend_log_links_output',
]

@pulumi.output_type
class GetExtendLogLinksResult:
    """
    A collection of values returned by getExtendLogLinks.
    """
    def __init__(__self__, file_name=None, id=None, instance_id=None, links=None, region=None):
        if file_name and not isinstance(file_name, str):
            raise TypeError("Expected argument 'file_name' to be a str")
        pulumi.set(__self__, "file_name", file_name)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if links and not isinstance(links, list):
            raise TypeError("Expected argument 'links' to be a list")
        pulumi.set(__self__, "links", links)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)

    @property
    @pulumi.getter(name="fileName")
    def file_name(self) -> str:
        """
        Indicates the name of the file.
        """
        return pulumi.get(self, "file_name")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter
    def links(self) -> Sequence['outputs.GetExtendLogLinksLinkResult']:
        """
        Indicates the list of extend log links.
        """
        return pulumi.get(self, "links")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")


class AwaitableGetExtendLogLinksResult(GetExtendLogLinksResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetExtendLogLinksResult(
            file_name=self.file_name,
            id=self.id,
            instance_id=self.instance_id,
            links=self.links,
            region=self.region)


def get_extend_log_links(file_name: Optional[str] = None,
                         instance_id: Optional[str] = None,
                         region: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetExtendLogLinksResult:
    """
    Use this data source to get the list of RDS extend log links.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.Rds.get_extend_log_links(instance_id=instance_id)
    ```


    :param str file_name: Specifies the name of the file to be downloaded.
    :param str instance_id: Specifies the ID of the RDS instance.
    :param str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    __args__ = dict()
    __args__['fileName'] = file_name
    __args__['instanceId'] = instance_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('huaweicloud:Rds/getExtendLogLinks:getExtendLogLinks', __args__, opts=opts, typ=GetExtendLogLinksResult).value

    return AwaitableGetExtendLogLinksResult(
        file_name=__ret__.file_name,
        id=__ret__.id,
        instance_id=__ret__.instance_id,
        links=__ret__.links,
        region=__ret__.region)


@_utilities.lift_output_func(get_extend_log_links)
def get_extend_log_links_output(file_name: Optional[pulumi.Input[str]] = None,
                                instance_id: Optional[pulumi.Input[str]] = None,
                                region: Optional[pulumi.Input[Optional[str]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetExtendLogLinksResult]:
    """
    Use this data source to get the list of RDS extend log links.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_huaweicloud as huaweicloud

    config = pulumi.Config()
    instance_id = config.require_object("instanceId")
    test = huaweicloud.Rds.get_extend_log_links(instance_id=instance_id)
    ```


    :param str file_name: Specifies the name of the file to be downloaded.
    :param str instance_id: Specifies the ID of the RDS instance.
    :param str region: Specifies the region in which to query the resource.
           If omitted, the provider-level region will be used.
    """
    ...
