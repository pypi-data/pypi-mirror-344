# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['SubNetworkInterfaceArgs', 'SubNetworkInterface']

@pulumi.input_type
class SubNetworkInterfaceArgs:
    def __init__(__self__, *,
                 parent_id: pulumi.Input[str],
                 subnet_id: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 ip_address: Optional[pulumi.Input[str]] = None,
                 ipv6_enable: Optional[pulumi.Input[bool]] = None,
                 ipv6_ip_address: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 vlan_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a SubNetworkInterface resource.
        :param pulumi.Input[str] parent_id: Specifies the ID of the elastic network interface to which the
               supplementary network interface belongs.
               Changing this creates a new resource.
        :param pulumi.Input[str] subnet_id: Specifies the ID of the subnet to which the supplementary network
               interface belongs.
               Changing this creates a new resource.
        :param pulumi.Input[str] description: Specifies the description of the supplementary network interface.
        :param pulumi.Input[str] ip_address: Specifies the private IPv4 address of the supplementary network interface.
        :param pulumi.Input[bool] ipv6_enable: Specifies the IPv6 address is it enabled of the supplementary network interface.
        :param pulumi.Input[str] ipv6_ip_address: Specifies the IPv6 address of the supplementary network interface.
        :param pulumi.Input[str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: Specifies the list of the security groups IDs to which the supplementary
               network interface belongs.
        :param pulumi.Input[str] vlan_id: Specifies the vlan ID of the supplementary network interface.
               The valid value is range from `1` t0 `4094`.
        """
        pulumi.set(__self__, "parent_id", parent_id)
        pulumi.set(__self__, "subnet_id", subnet_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if ipv6_enable is not None:
            pulumi.set(__self__, "ipv6_enable", ipv6_enable)
        if ipv6_ip_address is not None:
            pulumi.set(__self__, "ipv6_ip_address", ipv6_ip_address)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if security_group_ids is not None:
            pulumi.set(__self__, "security_group_ids", security_group_ids)
        if vlan_id is not None:
            pulumi.set(__self__, "vlan_id", vlan_id)

    @property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> pulumi.Input[str]:
        """
        Specifies the ID of the elastic network interface to which the
        supplementary network interface belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "parent_id")

    @parent_id.setter
    def parent_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "parent_id", value)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Input[str]:
        """
        Specifies the ID of the subnet to which the supplementary network
        interface belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the description of the supplementary network interface.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the private IPv4 address of the supplementary network interface.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_address", value)

    @property
    @pulumi.getter(name="ipv6Enable")
    def ipv6_enable(self) -> Optional[pulumi.Input[bool]]:
        """
        Specifies the IPv6 address is it enabled of the supplementary network interface.
        """
        return pulumi.get(self, "ipv6_enable")

    @ipv6_enable.setter
    def ipv6_enable(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ipv6_enable", value)

    @property
    @pulumi.getter(name="ipv6IpAddress")
    def ipv6_ip_address(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the IPv6 address of the supplementary network interface.
        """
        return pulumi.get(self, "ipv6_ip_address")

    @ipv6_ip_address.setter
    def ipv6_ip_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipv6_ip_address", value)

    @property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Specifies the list of the security groups IDs to which the supplementary
        network interface belongs.
        """
        return pulumi.get(self, "security_group_ids")

    @security_group_ids.setter
    def security_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "security_group_ids", value)

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vlan ID of the supplementary network interface.
        The valid value is range from `1` t0 `4094`.
        """
        return pulumi.get(self, "vlan_id")

    @vlan_id.setter
    def vlan_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vlan_id", value)


@pulumi.input_type
class _SubNetworkInterfaceState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 ip_address: Optional[pulumi.Input[str]] = None,
                 ipv6_enable: Optional[pulumi.Input[bool]] = None,
                 ipv6_ip_address: Optional[pulumi.Input[str]] = None,
                 mac_address: Optional[pulumi.Input[str]] = None,
                 parent_device_id: Optional[pulumi.Input[str]] = None,
                 parent_id: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 vlan_id: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering SubNetworkInterface resources.
        :param pulumi.Input[str] created_at: The create time of the supplementary network interface.
        :param pulumi.Input[str] description: Specifies the description of the supplementary network interface.
        :param pulumi.Input[str] ip_address: Specifies the private IPv4 address of the supplementary network interface.
        :param pulumi.Input[bool] ipv6_enable: Specifies the IPv6 address is it enabled of the supplementary network interface.
        :param pulumi.Input[str] ipv6_ip_address: Specifies the IPv6 address of the supplementary network interface.
        :param pulumi.Input[str] mac_address: The MAC address of the supplementary network interface.
        :param pulumi.Input[str] parent_device_id: The ID of the ECS to which the supplementary network interface belongs.
        :param pulumi.Input[str] parent_id: Specifies the ID of the elastic network interface to which the
               supplementary network interface belongs.
               Changing this creates a new resource.
        :param pulumi.Input[str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: Specifies the list of the security groups IDs to which the supplementary
               network interface belongs.
        :param pulumi.Input[str] status: The status of the supplementary network interface.
        :param pulumi.Input[str] subnet_id: Specifies the ID of the subnet to which the supplementary network
               interface belongs.
               Changing this creates a new resource.
        :param pulumi.Input[str] vlan_id: Specifies the vlan ID of the supplementary network interface.
               The valid value is range from `1` t0 `4094`.
        :param pulumi.Input[str] vpc_id: The ID of the VPC to which the supplementary network interface belongs.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if ipv6_enable is not None:
            pulumi.set(__self__, "ipv6_enable", ipv6_enable)
        if ipv6_ip_address is not None:
            pulumi.set(__self__, "ipv6_ip_address", ipv6_ip_address)
        if mac_address is not None:
            pulumi.set(__self__, "mac_address", mac_address)
        if parent_device_id is not None:
            pulumi.set(__self__, "parent_device_id", parent_device_id)
        if parent_id is not None:
            pulumi.set(__self__, "parent_id", parent_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if security_group_ids is not None:
            pulumi.set(__self__, "security_group_ids", security_group_ids)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if vlan_id is not None:
            pulumi.set(__self__, "vlan_id", vlan_id)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[str]]:
        """
        The create time of the supplementary network interface.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created_at", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the description of the supplementary network interface.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the private IPv4 address of the supplementary network interface.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_address", value)

    @property
    @pulumi.getter(name="ipv6Enable")
    def ipv6_enable(self) -> Optional[pulumi.Input[bool]]:
        """
        Specifies the IPv6 address is it enabled of the supplementary network interface.
        """
        return pulumi.get(self, "ipv6_enable")

    @ipv6_enable.setter
    def ipv6_enable(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ipv6_enable", value)

    @property
    @pulumi.getter(name="ipv6IpAddress")
    def ipv6_ip_address(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the IPv6 address of the supplementary network interface.
        """
        return pulumi.get(self, "ipv6_ip_address")

    @ipv6_ip_address.setter
    def ipv6_ip_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipv6_ip_address", value)

    @property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> Optional[pulumi.Input[str]]:
        """
        The MAC address of the supplementary network interface.
        """
        return pulumi.get(self, "mac_address")

    @mac_address.setter
    def mac_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mac_address", value)

    @property
    @pulumi.getter(name="parentDeviceId")
    def parent_device_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the ECS to which the supplementary network interface belongs.
        """
        return pulumi.get(self, "parent_device_id")

    @parent_device_id.setter
    def parent_device_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "parent_device_id", value)

    @property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the ID of the elastic network interface to which the
        supplementary network interface belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "parent_id")

    @parent_id.setter
    def parent_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "parent_id", value)

    @property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Specifies the list of the security groups IDs to which the supplementary
        network interface belongs.
        """
        return pulumi.get(self, "security_group_ids")

    @security_group_ids.setter
    def security_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "security_group_ids", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the supplementary network interface.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the ID of the subnet to which the supplementary network
        interface belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the vlan ID of the supplementary network interface.
        The valid value is range from `1` t0 `4094`.
        """
        return pulumi.get(self, "vlan_id")

    @vlan_id.setter
    def vlan_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vlan_id", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the VPC to which the supplementary network interface belongs.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_id", value)


class SubNetworkInterface(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 ip_address: Optional[pulumi.Input[str]] = None,
                 ipv6_enable: Optional[pulumi.Input[bool]] = None,
                 ipv6_ip_address: Optional[pulumi.Input[str]] = None,
                 parent_id: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 vlan_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Manages a supplementary network interface resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        subnet_id = config.require_object("subnetId")
        parent_id = config.require_object("parentId")
        vlan_id = config.require_object("vlanId")
        test = huaweicloud.vpc.SubNetworkInterface("test",
            subnet_id=subnet_id,
            parent_id=parent_id,
            vlan_id=vlan_id,
            description="create a supplementary network interface")
        ```

        ## Import

        The supplementary network interface can be imported using the `id`, e.g. bash

        ```sh
         $ pulumi import huaweicloud:Vpc/subNetworkInterface:SubNetworkInterface test <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: Specifies the description of the supplementary network interface.
        :param pulumi.Input[str] ip_address: Specifies the private IPv4 address of the supplementary network interface.
        :param pulumi.Input[bool] ipv6_enable: Specifies the IPv6 address is it enabled of the supplementary network interface.
        :param pulumi.Input[str] ipv6_ip_address: Specifies the IPv6 address of the supplementary network interface.
        :param pulumi.Input[str] parent_id: Specifies the ID of the elastic network interface to which the
               supplementary network interface belongs.
               Changing this creates a new resource.
        :param pulumi.Input[str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: Specifies the list of the security groups IDs to which the supplementary
               network interface belongs.
        :param pulumi.Input[str] subnet_id: Specifies the ID of the subnet to which the supplementary network
               interface belongs.
               Changing this creates a new resource.
        :param pulumi.Input[str] vlan_id: Specifies the vlan ID of the supplementary network interface.
               The valid value is range from `1` t0 `4094`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SubNetworkInterfaceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a supplementary network interface resource within HuaweiCloud.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        subnet_id = config.require_object("subnetId")
        parent_id = config.require_object("parentId")
        vlan_id = config.require_object("vlanId")
        test = huaweicloud.vpc.SubNetworkInterface("test",
            subnet_id=subnet_id,
            parent_id=parent_id,
            vlan_id=vlan_id,
            description="create a supplementary network interface")
        ```

        ## Import

        The supplementary network interface can be imported using the `id`, e.g. bash

        ```sh
         $ pulumi import huaweicloud:Vpc/subNetworkInterface:SubNetworkInterface test <id>
        ```

        :param str resource_name: The name of the resource.
        :param SubNetworkInterfaceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SubNetworkInterfaceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 ip_address: Optional[pulumi.Input[str]] = None,
                 ipv6_enable: Optional[pulumi.Input[bool]] = None,
                 ipv6_ip_address: Optional[pulumi.Input[str]] = None,
                 parent_id: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 vlan_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SubNetworkInterfaceArgs.__new__(SubNetworkInterfaceArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["ip_address"] = ip_address
            __props__.__dict__["ipv6_enable"] = ipv6_enable
            __props__.__dict__["ipv6_ip_address"] = ipv6_ip_address
            if parent_id is None and not opts.urn:
                raise TypeError("Missing required property 'parent_id'")
            __props__.__dict__["parent_id"] = parent_id
            __props__.__dict__["region"] = region
            __props__.__dict__["security_group_ids"] = security_group_ids
            if subnet_id is None and not opts.urn:
                raise TypeError("Missing required property 'subnet_id'")
            __props__.__dict__["subnet_id"] = subnet_id
            __props__.__dict__["vlan_id"] = vlan_id
            __props__.__dict__["created_at"] = None
            __props__.__dict__["mac_address"] = None
            __props__.__dict__["parent_device_id"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["vpc_id"] = None
        super(SubNetworkInterface, __self__).__init__(
            'huaweicloud:Vpc/subNetworkInterface:SubNetworkInterface',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            ip_address: Optional[pulumi.Input[str]] = None,
            ipv6_enable: Optional[pulumi.Input[bool]] = None,
            ipv6_ip_address: Optional[pulumi.Input[str]] = None,
            mac_address: Optional[pulumi.Input[str]] = None,
            parent_device_id: Optional[pulumi.Input[str]] = None,
            parent_id: Optional[pulumi.Input[str]] = None,
            region: Optional[pulumi.Input[str]] = None,
            security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            status: Optional[pulumi.Input[str]] = None,
            subnet_id: Optional[pulumi.Input[str]] = None,
            vlan_id: Optional[pulumi.Input[str]] = None,
            vpc_id: Optional[pulumi.Input[str]] = None) -> 'SubNetworkInterface':
        """
        Get an existing SubNetworkInterface resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] created_at: The create time of the supplementary network interface.
        :param pulumi.Input[str] description: Specifies the description of the supplementary network interface.
        :param pulumi.Input[str] ip_address: Specifies the private IPv4 address of the supplementary network interface.
        :param pulumi.Input[bool] ipv6_enable: Specifies the IPv6 address is it enabled of the supplementary network interface.
        :param pulumi.Input[str] ipv6_ip_address: Specifies the IPv6 address of the supplementary network interface.
        :param pulumi.Input[str] mac_address: The MAC address of the supplementary network interface.
        :param pulumi.Input[str] parent_device_id: The ID of the ECS to which the supplementary network interface belongs.
        :param pulumi.Input[str] parent_id: Specifies the ID of the elastic network interface to which the
               supplementary network interface belongs.
               Changing this creates a new resource.
        :param pulumi.Input[str] region: Specifies the region in which to create the resource.
               If omitted, the provider-level region will be used.
               Changing this creates a new resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] security_group_ids: Specifies the list of the security groups IDs to which the supplementary
               network interface belongs.
        :param pulumi.Input[str] status: The status of the supplementary network interface.
        :param pulumi.Input[str] subnet_id: Specifies the ID of the subnet to which the supplementary network
               interface belongs.
               Changing this creates a new resource.
        :param pulumi.Input[str] vlan_id: Specifies the vlan ID of the supplementary network interface.
               The valid value is range from `1` t0 `4094`.
        :param pulumi.Input[str] vpc_id: The ID of the VPC to which the supplementary network interface belongs.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SubNetworkInterfaceState.__new__(_SubNetworkInterfaceState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["ip_address"] = ip_address
        __props__.__dict__["ipv6_enable"] = ipv6_enable
        __props__.__dict__["ipv6_ip_address"] = ipv6_ip_address
        __props__.__dict__["mac_address"] = mac_address
        __props__.__dict__["parent_device_id"] = parent_device_id
        __props__.__dict__["parent_id"] = parent_id
        __props__.__dict__["region"] = region
        __props__.__dict__["security_group_ids"] = security_group_ids
        __props__.__dict__["status"] = status
        __props__.__dict__["subnet_id"] = subnet_id
        __props__.__dict__["vlan_id"] = vlan_id
        __props__.__dict__["vpc_id"] = vpc_id
        return SubNetworkInterface(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[str]:
        """
        The create time of the supplementary network interface.
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the description of the supplementary network interface.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> pulumi.Output[str]:
        """
        Specifies the private IPv4 address of the supplementary network interface.
        """
        return pulumi.get(self, "ip_address")

    @property
    @pulumi.getter(name="ipv6Enable")
    def ipv6_enable(self) -> pulumi.Output[Optional[bool]]:
        """
        Specifies the IPv6 address is it enabled of the supplementary network interface.
        """
        return pulumi.get(self, "ipv6_enable")

    @property
    @pulumi.getter(name="ipv6IpAddress")
    def ipv6_ip_address(self) -> pulumi.Output[str]:
        """
        Specifies the IPv6 address of the supplementary network interface.
        """
        return pulumi.get(self, "ipv6_ip_address")

    @property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> pulumi.Output[str]:
        """
        The MAC address of the supplementary network interface.
        """
        return pulumi.get(self, "mac_address")

    @property
    @pulumi.getter(name="parentDeviceId")
    def parent_device_id(self) -> pulumi.Output[str]:
        """
        The ID of the ECS to which the supplementary network interface belongs.
        """
        return pulumi.get(self, "parent_device_id")

    @property
    @pulumi.getter(name="parentId")
    def parent_id(self) -> pulumi.Output[str]:
        """
        Specifies the ID of the elastic network interface to which the
        supplementary network interface belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "parent_id")

    @property
    @pulumi.getter
    def region(self) -> pulumi.Output[str]:
        """
        Specifies the region in which to create the resource.
        If omitted, the provider-level region will be used.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> pulumi.Output[Sequence[str]]:
        """
        Specifies the list of the security groups IDs to which the supplementary
        network interface belongs.
        """
        return pulumi.get(self, "security_group_ids")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        The status of the supplementary network interface.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Output[str]:
        """
        Specifies the ID of the subnet to which the supplementary network
        interface belongs.
        Changing this creates a new resource.
        """
        return pulumi.get(self, "subnet_id")

    @property
    @pulumi.getter(name="vlanId")
    def vlan_id(self) -> pulumi.Output[str]:
        """
        Specifies the vlan ID of the supplementary network interface.
        The valid value is range from `1` t0 `4094`.
        """
        return pulumi.get(self, "vlan_id")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[str]:
        """
        The ID of the VPC to which the supplementary network interface belongs.
        """
        return pulumi.get(self, "vpc_id")

