# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['RuleBlacklistArgs', 'RuleBlacklist']

@pulumi.input_type
class RuleBlacklistArgs:
    def __init__(__self__, *,
                 policy_id: pulumi.Input[str],
                 action: Optional[pulumi.Input[int]] = None,
                 address_group_id: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[str]] = None,
                 ip_address: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a RuleBlacklist resource.
        :param pulumi.Input[str] policy_id: Specifies the WAF policy ID. Changing this parameter will create a new resource.
        :param pulumi.Input[int] action: Specifies the protective action. Defaults to `0`. The value can be:
               + `0`: block the request.
               + `1`: allow the request.
               + `2`: log the request only.
        :param pulumi.Input[str] address_group_id: Specifies the WAF address group ID.
               This parameter is required when `ip_address` is not specified. The parameter `address_group_id` and `ip_address`
               can not be configured together.
        :param pulumi.Input[str] description: Specifies the rule description of the WAF address group.
        :param pulumi.Input[str] enterprise_project_id: Specifies the enterprise project ID of WAF rule blacklist
               and whitelist. For enterprise users, if omitted, default enterprise project will be used.
               Changing this parameter will create a new resource.
        :param pulumi.Input[str] ip_address: Specifies the IP address or range. For example, **192.168.0.125** or **192.168.0.0/24**.
               This parameter is required when `address_group_id` is not specified. The parameter `address_group_id` and `ip_address`
               can not be configured together.
        :param pulumi.Input[str] name: Specifies the rule name. The value can contain a maximum of `64` characters.
               Only letters, digits, hyphens (-), underscores (_) and periods (.) are allowed.
        :param pulumi.Input[str] region: Specifies the region in which to create the WAF blacklist and whitelist rule resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[int] status: Specifies the status of WAF blacklist and whitelist rule.
               Valid values are as follows:
               + **0**: Disabled.
               + **1**: Enabled.
        """
        pulumi.set(__self__, "policy_id", policy_id)
        if action is not None:
            pulumi.set(__self__, "action", action)
        if address_group_id is not None:
            pulumi.set(__self__, "address_group_id", address_group_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> pulumi.Input[str]:
        """
        Specifies the WAF policy ID. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "policy_id")

    @policy_id.setter
    def policy_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "policy_id", value)

    @property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[int]]:
        """
        Specifies the protective action. Defaults to `0`. The value can be:
        + `0`: block the request.
        + `1`: allow the request.
        + `2`: log the request only.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "action", value)

    @property
    @pulumi.getter(name="addressGroupId")
    def address_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the WAF address group ID.
        This parameter is required when `ip_address` is not specified. The parameter `address_group_id` and `ip_address`
        can not be configured together.
        """
        return pulumi.get(self, "address_group_id")

    @address_group_id.setter
    def address_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "address_group_id", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the rule description of the WAF address group.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the enterprise project ID of WAF rule blacklist
        and whitelist. For enterprise users, if omitted, default enterprise project will be used.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the IP address or range. For example, **192.168.0.125** or **192.168.0.0/24**.
        This parameter is required when `address_group_id` is not specified. The parameter `address_group_id` and `ip_address`
        can not be configured together.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_address", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the rule name. The value can contain a maximum of `64` characters.
        Only letters, digits, hyphens (-), underscores (_) and periods (.) are allowed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the region in which to create the WAF blacklist and whitelist rule resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[int]]:
        """
        Specifies the status of WAF blacklist and whitelist rule.
        Valid values are as follows:
        + **0**: Disabled.
        + **1**: Enabled.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "status", value)


@pulumi.input_type
class _RuleBlacklistState:
    def __init__(__self__, *,
                 action: Optional[pulumi.Input[int]] = None,
                 address_group_id: Optional[pulumi.Input[str]] = None,
                 address_group_name: Optional[pulumi.Input[str]] = None,
                 address_group_size: Optional[pulumi.Input[int]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[str]] = None,
                 ip_address: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 policy_id: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering RuleBlacklist resources.
        :param pulumi.Input[int] action: Specifies the protective action. Defaults to `0`. The value can be:
               + `0`: block the request.
               + `1`: allow the request.
               + `2`: log the request only.
        :param pulumi.Input[str] address_group_id: Specifies the WAF address group ID.
               This parameter is required when `ip_address` is not specified. The parameter `address_group_id` and `ip_address`
               can not be configured together.
        :param pulumi.Input[str] address_group_name: The name of the IP address group.
        :param pulumi.Input[int] address_group_size: The number of IP addresses or IP address ranges in the IP address group.
        :param pulumi.Input[str] description: Specifies the rule description of the WAF address group.
        :param pulumi.Input[str] enterprise_project_id: Specifies the enterprise project ID of WAF rule blacklist
               and whitelist. For enterprise users, if omitted, default enterprise project will be used.
               Changing this parameter will create a new resource.
        :param pulumi.Input[str] ip_address: Specifies the IP address or range. For example, **192.168.0.125** or **192.168.0.0/24**.
               This parameter is required when `address_group_id` is not specified. The parameter `address_group_id` and `ip_address`
               can not be configured together.
        :param pulumi.Input[str] name: Specifies the rule name. The value can contain a maximum of `64` characters.
               Only letters, digits, hyphens (-), underscores (_) and periods (.) are allowed.
        :param pulumi.Input[str] policy_id: Specifies the WAF policy ID. Changing this parameter will create a new resource.
        :param pulumi.Input[str] region: Specifies the region in which to create the WAF blacklist and whitelist rule resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[int] status: Specifies the status of WAF blacklist and whitelist rule.
               Valid values are as follows:
               + **0**: Disabled.
               + **1**: Enabled.
        """
        if action is not None:
            pulumi.set(__self__, "action", action)
        if address_group_id is not None:
            pulumi.set(__self__, "address_group_id", address_group_id)
        if address_group_name is not None:
            pulumi.set(__self__, "address_group_name", address_group_name)
        if address_group_size is not None:
            pulumi.set(__self__, "address_group_size", address_group_size)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if enterprise_project_id is not None:
            pulumi.set(__self__, "enterprise_project_id", enterprise_project_id)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if policy_id is not None:
            pulumi.set(__self__, "policy_id", policy_id)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def action(self) -> Optional[pulumi.Input[int]]:
        """
        Specifies the protective action. Defaults to `0`. The value can be:
        + `0`: block the request.
        + `1`: allow the request.
        + `2`: log the request only.
        """
        return pulumi.get(self, "action")

    @action.setter
    def action(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "action", value)

    @property
    @pulumi.getter(name="addressGroupId")
    def address_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the WAF address group ID.
        This parameter is required when `ip_address` is not specified. The parameter `address_group_id` and `ip_address`
        can not be configured together.
        """
        return pulumi.get(self, "address_group_id")

    @address_group_id.setter
    def address_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "address_group_id", value)

    @property
    @pulumi.getter(name="addressGroupName")
    def address_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the IP address group.
        """
        return pulumi.get(self, "address_group_name")

    @address_group_name.setter
    def address_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "address_group_name", value)

    @property
    @pulumi.getter(name="addressGroupSize")
    def address_group_size(self) -> Optional[pulumi.Input[int]]:
        """
        The number of IP addresses or IP address ranges in the IP address group.
        """
        return pulumi.get(self, "address_group_size")

    @address_group_size.setter
    def address_group_size(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "address_group_size", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the rule description of the WAF address group.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the enterprise project ID of WAF rule blacklist
        and whitelist. For enterprise users, if omitted, default enterprise project will be used.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @enterprise_project_id.setter
    def enterprise_project_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "enterprise_project_id", value)

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the IP address or range. For example, **192.168.0.125** or **192.168.0.0/24**.
        This parameter is required when `address_group_id` is not specified. The parameter `address_group_id` and `ip_address`
        can not be configured together.
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_address", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the rule name. The value can contain a maximum of `64` characters.
        Only letters, digits, hyphens (-), underscores (_) and periods (.) are allowed.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the WAF policy ID. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "policy_id")

    @policy_id.setter
    def policy_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "policy_id", value)

    @property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the region in which to create the WAF blacklist and whitelist rule resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[int]]:
        """
        Specifies the status of WAF blacklist and whitelist rule.
        Valid values are as follows:
        + **0**: Disabled.
        + **1**: Enabled.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "status", value)


class RuleBlacklist(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[int]] = None,
                 address_group_id: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[str]] = None,
                 ip_address: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 policy_id: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Manages a WAF blacklist and whitelist rule resource within HuaweiCloud.

        > **NOTE:** All WAF resources depend on WAF instances, and the WAF instances need to be purchased before they can be
        used. The blacklist and whitelist rule resource can be used in Cloud Mode and Dedicated Mode.

        ## Example Usage
        ### WAF rule blacklist and whitelist with IP address

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        policy_id = config.require_object("policyId")
        rule = huaweicloud.waf.RuleBlacklist("rule",
            policy_id=policy_id,
            ip_address="192.168.0.0/24",
            action=0,
            description="test description")
        ```
        ### WAF rule blacklist and whitelist with address group

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        policy_id = config.require_object("policyId")
        address_group_id = config.require_object("addressGroupId")
        enterprise_project_id = config.require_object("enterpriseProjectId")
        rule = huaweicloud.waf.RuleBlacklist("rule",
            policy_id=policy_id,
            address_group_id=address_group_id,
            enterprise_project_id=enterprise_project_id,
            action=1,
            description="test description")
        ```

        ## Import

        There are two ways to import WAF rule blacklist state. * Using `policy_id` and `rule_id`, separated by a slash, e.g. bash

        ```sh
         $ pulumi import huaweicloud:Waf/ruleBlacklist:RuleBlacklist test <policy_id>/<rule_id>
        ```

         * Using `policy_id`, `rule_id` and `enterprise_project_id`, separated by slashes, e.g. bash

        ```sh
         $ pulumi import huaweicloud:Waf/ruleBlacklist:RuleBlacklist test <policy_id>/<rule_id>/<enterprise_project_id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] action: Specifies the protective action. Defaults to `0`. The value can be:
               + `0`: block the request.
               + `1`: allow the request.
               + `2`: log the request only.
        :param pulumi.Input[str] address_group_id: Specifies the WAF address group ID.
               This parameter is required when `ip_address` is not specified. The parameter `address_group_id` and `ip_address`
               can not be configured together.
        :param pulumi.Input[str] description: Specifies the rule description of the WAF address group.
        :param pulumi.Input[str] enterprise_project_id: Specifies the enterprise project ID of WAF rule blacklist
               and whitelist. For enterprise users, if omitted, default enterprise project will be used.
               Changing this parameter will create a new resource.
        :param pulumi.Input[str] ip_address: Specifies the IP address or range. For example, **192.168.0.125** or **192.168.0.0/24**.
               This parameter is required when `address_group_id` is not specified. The parameter `address_group_id` and `ip_address`
               can not be configured together.
        :param pulumi.Input[str] name: Specifies the rule name. The value can contain a maximum of `64` characters.
               Only letters, digits, hyphens (-), underscores (_) and periods (.) are allowed.
        :param pulumi.Input[str] policy_id: Specifies the WAF policy ID. Changing this parameter will create a new resource.
        :param pulumi.Input[str] region: Specifies the region in which to create the WAF blacklist and whitelist rule resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[int] status: Specifies the status of WAF blacklist and whitelist rule.
               Valid values are as follows:
               + **0**: Disabled.
               + **1**: Enabled.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RuleBlacklistArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a WAF blacklist and whitelist rule resource within HuaweiCloud.

        > **NOTE:** All WAF resources depend on WAF instances, and the WAF instances need to be purchased before they can be
        used. The blacklist and whitelist rule resource can be used in Cloud Mode and Dedicated Mode.

        ## Example Usage
        ### WAF rule blacklist and whitelist with IP address

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        policy_id = config.require_object("policyId")
        rule = huaweicloud.waf.RuleBlacklist("rule",
            policy_id=policy_id,
            ip_address="192.168.0.0/24",
            action=0,
            description="test description")
        ```
        ### WAF rule blacklist and whitelist with address group

        ```python
        import pulumi
        import pulumi_huaweicloud as huaweicloud

        config = pulumi.Config()
        policy_id = config.require_object("policyId")
        address_group_id = config.require_object("addressGroupId")
        enterprise_project_id = config.require_object("enterpriseProjectId")
        rule = huaweicloud.waf.RuleBlacklist("rule",
            policy_id=policy_id,
            address_group_id=address_group_id,
            enterprise_project_id=enterprise_project_id,
            action=1,
            description="test description")
        ```

        ## Import

        There are two ways to import WAF rule blacklist state. * Using `policy_id` and `rule_id`, separated by a slash, e.g. bash

        ```sh
         $ pulumi import huaweicloud:Waf/ruleBlacklist:RuleBlacklist test <policy_id>/<rule_id>
        ```

         * Using `policy_id`, `rule_id` and `enterprise_project_id`, separated by slashes, e.g. bash

        ```sh
         $ pulumi import huaweicloud:Waf/ruleBlacklist:RuleBlacklist test <policy_id>/<rule_id>/<enterprise_project_id>
        ```

        :param str resource_name: The name of the resource.
        :param RuleBlacklistArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RuleBlacklistArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 action: Optional[pulumi.Input[int]] = None,
                 address_group_id: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 enterprise_project_id: Optional[pulumi.Input[str]] = None,
                 ip_address: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 policy_id: Optional[pulumi.Input[str]] = None,
                 region: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RuleBlacklistArgs.__new__(RuleBlacklistArgs)

            __props__.__dict__["action"] = action
            __props__.__dict__["address_group_id"] = address_group_id
            __props__.__dict__["description"] = description
            __props__.__dict__["enterprise_project_id"] = enterprise_project_id
            __props__.__dict__["ip_address"] = ip_address
            __props__.__dict__["name"] = name
            if policy_id is None and not opts.urn:
                raise TypeError("Missing required property 'policy_id'")
            __props__.__dict__["policy_id"] = policy_id
            __props__.__dict__["region"] = region
            __props__.__dict__["status"] = status
            __props__.__dict__["address_group_name"] = None
            __props__.__dict__["address_group_size"] = None
        super(RuleBlacklist, __self__).__init__(
            'huaweicloud:Waf/ruleBlacklist:RuleBlacklist',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            action: Optional[pulumi.Input[int]] = None,
            address_group_id: Optional[pulumi.Input[str]] = None,
            address_group_name: Optional[pulumi.Input[str]] = None,
            address_group_size: Optional[pulumi.Input[int]] = None,
            description: Optional[pulumi.Input[str]] = None,
            enterprise_project_id: Optional[pulumi.Input[str]] = None,
            ip_address: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            policy_id: Optional[pulumi.Input[str]] = None,
            region: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[int]] = None) -> 'RuleBlacklist':
        """
        Get an existing RuleBlacklist resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] action: Specifies the protective action. Defaults to `0`. The value can be:
               + `0`: block the request.
               + `1`: allow the request.
               + `2`: log the request only.
        :param pulumi.Input[str] address_group_id: Specifies the WAF address group ID.
               This parameter is required when `ip_address` is not specified. The parameter `address_group_id` and `ip_address`
               can not be configured together.
        :param pulumi.Input[str] address_group_name: The name of the IP address group.
        :param pulumi.Input[int] address_group_size: The number of IP addresses or IP address ranges in the IP address group.
        :param pulumi.Input[str] description: Specifies the rule description of the WAF address group.
        :param pulumi.Input[str] enterprise_project_id: Specifies the enterprise project ID of WAF rule blacklist
               and whitelist. For enterprise users, if omitted, default enterprise project will be used.
               Changing this parameter will create a new resource.
        :param pulumi.Input[str] ip_address: Specifies the IP address or range. For example, **192.168.0.125** or **192.168.0.0/24**.
               This parameter is required when `address_group_id` is not specified. The parameter `address_group_id` and `ip_address`
               can not be configured together.
        :param pulumi.Input[str] name: Specifies the rule name. The value can contain a maximum of `64` characters.
               Only letters, digits, hyphens (-), underscores (_) and periods (.) are allowed.
        :param pulumi.Input[str] policy_id: Specifies the WAF policy ID. Changing this parameter will create a new resource.
        :param pulumi.Input[str] region: Specifies the region in which to create the WAF blacklist and whitelist rule resource.
               If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        :param pulumi.Input[int] status: Specifies the status of WAF blacklist and whitelist rule.
               Valid values are as follows:
               + **0**: Disabled.
               + **1**: Enabled.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RuleBlacklistState.__new__(_RuleBlacklistState)

        __props__.__dict__["action"] = action
        __props__.__dict__["address_group_id"] = address_group_id
        __props__.__dict__["address_group_name"] = address_group_name
        __props__.__dict__["address_group_size"] = address_group_size
        __props__.__dict__["description"] = description
        __props__.__dict__["enterprise_project_id"] = enterprise_project_id
        __props__.__dict__["ip_address"] = ip_address
        __props__.__dict__["name"] = name
        __props__.__dict__["policy_id"] = policy_id
        __props__.__dict__["region"] = region
        __props__.__dict__["status"] = status
        return RuleBlacklist(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def action(self) -> pulumi.Output[Optional[int]]:
        """
        Specifies the protective action. Defaults to `0`. The value can be:
        + `0`: block the request.
        + `1`: allow the request.
        + `2`: log the request only.
        """
        return pulumi.get(self, "action")

    @property
    @pulumi.getter(name="addressGroupId")
    def address_group_id(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the WAF address group ID.
        This parameter is required when `ip_address` is not specified. The parameter `address_group_id` and `ip_address`
        can not be configured together.
        """
        return pulumi.get(self, "address_group_id")

    @property
    @pulumi.getter(name="addressGroupName")
    def address_group_name(self) -> pulumi.Output[str]:
        """
        The name of the IP address group.
        """
        return pulumi.get(self, "address_group_name")

    @property
    @pulumi.getter(name="addressGroupSize")
    def address_group_size(self) -> pulumi.Output[int]:
        """
        The number of IP addresses or IP address ranges in the IP address group.
        """
        return pulumi.get(self, "address_group_size")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the rule description of the WAF address group.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="enterpriseProjectId")
    def enterprise_project_id(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the enterprise project ID of WAF rule blacklist
        and whitelist. For enterprise users, if omitted, default enterprise project will be used.
        Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "enterprise_project_id")

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the IP address or range. For example, **192.168.0.125** or **192.168.0.0/24**.
        This parameter is required when `address_group_id` is not specified. The parameter `address_group_id` and `ip_address`
        can not be configured together.
        """
        return pulumi.get(self, "ip_address")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Specifies the rule name. The value can contain a maximum of `64` characters.
        Only letters, digits, hyphens (-), underscores (_) and periods (.) are allowed.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="policyId")
    def policy_id(self) -> pulumi.Output[str]:
        """
        Specifies the WAF policy ID. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "policy_id")

    @property
    @pulumi.getter
    def region(self) -> pulumi.Output[str]:
        """
        Specifies the region in which to create the WAF blacklist and whitelist rule resource.
        If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
        """
        return pulumi.get(self, "region")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[Optional[int]]:
        """
        Specifies the status of WAF blacklist and whitelist rule.
        Valid values are as follows:
        + **0**: Disabled.
        + **1**: Enabled.
        """
        return pulumi.get(self, "status")

