# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'OrganizationPermissionsSelfPermissionArgs',
    'OrganizationPermissionsUserArgs',
]

@pulumi.input_type
class OrganizationPermissionsSelfPermissionArgs:
    def __init__(__self__, *,
                 permission: Optional[pulumi.Input[str]] = None,
                 user_id: Optional[pulumi.Input[str]] = None,
                 user_name: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] permission: Specifies the permission of the existing HuaweiCloud user.
               The values can be **Manage**, **Write** and **Read**.
        :param pulumi.Input[str] user_id: Specifies the ID of the existing HuaweiCloud user.
        :param pulumi.Input[str] user_name: Specifies the name of the existing HuaweiCloud user.
        """
        if permission is not None:
            pulumi.set(__self__, "permission", permission)
        if user_id is not None:
            pulumi.set(__self__, "user_id", user_id)
        if user_name is not None:
            pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter
    def permission(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the permission of the existing HuaweiCloud user.
        The values can be **Manage**, **Write** and **Read**.
        """
        return pulumi.get(self, "permission")

    @permission.setter
    def permission(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "permission", value)

    @property
    @pulumi.getter(name="userId")
    def user_id(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the ID of the existing HuaweiCloud user.
        """
        return pulumi.get(self, "user_id")

    @user_id.setter
    def user_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_id", value)

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the name of the existing HuaweiCloud user.
        """
        return pulumi.get(self, "user_name")

    @user_name.setter
    def user_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_name", value)


@pulumi.input_type
class OrganizationPermissionsUserArgs:
    def __init__(__self__, *,
                 permission: pulumi.Input[str],
                 user_id: pulumi.Input[str],
                 user_name: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] permission: Specifies the permission of the existing HuaweiCloud user.
               The values can be **Manage**, **Write** and **Read**.
        :param pulumi.Input[str] user_id: Specifies the ID of the existing HuaweiCloud user.
        :param pulumi.Input[str] user_name: Specifies the name of the existing HuaweiCloud user.
        """
        pulumi.set(__self__, "permission", permission)
        pulumi.set(__self__, "user_id", user_id)
        if user_name is not None:
            pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter
    def permission(self) -> pulumi.Input[str]:
        """
        Specifies the permission of the existing HuaweiCloud user.
        The values can be **Manage**, **Write** and **Read**.
        """
        return pulumi.get(self, "permission")

    @permission.setter
    def permission(self, value: pulumi.Input[str]):
        pulumi.set(self, "permission", value)

    @property
    @pulumi.getter(name="userId")
    def user_id(self) -> pulumi.Input[str]:
        """
        Specifies the ID of the existing HuaweiCloud user.
        """
        return pulumi.get(self, "user_id")

    @user_id.setter
    def user_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "user_id", value)

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the name of the existing HuaweiCloud user.
        """
        return pulumi.get(self, "user_name")

    @user_name.setter
    def user_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_name", value)


