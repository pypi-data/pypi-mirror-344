# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'OrganizationPermissionsSelfPermission',
    'OrganizationPermissionsUser',
]

@pulumi.output_type
class OrganizationPermissionsSelfPermission(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "userId":
            suggest = "user_id"
        elif key == "userName":
            suggest = "user_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in OrganizationPermissionsSelfPermission. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        OrganizationPermissionsSelfPermission.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        OrganizationPermissionsSelfPermission.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 permission: Optional[str] = None,
                 user_id: Optional[str] = None,
                 user_name: Optional[str] = None):
        """
        :param str permission: Specifies the permission of the existing HuaweiCloud user.
               The values can be **Manage**, **Write** and **Read**.
        :param str user_id: Specifies the ID of the existing HuaweiCloud user.
        :param str user_name: Specifies the name of the existing HuaweiCloud user.
        """
        if permission is not None:
            pulumi.set(__self__, "permission", permission)
        if user_id is not None:
            pulumi.set(__self__, "user_id", user_id)
        if user_name is not None:
            pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter
    def permission(self) -> Optional[str]:
        """
        Specifies the permission of the existing HuaweiCloud user.
        The values can be **Manage**, **Write** and **Read**.
        """
        return pulumi.get(self, "permission")

    @property
    @pulumi.getter(name="userId")
    def user_id(self) -> Optional[str]:
        """
        Specifies the ID of the existing HuaweiCloud user.
        """
        return pulumi.get(self, "user_id")

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> Optional[str]:
        """
        Specifies the name of the existing HuaweiCloud user.
        """
        return pulumi.get(self, "user_name")


@pulumi.output_type
class OrganizationPermissionsUser(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "userId":
            suggest = "user_id"
        elif key == "userName":
            suggest = "user_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in OrganizationPermissionsUser. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        OrganizationPermissionsUser.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        OrganizationPermissionsUser.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 permission: str,
                 user_id: str,
                 user_name: Optional[str] = None):
        """
        :param str permission: Specifies the permission of the existing HuaweiCloud user.
               The values can be **Manage**, **Write** and **Read**.
        :param str user_id: Specifies the ID of the existing HuaweiCloud user.
        :param str user_name: Specifies the name of the existing HuaweiCloud user.
        """
        pulumi.set(__self__, "permission", permission)
        pulumi.set(__self__, "user_id", user_id)
        if user_name is not None:
            pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter
    def permission(self) -> str:
        """
        Specifies the permission of the existing HuaweiCloud user.
        The values can be **Manage**, **Write** and **Read**.
        """
        return pulumi.get(self, "permission")

    @property
    @pulumi.getter(name="userId")
    def user_id(self) -> str:
        """
        Specifies the ID of the existing HuaweiCloud user.
        """
        return pulumi.get(self, "user_id")

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> Optional[str]:
        """
        Specifies the name of the existing HuaweiCloud user.
        """
        return pulumi.get(self, "user_name")


