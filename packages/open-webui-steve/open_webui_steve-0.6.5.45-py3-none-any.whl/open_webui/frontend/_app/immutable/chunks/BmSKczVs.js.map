{"version":3,"file":"BmSKczVs.js","sources":["../../../../../../src/lib/apis/ollama/index.ts"],"sourcesContent":["import { OLLAMA_API_BASE_URL } from '$lib/constants';\r\n\r\nexport const verifyOllamaConnection = async (\r\n\ttoken: string = '',\r\n\turl: string = '',\r\n\tkey: string = ''\r\n) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/verify`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`,\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\turl,\r\n\t\t\tkey\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\terror = `Ollama: ${err?.error?.message ?? 'Network Problem'}`;\r\n\t\t\treturn [];\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getOllamaConfig = async (token: string = '') => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/config`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t...(token && { authorization: `Bearer ${token}` })\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tif ('detail' in err) {\r\n\t\t\t\terror = err.detail;\r\n\t\t\t} else {\r\n\t\t\t\terror = 'Server connection failed';\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\ntype OllamaConfig = {\r\n\tENABLE_OLLAMA_API: boolean;\r\n\tOLLAMA_BASE_URLS: string[];\r\n\tOLLAMA_API_CONFIGS: object;\r\n};\r\n\r\nexport const updateOllamaConfig = async (token: string = '', config: OllamaConfig) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/config/update`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t...(token && { authorization: `Bearer ${token}` })\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\t...config\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tif ('detail' in err) {\r\n\t\t\t\terror = err.detail;\r\n\t\t\t} else {\r\n\t\t\t\terror = 'Server connection failed';\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const getOllamaUrls = async (token: string = '') => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/urls`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t...(token && { authorization: `Bearer ${token}` })\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tif ('detail' in err) {\r\n\t\t\t\terror = err.detail;\r\n\t\t\t} else {\r\n\t\t\t\terror = 'Server connection failed';\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res.OLLAMA_BASE_URLS;\r\n};\r\n\r\nexport const updateOllamaUrls = async (token: string = '', urls: string[]) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/urls/update`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t...(token && { authorization: `Bearer ${token}` })\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\turls: urls\r\n\t\t})\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tif ('detail' in err) {\r\n\t\t\t\terror = err.detail;\r\n\t\t\t} else {\r\n\t\t\t\terror = 'Server connection failed';\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res.OLLAMA_BASE_URLS;\r\n};\r\n\r\nexport const getOllamaVersion = async (token: string, urlIdx?: number) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/version${urlIdx ? `/${urlIdx}` : ''}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t...(token && { authorization: `Bearer ${token}` })\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tif ('detail' in err) {\r\n\t\t\t\terror = err.detail;\r\n\t\t\t} else {\r\n\t\t\t\terror = 'Server connection failed';\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res?.version ?? false;\r\n};\r\n\r\nexport const getOllamaModels = async (token: string = '', urlIdx: null | number = null) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/tags${urlIdx !== null ? `/${urlIdx}` : ''}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t...(token && { authorization: `Bearer ${token}` })\r\n\t\t}\r\n\t})\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tif ('detail' in err) {\r\n\t\t\t\terror = err.detail;\r\n\t\t\t} else {\r\n\t\t\t\terror = 'Server connection failed';\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn (res?.models ?? [])\r\n\t\t.map((model) => ({ id: model.model, name: model.name ?? model.model, ...model }))\r\n\t\t.sort((a, b) => {\r\n\t\t\treturn a.name.localeCompare(b.name);\r\n\t\t});\r\n};\r\n\r\nexport const generatePrompt = async (token: string = '', model: string, conversation: string) => {\r\n\tlet error = null;\r\n\r\n\tif (conversation === '') {\r\n\t\tconversation = '[no existing conversation]';\r\n\t}\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/generate`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\tmodel: model,\r\n\t\t\tprompt: `Conversation:\r\n\t\t\t${conversation}\r\n\r\n\t\t\tAs USER in the conversation above, your task is to continue the conversation. Remember, Your responses should be crafted as if you're a human conversing in a natural, realistic manner, keeping in mind the context and flow of the dialogue. Please generate a fitting response to the last message in the conversation, or if there is no existing conversation, initiate one as a normal person would.\r\n\t\t\t\r\n\t\t\tResponse:\r\n\t\t\t`\r\n\t\t})\r\n\t}).catch((err) => {\r\n\t\tconsole.log(err);\r\n\t\tif ('detail' in err) {\r\n\t\t\terror = err.detail;\r\n\t\t}\r\n\t\treturn null;\r\n\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const generateEmbeddings = async (token: string = '', model: string, text: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/embeddings`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\tmodel: model,\r\n\t\t\tprompt: text\r\n\t\t})\r\n\t}).catch((err) => {\r\n\t\terror = err;\r\n\t\treturn null;\r\n\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const generateTextCompletion = async (token: string = '', model: string, text: string) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/generate`, {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\tmodel: model,\r\n\t\t\tprompt: text,\r\n\t\t\tstream: true\r\n\t\t})\r\n\t}).catch((err) => {\r\n\t\terror = err;\r\n\t\treturn null;\r\n\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const generateChatCompletion = async (token: string = '', body: object) => {\r\n\tlet controller = new AbortController();\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/chat`, {\r\n\t\tsignal: controller.signal,\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).catch((err) => {\r\n\t\terror = err;\r\n\t\treturn null;\r\n\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn [res, controller];\r\n};\r\n\r\nexport const createModel = async (token: string, payload: object, urlIdx: string | null = null) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(\r\n\t\t`${OLLAMA_API_BASE_URL}/api/create${urlIdx !== null ? `/${urlIdx}` : ''}`,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(payload)\r\n\t\t}\r\n\t).catch((err) => {\r\n\t\terror = err;\r\n\t\treturn null;\r\n\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const deleteModel = async (token: string, tagName: string, urlIdx: string | null = null) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(\r\n\t\t`${OLLAMA_API_BASE_URL}/api/delete${urlIdx !== null ? `/${urlIdx}` : ''}`,\r\n\t\t{\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname: tagName\r\n\t\t\t})\r\n\t\t}\r\n\t)\r\n\t\t.then(async (res) => {\r\n\t\t\tif (!res.ok) throw await res.json();\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\tconsole.log(json);\r\n\t\t\treturn true;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\terror = err;\r\n\r\n\t\t\tif ('detail' in err) {\r\n\t\t\t\terror = err.detail;\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t});\r\n\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const pullModel = async (token: string, tagName: string, urlIdx: number | null = null) => {\r\n\tlet error = null;\r\n\tconst controller = new AbortController();\r\n\r\n\tconst res = await fetch(`${OLLAMA_API_BASE_URL}/api/pull${urlIdx !== null ? `/${urlIdx}` : ''}`, {\r\n\t\tsignal: controller.signal,\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\tname: tagName\r\n\t\t})\r\n\t}).catch((err) => {\r\n\t\tconsole.log(err);\r\n\t\terror = err;\r\n\r\n\t\tif ('detail' in err) {\r\n\t\t\terror = err.detail;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t});\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\treturn [res, controller];\r\n};\r\n\r\nexport const downloadModel = async (\r\n\ttoken: string,\r\n\tdownload_url: string,\r\n\turlIdx: string | null = null\r\n) => {\r\n\tlet error = null;\r\n\r\n\tconst res = await fetch(\r\n\t\t`${OLLAMA_API_BASE_URL}/models/download${urlIdx !== null ? `/${urlIdx}` : ''}`,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\turl: download_url\r\n\t\t\t})\r\n\t\t}\r\n\t).catch((err) => {\r\n\t\tconsole.log(err);\r\n\t\terror = err;\r\n\r\n\t\tif ('detail' in err) {\r\n\t\t\terror = err.detail;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t});\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\treturn res;\r\n};\r\n\r\nexport const uploadModel = async (token: string, file: File, urlIdx: string | null = null) => {\r\n\tlet error = null;\r\n\r\n\tconst formData = new FormData();\r\n\tformData.append('file', file);\r\n\r\n\tconst res = await fetch(\r\n\t\t`${OLLAMA_API_BASE_URL}/models/upload${urlIdx !== null ? `/${urlIdx}` : ''}`,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t},\r\n\t\t\tbody: formData\r\n\t\t}\r\n\t).catch((err) => {\r\n\t\tconsole.log(err);\r\n\t\terror = err;\r\n\r\n\t\tif ('detail' in err) {\r\n\t\t\terror = err.detail;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t});\r\n\tif (error) {\r\n\t\tthrow error;\r\n\t}\r\n\treturn res;\r\n};\r\n\r\n// export const pullModel = async (token: string, tagName: string) => {\r\n// \treturn await fetch(`${OLLAMA_API_BASE_URL}/pull`, {\r\n// \t\tmethod: 'POST',\r\n// \t\theaders: {\r\n// \t\t\t'Content-Type': 'text/event-stream',\r\n// \t\t\tAuthorization: `Bearer ${token}`\r\n// \t\t},\r\n// \t\tbody: JSON.stringify({\r\n// \t\t\tname: tagName\r\n// \t\t})\r\n// \t});\r\n// };\r\n"],"names":["verifyOllamaConnection","token","url","key","error","res","OLLAMA_API_BASE_URL","err","_a","getOllamaConfig","updateOllamaConfig","config","getOllamaVersion","urlIdx","getOllamaModels","model","a","b","createModel","payload","deleteModel","tagName","json","pullModel","controller","downloadModel","download_url","uploadModel","file","formData"],"mappings":"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"}