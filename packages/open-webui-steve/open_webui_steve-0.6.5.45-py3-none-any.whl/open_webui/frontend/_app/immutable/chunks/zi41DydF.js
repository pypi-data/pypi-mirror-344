import{d as i}from"./Cd_5PT-V.js";const h=async a=>{let n=null;const e=await fetch(`${i}/auths/admin/details`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return e},u=async a=>{let n=null;const e=await fetch(`${i}/auths/admin/config`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return e},d=async(a,n)=>{let e=null;const t=await fetch(`${i}/auths/admin/config`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify(n)}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o.detail,null));if(e)throw e;return t},p=async a=>{let n=null;const e=await fetch(`${i}/auths/`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},credentials:"include"}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return e},f=async(a,n)=>{let e=null;const t=await fetch(`${i}/auths/ldap`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({user:a,password:n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o.detail,null));if(e)throw e;return t},y=async(a="")=>{let n=null;const e=await fetch(`${i}/auths/admin/config/ldap`,{method:"GET",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return e},w=async(a="",n)=>{let e=null;const t=await fetch(`${i}/auths/admin/config/ldap`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({enable_ldap:n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o.detail,null));if(e)throw e;return t},g=async(a="")=>{let n=null;const e=await fetch(`${i}/auths/admin/config/ldap/server`,{method:"GET",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return e},j=async(a="",n)=>{let e=null;const t=await fetch(`${i}/auths/admin/config/ldap/server`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(n)}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o.detail,null));if(e)throw e;return t},T=async(a,n)=>{let e=null;const t=await fetch(`${i}/auths/signin`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({email:a,password:n})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o.detail,null));if(e)throw e;return t},m=async(a,n,e,t)=>{let o=null;const r=await fetch(`${i}/auths/signup`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({name:a,email:n,password:e,profile_image_url:t})}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),o=s.detail,null));if(o)throw o;return r},$=async()=>{let a=null;if(await fetch(`${i}/auths/signout`,{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"}).then(async n=>{if(!n.ok)throw await n.json();return n}).catch(n=>(console.log(n),a=n.detail,null)),a)throw a},S=async(a,n,e,t,o="pending")=>{let r=null;const s=await fetch(`${i}/auths/add`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({name:n,email:e,password:t,role:o})}).then(async l=>{if(!l.ok)throw await l.json();return l.json()}).catch(l=>(console.log(l),r=l.detail,null));if(r)throw r;return s},C=async(a,n,e)=>{let t=null;const o=await fetch(`${i}/auths/update/profile`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({name:n,profile_image_url:e})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return o},O=async(a,n,e)=>{let t=null;const o=await fetch(`${i}/auths/update/password`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({password:n,new_password:e})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return o},k=async a=>{let n=null;const e=await fetch(`${i}/auths/api_key`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return e.api_key},B=async a=>{let n=null;const e=await fetch(`${i}/auths/api_key`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t.detail,null));if(n)throw n;return e.api_key};export{T as a,m as b,u as c,g as d,y as e,d as f,p as g,w as h,j as i,O as j,B as k,f as l,C as m,k as n,h as o,S as p,$ as u};
//# sourceMappingURL=zi41DydF.js.map
