<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="icon" type="image/svg+xml" href="/static/termicon.svg">
    <link rel="shortcut icon" type="image/x-icon" href="/static/favicon.ico">
    <meta charset="UTF-8">
    <title>TermWeb Editor ‚Äî janito.dev</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/codemirror.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/theme/dracula.min.css">
    <link rel="stylesheet" href="/static/termweb.css">
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            background: #181a1b;
            color: #eee;
            transition: background 0.2s, color 0.2s;
        }
        body.light-theme {
            background: #f5f5f5;
            color: #222;
        }
        .main {
            flex: 1 1 auto;
            display: flex;
            flex-direction: column;
            justify-content: stretch;
            align-items: stretch;
            min-height: 0;
        }
        .editor-pane {
            flex: 1 1 auto;
            display: flex;
            flex-direction: column;
            height: 100%;
            min-height: 0;
        }
        .CodeMirror {
            flex: 1 1 auto;
            height: 100% !important;
            min-height: 0;
            font-size: 1.1em;
            background: #282a36;
            color: #f8f8f2;
            border-radius: 0;
            border: none;
            transition: background 0.2s, color 0.2s;
        }
        body.light-theme .CodeMirror {
            background: #fff;
            color: #222;
        }
        .footer {
            flex-shrink: 0;
            background: #222;
            color: #eee;
            padding: 12px 0 8px 0;
            text-align: center;
            width: 100%;
            position: fixed;
            left: 0;
            bottom: 0;
            z-index: 100;
            transition: background 0.2s, color 0.2s;
        }
        body.light-theme .footer {
            background: #eaeaea;
            color: #222;
        }
        .footer ul {
            list-style: none;
            padding: 0;
            margin: 8px 0 0 0;
            display: flex;
            justify-content: center;
            gap: 2em;
        }
        .footer li {
            display: inline;
        }
        .header {
            background: #222;
            color: #fff;
            padding: 10px 0;
            text-align: center;
            font-size: 1.3em;
            font-weight: bold;
            position: relative;
            transition: background 0.2s, color 0.2s;
        }
        body.light-theme .header {
            background: #eaeaea;
            color: #222;
        }
        .theme-switcher {
            position: absolute;
            right: 20px;
            top: 10px;
            background: #444;
            color: #fff;
            border: none;
            border-radius: 4px;
            padding: 6px 14px;
            cursor: pointer;
            font-size: 1em;
            transition: background 0.2s, color 0.2s;
        }
        body.light-theme .theme-switcher {
            background: #ddd;
            color: #222;
        }
    </style>
</head>
<body>
    <div class="header">
        TermWeb Editor
        <button class="save-btn" id="save-btn" style="margin-right:12px;background:#4caf50;color:#fff;border:none;border-radius:4px;padding:6px 14px;cursor:pointer;font-size:1em;">Gravar</button>
        <button class="theme-switcher" id="theme-switcher">Alternate to light theme</button>
    </div>
    <div class="main">
        <div class="editor-pane">
            <textarea id="code" name="code"></textarea>
        </div>
    </div>
    <div class="footer">
        <div class="subtitle">
            Desenvolvido por <a href="https://janito.dev" target="_blank">janito.dev</a> ‚Äî agente de programa√ß√£o com IA
        </div>
        <ul>
            <li>üåê <a href="https://janito.dev" target="_blank">janito.dev</a></li>
            <li>üìö <a href="https://docs.janito.dev" target="_blank">Documentation</a></li>
            <li>üíª <a href="https://github.com/joaompinto/janito" target="_blank">GitHub</a></li>
        </ul>
        <span style="font-size:0.9em;opacity:0.7;">_generated by janito.dev_</span>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/codemirror.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/mode/python/python.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.13/theme/dracula.min.js"></script>
    <script>
    // --- Load file content via AJAX if ?path=... is present ---
    function getQueryParam(name) {
        const url = new URL(window.location.href);
        return url.searchParams.get(name);
    }
    const filePath = getQueryParam('path');
    let initialContent = `# Bem-vindo ao TermWeb!\n# Este √© um editor CodeMirror ao vivo.\n\nprint("Ol√°, janito.dev!")`;
    if (filePath) {
        fetch(`/api/explorer/${encodeURIComponent(filePath)}`)
            .then(resp => resp.json())
            .then(data => {
                if (data.type === 'file') {
                    initialContent = data.content;
                    if (window.editorInstance) {
                        window.editorInstance.setValue(initialContent);
                    }
                } else if (data.error) {
                    initialContent = '# Errorr: ' + data.error;
                    if (window.editorInstance) {
                        window.editorInstance.setValue(initialContent);
                    }
                }
            })
            .catch(err => {
                initialContent = '# Error ao carregar arquivo: ' + err;
                if (window.editorInstance) {
                    window.editorInstance.setValue(initialContent);
                }
            });
    }
    document.addEventListener('DOMContentLoaded', function() {
        var editorInstance = CodeMirror.fromTextArea(document.getElementById('code'), {
            lineNumbers: true,
            mode: 'python',
            theme: 'dracula',
            indentUnit: 4,
            tabSize: 4,
        });
        window.editorInstance = editorInstance;
        editorInstance.setSize('100%', 'calc(100vh - 60px - 70px)'); // header/footer height
        editorInstance.setValue(initialContent);

        // Theme switcher logic
        var themeSwitcher = document.getElementById('theme-switcher');
        var isDark = true;
        themeSwitcher.addEventListener('click', function() {
            isDark = !isDark;
            if (isDark) {
                document.body.classList.remove('light-theme');
                editorInstance.setOption('theme', 'dracula');
                themeSwitcher.textContent = 'Alternate to light theme';
            } else {
                document.body.classList.add('light-theme');
                editorInstance.setOption('theme', 'default');
                themeSwitcher.textContent = 'Alternate to dark theme';
            }
        });
        // Set initial state
        document.body.classList.remove('light-theme');
        editorInstance.setOption('theme', 'dracula');
        themeSwitcher.textContent = 'Alternate to light theme';
        // Bot√£o de Gravar
        var saveBtn = document.getElementById('save-btn');
        saveBtn.addEventListener('click', function() {
            if (!filePath) {
                alert('Nenhum arquivo aberto para gravar.');
                return;
            }
            const content = editorInstance.getValue();
            fetch(`/api/explorer/${encodeURIComponent(filePath)}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ content }),
            })
            .then(resp => resp.json())
            .then(data => {
                if (data.success) {
                    saveBtn.textContent = 'Gravado!';
                    setTimeout(() => saveBtn.textContent = 'Gravar', 1200);
                } else {
                    alert('Errorr saving: ' + (data.error || 'desconhecido'));
                }
            })
            .catch(err => {
                alert('Errorr saving: ' + err);
            });
        });
    });
    </script>
</body>
</html>
