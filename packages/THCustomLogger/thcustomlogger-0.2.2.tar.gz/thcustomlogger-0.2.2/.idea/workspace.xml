<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9f76e348-4220-4d67-b63b-d36f23fd8850" name="Changes" comment="Refactor documentation and update logging functionality&#10;&#10;Removed outdated README0.md and revised README.md with updated examples, installation, and usage instructions. Enhanced logging functionality with `LoggerFactory.configure` method for better customization. Updated dependencies and version to 0.2.0." />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="Jupyter Notebook" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;TabgoHotel&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/TabgoHotel/CustomLogger.git&quot;,
    &quot;accountId&quot;: &quot;ba1fa2a0-f1fb-4751-9c86-b5245a520836&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2vYvlQhzj4XA6x2qyeH8ZIx3mQ8" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Python.config.executor&quot;: &quot;Run&quot;,
    &quot;Python.logger_setup.executor&quot;: &quot;Run&quot;,
    &quot;Python.python -m build.executor&quot;: &quot;Run&quot;,
    &quot;Python.python -m twine upload --repository testpypi dist/*.executor&quot;: &quot;Run&quot;,
    &quot;Python.python -m twine upload dist/*.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$USER_HOME$/" />
      <recent name="$PROJECT_DIR$/src/customlogger" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="config" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="CustomLogger" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/THCustomLogger" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/THCustomLogger/config.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="python -m build" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="CustomLogger" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="build" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="true" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="python -m twine upload --repository testpypi dist/*" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="CustomLogger" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="twine" />
      <option name="PARAMETERS" value="upload --repository testpypi dist/*" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="true" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="python -m twine upload dist/*" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="CustomLogger" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="twine" />
      <option name="PARAMETERS" value="upload dist/*" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="true" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.config" />
        <item itemvalue="Python.python -m twine upload dist/*" />
        <item itemvalue="Python.python -m twine upload --repository testpypi dist/*" />
        <item itemvalue="Python.python -m build" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-f27c65a3e318-JavaScript-PY-251.23774.444" />
        <option value="bundled-python-sdk-890ed5b35930-d9c5bdb153f4-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.23774.444" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9f76e348-4220-4d67-b63b-d36f23fd8850" name="Changes" comment="" />
      <created>1744334972790</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1744334972790</updated>
      <workItem from="1744334973837" duration="2400000" />
      <workItem from="1744337383264" duration="272000" />
      <workItem from="1744501665438" duration="7295000" />
      <workItem from="1744510046214" duration="590000" />
      <workItem from="1744510644352" duration="607000" />
      <workItem from="1744570847444" duration="863000" />
      <workItem from="1744596332537" duration="2980000" />
      <workItem from="1745773333674" duration="2005000" />
      <workItem from="1745775679311" duration="1236000" />
      <workItem from="1745780908226" duration="4881000" />
      <workItem from="1745864560032" duration="4215000" />
      <workItem from="1745948967834" duration="3419000" />
    </task>
    <task id="LOCAL-00001" summary="Add initial implementation of custom logging package&#10;&#10;This commit introduces a custom logging package with multiline and colored formatting. It includes setup scripts (`setup.py`, `pyproject.toml`), dependency management files (`requirements.txt`), and logging setup with support for git metadata retrieval. The package provides advanced logging capabilities for enhanced debugging and readability.">
      <option name="closed" value="true" />
      <created>1744336022654</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1744336022654</updated>
    </task>
    <task id="LOCAL-00002" summary="Add initial implementation of custom logging package&#10;&#10;This commit introduces a custom logging package with multiline and colored formatting. It includes setup scripts (`setup.py`, `pyproject.toml`), dependency management files (`requirements.txt`), and logging setup with support for git metadata retrieval. The package provides advanced logging capabilities for enhanced debugging and readability.">
      <option name="closed" value="true" />
      <created>1744337203524</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1744337203524</updated>
    </task>
    <task id="LOCAL-00003" summary="Rename and restructure project to THCustomLogger&#10;&#10;Updated the project structure and renamed it to THCustomLogger. Migrated from `setup.py` to `pyproject.toml` using Hatch as the build system. Added a proper license file and enhanced the README with installation and usage details.">
      <option name="closed" value="true" />
      <created>1744507409584</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1744507409584</updated>
    </task>
    <task id="LOCAL-00004" summary="Add detailed instructions for uploading packages to PyPI&#10;&#10;This documentation outlines the step-by-step process for building, testing, and publishing Python packages to PyPI. It includes prerequisites, tool updates, cleanup steps, and best practices for a smooth package upload workflow.">
      <option name="closed" value="true" />
      <created>1744508962580</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1744508962580</updated>
    </task>
    <task id="LOCAL-00005" summary="Refactor logger setup and improve documentation.&#10;&#10;Reorganized the logger implementation to introduce `LoggerFactory` with thread-safe configurations and enhanced features like Git integration and custom formats. Added rich documentation (README, changelog) and configuration file (`config.py`) for better usability and clarity. Updated usage examples and fixed console output issues.">
      <option name="closed" value="true" />
      <created>1745868508028</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1745868508028</updated>
    </task>
    <task id="LOCAL-00006" summary="Refactor documentation and update logging functionality&#10;&#10;Removed outdated README0.md and revised README.md with updated examples, installation, and usage instructions. Enhanced logging functionality with `LoggerFactory.configure` method for better customization. Updated dependencies and version to 0.2.0.">
      <option name="closed" value="true" />
      <created>1745981990274</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1745981990274</updated>
    </task>
    <task id="LOCAL-00007" summary="Refactor documentation and update logging functionality&#10;&#10;Removed outdated README0.md and revised README.md with updated examples, installation, and usage instructions. Enhanced logging functionality with `LoggerFactory.configure` method for better customization. Updated dependencies and version to 0.2.0.">
      <option name="closed" value="true" />
      <created>1745982548497</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1745982548497</updated>
    </task>
    <option name="localTasksCounter" value="8" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add initial implementation of custom logging package&#10;&#10;This commit introduces a custom logging package with multiline and colored formatting. It includes setup scripts (`setup.py`, `pyproject.toml`), dependency management files (`requirements.txt`), and logging setup with support for git metadata retrieval. The package provides advanced logging capabilities for enhanced debugging and readability." />
    <MESSAGE value="Migrate project to Hatchling and restructure package&#10;&#10;Replaced setuptools with Hatchling as the build system in `pyproject.toml`. Renamed package to `THCustomLogger` and reorganized the project structure. Added LICENSE file and updated `__init__.py` with new functionalities." />
    <MESSAGE value="Rename and restructure the logging package&#10;&#10;Renamed the package to &quot;THCustomLogger&quot; and restructured the project. Migrated `setup.py` to `pyproject.toml` for modern packaging using Hatchling. Added a LICENSE file and updated the README with installation, usage, and features." />
    <MESSAGE value="Rename and restructure project to THCustomLogger&#10;&#10;Updated the project structure and renamed it to THCustomLogger. Migrated from `setup.py` to `pyproject.toml` using Hatch as the build system. Added a proper license file and enhanced the README with installation and usage details." />
    <MESSAGE value="Add detailed instructions for uploading packages to PyPI&#10;&#10;This documentation outlines the step-by-step process for building, testing, and publishing Python packages to PyPI. It includes prerequisites, tool updates, cleanup steps, and best practices for a smooth package upload workflow." />
    <MESSAGE value="Refactor logger setup and improve documentation.&#10;&#10;Reorganized the logger implementation to introduce `LoggerFactory` with thread-safe configurations and enhanced features like Git integration and custom formats. Added rich documentation (README, changelog) and configuration file (`config.py`) for better usability and clarity. Updated usage examples and fixed console output issues." />
    <MESSAGE value="Refactor documentation and update logging functionality&#10;&#10;Removed outdated README0.md and revised README.md with updated examples, installation, and usage instructions. Enhanced logging functionality with `LoggerFactory.configure` method for better customization. Updated dependencies and version to 0.2.0." />
    <option name="LAST_COMMIT_MESSAGE" value="Refactor documentation and update logging functionality&#10;&#10;Removed outdated README0.md and revised README.md with updated examples, installation, and usage instructions. Enhanced logging functionality with `LoggerFactory.configure` method for better customization. Updated dependencies and version to 0.2.0." />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/CustomLogger$logger_setup.coverage" NAME="logger_setup Coverage Results" MODIFIED="1745949917207" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/THCustomLogger" />
    <SUITE FILE_PATH="coverage/CustomLogger$python__m_twine_upload_dist__.coverage" NAME="python -m twine upload dist/* Coverage Results" MODIFIED="1744510531025" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/CustomLogger$config.coverage" NAME="config Coverage Results" MODIFIED="1745785783930" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/THCustomLogger" />
    <SUITE FILE_PATH="coverage/CustomLogger$python__m_build.coverage" NAME="python -m build Coverage Results" MODIFIED="1744510501576" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/CustomLogger$python__m_twine_upload___repository_testpypi_dist__.coverage" NAME="python -m twine upload --repository testpypi dist/* Coverage Results" MODIFIED="1744510516349" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>