[project]
name = "poetry-plugin-inspect"
version = "0.2.0"
description = "Poetry plugin that provide well detailed HTML report about available packages"
authors = [{ name = "Abiodun Sotunde", email = "sotundeabiodun00@gmail.com" }]
license = { text = "MIT" }
readme = "README.md"
homepage = "https://github.com/iamabbey/dependency-inspect/src/poetry_plugin"
repository = "https://github.com/iamabbey/dependency-inspect/src/poetry_plugin"
keywords = ["poetry", "plugin", "show dependencies", "dependencies tree"]
requires-python = ">=3.9,<4.0"
dynamic = [ "classifiers" ]

dependencies = [
    "poetry (>=2.0,<3.0.0)",
    "pydantic (>=2.10.6,<3.0.0)",
    "requests (>=2.32.3,<3.0.0)",
]

[tool.poetry.group.dev.dependencies]
pre-commit = ">=4.1.0"
ruff = "^0.9.7"
hatch="^1.14.0"
mypy="^1.15.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
pytest-mock = "^3.14.0"
coverage = ">=7.2.0"

# only used in github actions
[tool.poetry.group.github-actions]
optional = true
[tool.poetry.group.github-actions.dependencies]
pytest-github-actions-annotate-failures = "^0.1.7"

[project.entry-points."poetry.application.plugin"]
inspect = "poetry_plugin_inspect.plugin:InspectApplicationPlugin"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
include = ["poetry_plugin_inspect"]

[tool.hatch.build.targets.sdist]
include = ["poetry_plugin_inspect"]

[tool.hatch.build.targets.sdist.force-include]
"../webui/dist" = "poetry_plugin_inspect/webui/dist"

[tool.hatch.build.targets.wheel.force-include]
"../webui/dist" = "poetry_plugin_inspect/webui/dist"

[tool.hatch.build.hooks.custom]
[tool.hatch.build.targets.BuildFrontend.hooks.custom]


[tool.ruff]
target-version = "py39"
exclude = ["node_modules"]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:"
]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = ["--ignore=tests", "--ignore=webui"]
testpaths = ["tests"]


[tool.mypy]
files = "poetry_plugin_inspect, tests"
mypy_path = "poetry_plugin_inspect"
strict = true
exclude = [
    "tests/fixtures",
]
