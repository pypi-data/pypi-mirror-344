name: Build Wheels

on:
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    
    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4
      
      # Step 2: Set up Python environment for calling cibuildwheel 
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel
      
      # Step 3: Build wheels using cibuildwheel
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          # Skip musllinux and PyPy on macOS (PyPy has limited macOS support)
          CIBW_SKIP: "*-musllinux* pp*-macosx*"
          
          # Linux-specific settings
          CIBW_ARCHS_LINUX: "x86_64"
          
          # macOS-specific settings
          CIBW_ARCHS_MACOS: "arm64"
          CIBW_ENVIRONMENT_MACOS: >
            MACOSX_DEPLOYMENT_TARGET=10.14
            OpenMP_ROOT=/opt/homebrew/opt/libomp
          # LDFLAGS="-L/opt/homebrew/opt/libomp/lib -L/opt/homebrew/opt/llvm/lib"
          # CPPFLAGS="-I/opt/homebrew/opt/libomp/include -I/opt/homebrew/opt/llvm/include"
          # CC="/opt/homebrew/opt/llvm/bin/clang -Xpreprocessor -fopenmp"
          # CXX="/opt/homebrew/opt/llvm/bin/clang++ -Xpreprocessor -fopenmp"
          # CMAKE_PREFIX_PATH="/opt/homebrew/opt/libomp:/opt/homebrew/opt/llvm"


          # macOS-specific dependencies and environment setup (Work in Progress)
          # TODO: Fix the issue with <bits/stdc++.h> header not supported by Clang.
          # Attempting to install GCC 13 but encountering path issues.
          # May require additional adjustments to compiler environment variables.
          CIBW_BEFORE_ALL_MACOS: >
            brew install boost &&
            brew install eigen &&
            brew install libomp &&
            brew install gcc@13 &&
            export GCC_INCLUDE_DIR=$(echo | $(brew --prefix gcc)/bin/g++-13 -E -Wp,-v - 2>&1 | grep '^ /.*include/c++/' | head -n 1 | tr -d ' ') &&
            echo "Found GCC include directory at: $GCC_INCLUDE_DIR" &&
            export PATH=$GCC_INCLUDE_DIR:$PATH &&
            export OpenMP_ROOT=/opt/homebrew/opt/libomp &&
            curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh &&
            bash Miniconda3-latest-MacOSX-x86_64.sh -b -p $HOME/miniconda &&
            export PATH=$HOME/miniconda/bin:$PATH &&
            source $HOME/miniconda/bin/activate &&
            export OpenCV_DIR=$(find $HOME/miniconda -name "OpenCVConfig.cmake" -exec dirname {} \; | head -n 1) &&
            echo "Found OpenCV at: $OpenCV_DIR" &&
            $HOME/miniconda/bin/conda install -y -c conda-forge opencv
      
      # Step 4: Upload generated wheels as workflow artifacts
      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl