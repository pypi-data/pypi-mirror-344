version: '3.8'

services:
  api_gateway:
    image: nginx:alpine
    ports:
      - "8080:80"
    depends_on:
      - auth_service
      - user_service
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - frontend
      - backend

  auth_service:
    image: python:3.9-slim
    volumes:
      - ./auth:/app
    command: python /app/auth_service.py
    environment:
      - DB_HOST=auth_db
      - REDIS_HOST=auth_cache
    depends_on:
      - auth_db
      - auth_cache
    networks:
      - backend

  user_service:
    image: python:3.9-slim
    volumes:
      - ./user:/app
    command: python /app/user_service.py
    environment:
      - DB_HOST=user_db
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - user_db
      - kafka
    networks:
      - backend

  auth_db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=auth
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    networks:
      - backend

  user_db:
    image: mongodb:4.4
    environment:
      - MONGO_INITDB_DATABASE=users
    volumes:
      - user_db_data:/data/db
    networks:
      - backend

  auth_cache:
    image: redis:alpine
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - backend

networks:
  frontend:
  backend:

volumes:
  auth_db_data:
  user_db_data:
