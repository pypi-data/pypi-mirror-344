name: build-and-release
on:
  push:
    tags:
      - "v*"
jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: "3.11"
      - name: Build executable (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          uv run pyinstaller pybattletank.py \
          --onefile \
          --clean \
          --noconfirm \
          --windowed \
          --add-data "pybattletank/assets:assets"
      - name: Build executable (Windows)
        if: matrix.os == 'windows-latest'
        run: uv run pyinstaller pybattletank.py --onefile --clean --noconfirm --windowed --add-data "pybattletank/assets;assets"
      - name: Rename output (Unix)
        if: matrix.os != 'windows-latest'
        run: mv dist/pybattletank dist/pybattletank-${{ runner.os }}-${{ runner.arch }}
      - name: Rename output (Windows)
        if: matrix.os == 'windows-latest'
        run: mv dist/pybattletank.exe dist/pybattletank-${{ runner.os }}-${{ runner.arch }}.exe
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pybattletank-${{ runner.os }}-${{ runner.arch }}
          path: dist/pybattletank*
  release:
    name: Publish GitHub release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: List downloaded files
        run: ls -R dist
      - name: Upload to GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          token: ${{ secrets.RELEASE_TOKEN }}
