[project]
name = "gel"
description = "Official Gel Python Driver"
authors = [
    { name = "Gel Data Inc.", email = "hello@geldata.com" },
    { name = "Gel Contributors" },
]
requires-python = ">=3.9.0"
readme = "README.rst"
license = { text = "Apache License, Version 2.0" }
dynamic = ["version"]
keywords = ["gel", "edgedb", "database", "postgres"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Database :: Front-Ends",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = ['certifi>=2021.5.30; platform_system == "Windows"']

[project.optional-dependencies]
test = [
    'pytest>=3.6.0',
    'pycodestyle~=2.11.1',
    'pyflakes~=3.2.0',
    'uvloop>=0.15.1; platform_system != "Windows"',
]
sqltest = [
    'SQLAlchemy>=2.0.0',
    'sqlmodel>=0.0.22',
    'Django~=5.1.3',
    'psycopg2-binary>=2.9.10',
]
doc = [
    'sphinx~=4.2.0',
    'sphinxcontrib-asyncio~=0.3.0',
    'sphinx_rtd_theme~=1.0.0',
]
ai = ['httpx~=0.27.0', 'httpx-sse~=0.4.0']

[project.urls]
homepage = "https://www.geldata.com"
source = "https://github.com/geldata/gel-python"
documentation = "https://docs.geldata.com/reference/clients/python"
issues = "https://github.com/geldata/gel-python/issues"

[project.scripts]
edgedb-py = "gel.codegen.cli:main"
gel-py = "gel.codegen.cli:main"
gel-orm = "gel.orm.cli:main"
gel = "gel.cli:main"

[build-system]
requires = ["Cython(>=3.0.11,<3.1.0)", "setuptools >= 67", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = { find = { include = ["gel", "gel.*", "edgedb", "edgedb.*"] } }
zip-safe = false

[tool.setuptools.exclude-package-data]
"*" = ["*.c", "*.h"]

# ========================
#          MYPY
# ========================

[tool.mypy]
exclude = [
    "^.eggs",
    "^.github",
    "^.vscode",
    "^build",
    "^dist",
    "^docs",
    "^target",
]
files = ["edgedb", "gel", "tests"]
python_version = "3.9"
follow_imports = "normal"
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_configs = true
show_column_numbers = true
show_error_codes = true
local_partial_types = true


# ========================
#          BLACK
# ========================
[tool.black]
line-length = 79
target-version = ["py39"]

# ========================
#           RUFF
# ========================

[tool.ruff]
line-length = 80
indent-width = 4
target-version = "py39"
exclude = [
    ".github",
    ".git",
    "build",
    "dist",
    ".eggs",
    "generated",
    "tools",
    "gel/orm",
]

[tool.ruff.lint]
preview = true
extend-select = [
    # "ASYNC",  # flake8-async
    "B", # flake8-bugbear
    # "C4",     # flake8-comprehensions
    # "C9",     # mccabe
    # "COM",    # flake8-commas
    # "D",      # pycodestyle
    # "DTZ",    # flake8-datetimez
    "E", # error
    # "ERA",    # flake8-eradicate
    "F", # pyflakes
    # "FBT",    # flake8-boolean-trap
    "G", # flake8-logging-format
    # "I",      # isort
    # "N",      # pep8-naming
    # "PGH",    # pygrep-hooks
    # "PIE",    # flake8-pie
    # "RUF",    # ruff specific
    # "SIM",    # flake8-simplify
    # "T20",    # flake8-print
    # "UP",     # pyupgrade
    "W", # warning
]
ignore = [
    "B018", # useless-expression
    "B023", # function-uses-loop-variable
    "B904", # raise-without-from-inside-except
    "E402", # module-import-not-at-top-of-file
    "E252", # missing-whitespace-around-parameter-equals
    "F401", # unused-import
    "F541", # f-string-missing-placeholders
]

# ========================
#          PYTEST
# ========================
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--capture=no --assert=plain --strict --tb native"
testpaths = ["tests"]
filterwarnings = "default"
