# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.4&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest_v2.models.slurm_v0041_get_diag200_response_statistics_schedule_exit import SlurmV0041GetDiag200ResponseStatisticsScheduleExit

class TestSlurmV0041GetDiag200ResponseStatisticsScheduleExit(unittest.TestCase):
    """SlurmV0041GetDiag200ResponseStatisticsScheduleExit unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SlurmV0041GetDiag200ResponseStatisticsScheduleExit:
        """Test SlurmV0041GetDiag200ResponseStatisticsScheduleExit
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SlurmV0041GetDiag200ResponseStatisticsScheduleExit`
        """
        model = SlurmV0041GetDiag200ResponseStatisticsScheduleExit()
        if include_optional:
            return SlurmV0041GetDiag200ResponseStatisticsScheduleExit(
                end_job_queue = 56,
                default_queue_depth = 56,
                max_job_start = 56,
                max_rpc_cnt = 56,
                max_sched_time = 56,
                licenses = 56
            )
        else:
            return SlurmV0041GetDiag200ResponseStatisticsScheduleExit(
        )
        """

    def testSlurmV0041GetDiag200ResponseStatisticsScheduleExit(self):
        """Test SlurmV0041GetDiag200ResponseStatisticsScheduleExit"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
