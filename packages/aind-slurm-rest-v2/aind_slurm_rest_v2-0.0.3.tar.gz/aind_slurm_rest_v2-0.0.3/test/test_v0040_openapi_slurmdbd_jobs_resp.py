# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.4&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest_v2.models.v0040_openapi_slurmdbd_jobs_resp import V0040OpenapiSlurmdbdJobsResp

class TestV0040OpenapiSlurmdbdJobsResp(unittest.TestCase):
    """V0040OpenapiSlurmdbdJobsResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0040OpenapiSlurmdbdJobsResp:
        """Test V0040OpenapiSlurmdbdJobsResp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0040OpenapiSlurmdbdJobsResp`
        """
        model = V0040OpenapiSlurmdbdJobsResp()
        if include_optional:
            return V0040OpenapiSlurmdbdJobsResp(
                jobs = [
                    aind_slurm_rest_v2.models.v0/0/40_job.v0.0.40_job(
                        account = '', 
                        comment = aind_slurm_rest_v2.models.v0_0_40_job_comment.v0_0_40_job_comment(
                            administrator = '', 
                            job = '', 
                            system = '', ), 
                        allocation_nodes = 56, 
                        array = aind_slurm_rest_v2.models.v0_0_40_job_array.v0_0_40_job_array(
                            job_id = 56, 
                            limits = aind_slurm_rest_v2.models.v0_0_40_job_array_limits.v0_0_40_job_array_limits(
                                max = aind_slurm_rest_v2.models.v0_0_40_job_array_limits_max.v0_0_40_job_array_limits_max(
                                    running = aind_slurm_rest_v2.models.v0_0_40_job_array_limits_max_running.v0_0_40_job_array_limits_max_running(
                                        tasks = 56, ), ), ), 
                            task_id = aind_slurm_rest_v2.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                set = True, 
                                infinite = True, 
                                number = 56, ), 
                            task = '', ), 
                        association = aind_slurm_rest_v2.models.v0/0/40_assoc_short.v0.0.40_assoc_short(
                            account = '', 
                            cluster = '', 
                            partition = '', 
                            user = '', 
                            id = 56, ), 
                        block = '', 
                        cluster = '', 
                        constraints = '', 
                        container = '', 
                        derived_exit_code = aind_slurm_rest_v2.models.v0/0/40_process_exit_code_verbose.v0.0.40_process_exit_code_verbose(
                            status = [
                                'INVALID'
                                ], 
                            return_code = aind_slurm_rest_v2.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                set = True, 
                                infinite = True, 
                                number = 56, ), 
                            signal = aind_slurm_rest_v2.models.v0_0_40_process_exit_code_verbose_signal.v0_0_40_process_exit_code_verbose_signal(
                                id = aind_slurm_rest_v2.models.v0/0/40_uint16_no_val.v0.0.40_uint16_no_val(
                                    set = True, 
                                    infinite = True, 
                                    number = 56, ), 
                                name = '', ), ), 
                        time = aind_slurm_rest_v2.models.v0_0_40_job_time.v0_0_40_job_time(
                            elapsed = 56, 
                            eligible = 56, 
                            end = 56, 
                            start = 56, 
                            submission = 56, 
                            suspended = 56, 
                            system = aind_slurm_rest_v2.models.v0_0_40_job_time_system.v0_0_40_job_time_system(
                                seconds = 56, 
                                microseconds = 56, ), 
                            limit = , 
                            total = aind_slurm_rest_v2.models.v0_0_40_job_time_total.v0_0_40_job_time_total(
                                seconds = 56, 
                                microseconds = 56, ), 
                            user = aind_slurm_rest_v2.models.v0_0_40_job_time_user.v0_0_40_job_time_user(
                                seconds = 56, 
                                microseconds = 56, ), ), 
                        exit_code = aind_slurm_rest_v2.models.v0/0/40_process_exit_code_verbose.v0.0.40_process_exit_code_verbose(), 
                        extra = '', 
                        failed_node = '', 
                        flags = [
                            'NONE'
                            ], 
                        group = '', 
                        het = aind_slurm_rest_v2.models.v0_0_40_job_het.v0_0_40_job_het(
                            job_id = 56, 
                            job_offset = , ), 
                        job_id = 56, 
                        name = '', 
                        licenses = '', 
                        mcs = aind_slurm_rest_v2.models.v0_0_40_job_mcs.v0_0_40_job_mcs(
                            label = '', ), 
                        nodes = '', 
                        partition = '', 
                        hold = True, 
                        priority = , 
                        qos = '', 
                        required = aind_slurm_rest_v2.models.v0_0_40_job_required.v0_0_40_job_required(
                            cpus = 56, 
                            memory_per_cpu = aind_slurm_rest_v2.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                                set = True, 
                                infinite = True, 
                                number = 56, ), 
                            memory_per_node = aind_slurm_rest_v2.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                                set = True, 
                                infinite = True, 
                                number = 56, ), ), 
                        kill_request_user = '', 
                        reservation = aind_slurm_rest_v2.models.v0_0_40_job_reservation.v0_0_40_job_reservation(
                            name = '', ), 
                        script = '', 
                        state = aind_slurm_rest_v2.models.v0_0_40_job_state.v0_0_40_job_state(
                            current = [
                                'PENDING'
                                ], 
                            reason = '', ), 
                        steps = [
                            aind_slurm_rest_v2.models.v0/0/40_step.v0.0.40_step(
                                nodes = aind_slurm_rest_v2.models.v0_0_40_step_nodes.v0_0_40_step_nodes(
                                    count = 56, 
                                    range = '', 
                                    list = [
                                        ''
                                        ], ), 
                                tasks = aind_slurm_rest_v2.models.v0_0_40_step_tasks.v0_0_40_step_tasks(
                                    count = 56, ), 
                                pid = '', 
                                cpu = aind_slurm_rest_v2.models.v0_0_40_step_cpu.v0_0_40_step_CPU(
                                    requested_frequency = aind_slurm_rest_v2.models.v0_0_40_step_cpu_requested_frequency.v0_0_40_step_CPU_requested_frequency(
                                        min = , ), 
                                    governor = '', ), 
                                kill_request_user = '', 
                                statistics = aind_slurm_rest_v2.models.v0_0_40_step_statistics.v0_0_40_step_statistics(
                                    energy = aind_slurm_rest_v2.models.v0_0_40_step_statistics_energy.v0_0_40_step_statistics_energy(
                                        consumed = , ), ), 
                                step = aind_slurm_rest_v2.models.v0_0_40_step_step.v0_0_40_step_step(
                                    name = '', ), 
                                task = aind_slurm_rest_v2.models.v0_0_40_step_task.v0_0_40_step_task(
                                    distribution = '', ), 
                                tres = aind_slurm_rest_v2.models.v0_0_40_step_tres.v0_0_40_step_tres(
                                    requested = aind_slurm_rest_v2.models.v0_0_40_step_tres_requested.v0_0_40_step_tres_requested(
                                        average = [
                                            aind_slurm_rest_v2.models.v0/0/40_tres.v0.0.40_tres(
                                                type = '', 
                                                name = '', 
                                                count = 56, )
                                            ], ), 
                                    allocated = [
                                        aind_slurm_rest_v2.models.v0/0/40_tres.v0.0.40_tres(
                                            type = '', 
                                            name = '', 
                                            count = 56, )
                                        ], ), )
                            ], 
                        submit_line = '', 
                        tres = aind_slurm_rest_v2.models.v0_0_40_job_tres.v0_0_40_job_tres(), 
                        used_gres = '', 
                        user = '', 
                        wckey = aind_slurm_rest_v2.models.v0/0/40_wckey_tag_struct.v0.0.40_wckey_tag_struct(
                            wckey = '', 
                            flags = [
                                'ASSIGNED_DEFAULT'
                                ], ), 
                        working_directory = '', )
                    ],
                meta = aind_slurm_rest_v2.models.v0/0/40_openapi_meta.v0.0.40_openapi_meta(
                    plugin = aind_slurm_rest_v2.models.slurm_v0041_get_shares_200_response_meta_plugin.slurm_v0041_get_shares_200_response_meta_plugin(
                        type = '', 
                        name = '', 
                        data_parser = '', 
                        accounting_storage = '', ), 
                    client = aind_slurm_rest_v2.models.slurm_v0041_get_shares_200_response_meta_client.slurm_v0041_get_shares_200_response_meta_client(
                        source = '', 
                        user = '', 
                        group = '', ), 
                    command = [
                        ''
                        ], 
                    slurm = aind_slurm_rest_v2.models.slurm_v0041_get_shares_200_response_meta_slurm.slurm_v0041_get_shares_200_response_meta_slurm(
                        version = aind_slurm_rest_v2.models.slurm_v0041_get_shares_200_response_meta_slurm_version.slurm_v0041_get_shares_200_response_meta_slurm_version(
                            major = '', 
                            micro = '', 
                            minor = '', ), 
                        release = '', 
                        cluster = '', ), ),
                errors = [
                    aind_slurm_rest_v2.models.v0/0/40_openapi_error.v0.0.40_openapi_error(
                        description = '', 
                        error_number = 56, 
                        error = '', 
                        source = '', )
                    ],
                warnings = [
                    aind_slurm_rest_v2.models.v0/0/40_openapi_warning.v0.0.40_openapi_warning(
                        description = '', 
                        source = '', )
                    ]
            )
        else:
            return V0040OpenapiSlurmdbdJobsResp(
                jobs = [
                    aind_slurm_rest_v2.models.v0/0/40_job.v0.0.40_job(
                        account = '', 
                        comment = aind_slurm_rest_v2.models.v0_0_40_job_comment.v0_0_40_job_comment(
                            administrator = '', 
                            job = '', 
                            system = '', ), 
                        allocation_nodes = 56, 
                        array = aind_slurm_rest_v2.models.v0_0_40_job_array.v0_0_40_job_array(
                            job_id = 56, 
                            limits = aind_slurm_rest_v2.models.v0_0_40_job_array_limits.v0_0_40_job_array_limits(
                                max = aind_slurm_rest_v2.models.v0_0_40_job_array_limits_max.v0_0_40_job_array_limits_max(
                                    running = aind_slurm_rest_v2.models.v0_0_40_job_array_limits_max_running.v0_0_40_job_array_limits_max_running(
                                        tasks = 56, ), ), ), 
                            task_id = aind_slurm_rest_v2.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                set = True, 
                                infinite = True, 
                                number = 56, ), 
                            task = '', ), 
                        association = aind_slurm_rest_v2.models.v0/0/40_assoc_short.v0.0.40_assoc_short(
                            account = '', 
                            cluster = '', 
                            partition = '', 
                            user = '', 
                            id = 56, ), 
                        block = '', 
                        cluster = '', 
                        constraints = '', 
                        container = '', 
                        derived_exit_code = aind_slurm_rest_v2.models.v0/0/40_process_exit_code_verbose.v0.0.40_process_exit_code_verbose(
                            status = [
                                'INVALID'
                                ], 
                            return_code = aind_slurm_rest_v2.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                set = True, 
                                infinite = True, 
                                number = 56, ), 
                            signal = aind_slurm_rest_v2.models.v0_0_40_process_exit_code_verbose_signal.v0_0_40_process_exit_code_verbose_signal(
                                id = aind_slurm_rest_v2.models.v0/0/40_uint16_no_val.v0.0.40_uint16_no_val(
                                    set = True, 
                                    infinite = True, 
                                    number = 56, ), 
                                name = '', ), ), 
                        time = aind_slurm_rest_v2.models.v0_0_40_job_time.v0_0_40_job_time(
                            elapsed = 56, 
                            eligible = 56, 
                            end = 56, 
                            start = 56, 
                            submission = 56, 
                            suspended = 56, 
                            system = aind_slurm_rest_v2.models.v0_0_40_job_time_system.v0_0_40_job_time_system(
                                seconds = 56, 
                                microseconds = 56, ), 
                            limit = , 
                            total = aind_slurm_rest_v2.models.v0_0_40_job_time_total.v0_0_40_job_time_total(
                                seconds = 56, 
                                microseconds = 56, ), 
                            user = aind_slurm_rest_v2.models.v0_0_40_job_time_user.v0_0_40_job_time_user(
                                seconds = 56, 
                                microseconds = 56, ), ), 
                        exit_code = aind_slurm_rest_v2.models.v0/0/40_process_exit_code_verbose.v0.0.40_process_exit_code_verbose(), 
                        extra = '', 
                        failed_node = '', 
                        flags = [
                            'NONE'
                            ], 
                        group = '', 
                        het = aind_slurm_rest_v2.models.v0_0_40_job_het.v0_0_40_job_het(
                            job_id = 56, 
                            job_offset = , ), 
                        job_id = 56, 
                        name = '', 
                        licenses = '', 
                        mcs = aind_slurm_rest_v2.models.v0_0_40_job_mcs.v0_0_40_job_mcs(
                            label = '', ), 
                        nodes = '', 
                        partition = '', 
                        hold = True, 
                        priority = , 
                        qos = '', 
                        required = aind_slurm_rest_v2.models.v0_0_40_job_required.v0_0_40_job_required(
                            cpus = 56, 
                            memory_per_cpu = aind_slurm_rest_v2.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                                set = True, 
                                infinite = True, 
                                number = 56, ), 
                            memory_per_node = aind_slurm_rest_v2.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                                set = True, 
                                infinite = True, 
                                number = 56, ), ), 
                        kill_request_user = '', 
                        reservation = aind_slurm_rest_v2.models.v0_0_40_job_reservation.v0_0_40_job_reservation(
                            name = '', ), 
                        script = '', 
                        state = aind_slurm_rest_v2.models.v0_0_40_job_state.v0_0_40_job_state(
                            current = [
                                'PENDING'
                                ], 
                            reason = '', ), 
                        steps = [
                            aind_slurm_rest_v2.models.v0/0/40_step.v0.0.40_step(
                                nodes = aind_slurm_rest_v2.models.v0_0_40_step_nodes.v0_0_40_step_nodes(
                                    count = 56, 
                                    range = '', 
                                    list = [
                                        ''
                                        ], ), 
                                tasks = aind_slurm_rest_v2.models.v0_0_40_step_tasks.v0_0_40_step_tasks(
                                    count = 56, ), 
                                pid = '', 
                                cpu = aind_slurm_rest_v2.models.v0_0_40_step_cpu.v0_0_40_step_CPU(
                                    requested_frequency = aind_slurm_rest_v2.models.v0_0_40_step_cpu_requested_frequency.v0_0_40_step_CPU_requested_frequency(
                                        min = , ), 
                                    governor = '', ), 
                                kill_request_user = '', 
                                statistics = aind_slurm_rest_v2.models.v0_0_40_step_statistics.v0_0_40_step_statistics(
                                    energy = aind_slurm_rest_v2.models.v0_0_40_step_statistics_energy.v0_0_40_step_statistics_energy(
                                        consumed = , ), ), 
                                step = aind_slurm_rest_v2.models.v0_0_40_step_step.v0_0_40_step_step(
                                    name = '', ), 
                                task = aind_slurm_rest_v2.models.v0_0_40_step_task.v0_0_40_step_task(
                                    distribution = '', ), 
                                tres = aind_slurm_rest_v2.models.v0_0_40_step_tres.v0_0_40_step_tres(
                                    requested = aind_slurm_rest_v2.models.v0_0_40_step_tres_requested.v0_0_40_step_tres_requested(
                                        average = [
                                            aind_slurm_rest_v2.models.v0/0/40_tres.v0.0.40_tres(
                                                type = '', 
                                                name = '', 
                                                count = 56, )
                                            ], ), 
                                    allocated = [
                                        aind_slurm_rest_v2.models.v0/0/40_tres.v0.0.40_tres(
                                            type = '', 
                                            name = '', 
                                            count = 56, )
                                        ], ), )
                            ], 
                        submit_line = '', 
                        tres = aind_slurm_rest_v2.models.v0_0_40_job_tres.v0_0_40_job_tres(), 
                        used_gres = '', 
                        user = '', 
                        wckey = aind_slurm_rest_v2.models.v0/0/40_wckey_tag_struct.v0.0.40_wckey_tag_struct(
                            wckey = '', 
                            flags = [
                                'ASSIGNED_DEFAULT'
                                ], ), 
                        working_directory = '', )
                    ],
        )
        """

    def testV0040OpenapiSlurmdbdJobsResp(self):
        """Test V0040OpenapiSlurmdbdJobsResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
