# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.4&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest_v2.models.v0040_stats_msg import V0040StatsMsg

class TestV0040StatsMsg(unittest.TestCase):
    """V0040StatsMsg unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0040StatsMsg:
        """Test V0040StatsMsg
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0040StatsMsg`
        """
        model = V0040StatsMsg()
        if include_optional:
            return V0040StatsMsg(
                parts_packed = 56,
                req_time = aind_slurm_rest_v2.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                req_time_start = aind_slurm_rest_v2.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                server_thread_count = 56,
                agent_queue_size = 56,
                agent_count = 56,
                agent_thread_count = 56,
                dbd_agent_queue_size = 56,
                gettimeofday_latency = 56,
                schedule_cycle_max = 56,
                schedule_cycle_last = 56,
                schedule_cycle_total = 56,
                schedule_cycle_mean = 56,
                schedule_cycle_mean_depth = 56,
                schedule_cycle_per_minute = 56,
                schedule_queue_length = 56,
                schedule_exit = aind_slurm_rest_v2.models.v0/0/40_schedule_exit_fields.v0.0.40_schedule_exit_fields(
                    end_job_queue = 56, 
                    default_queue_depth = 56, 
                    max_job_start = 56, 
                    max_rpc_cnt = 56, 
                    max_sched_time = 56, 
                    licenses = 56, ),
                jobs_submitted = 56,
                jobs_started = 56,
                jobs_completed = 56,
                jobs_canceled = 56,
                jobs_failed = 56,
                jobs_pending = 56,
                jobs_running = 56,
                job_states_ts = aind_slurm_rest_v2.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                bf_backfilled_jobs = 56,
                bf_last_backfilled_jobs = 56,
                bf_backfilled_het_jobs = 56,
                bf_cycle_counter = 56,
                bf_cycle_mean = 56,
                bf_depth_mean = 56,
                bf_depth_mean_try = 56,
                bf_cycle_sum = 56,
                bf_cycle_last = 56,
                bf_last_depth = 56,
                bf_last_depth_try = 56,
                bf_depth_sum = 56,
                bf_depth_try_sum = 56,
                bf_queue_len = 56,
                bf_queue_len_mean = 56,
                bf_queue_len_sum = 56,
                bf_table_size = 56,
                bf_table_size_mean = 56,
                bf_when_last_cycle = aind_slurm_rest_v2.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                bf_active = True,
                bf_exit = aind_slurm_rest_v2.models.v0/0/40_bf_exit_fields.v0.0.40_bf_exit_fields(
                    end_job_queue = 56, 
                    bf_max_job_start = 56, 
                    bf_max_job_test = 56, 
                    bf_max_time = 56, 
                    bf_node_space_size = 56, 
                    state_changed = 56, ),
                rpcs_by_message_type = [
                    aind_slurm_rest_v2.models.v0_0_40_stats_msg_rpcs_by_type_inner.v0_0_40_stats_msg_rpcs_by_type_inner(
                        message_type = '', 
                        type_id = 56, 
                        count = 56, 
                        average_time = 56, 
                        total_time = 56, )
                    ],
                rpcs_by_user = [
                    aind_slurm_rest_v2.models.v0_0_40_stats_msg_rpcs_by_user_inner.v0_0_40_stats_msg_rpcs_by_user_inner(
                        user = '', 
                        user_id = 56, 
                        count = 56, 
                        average_time = 56, 
                        total_time = 56, )
                    ]
            )
        else:
            return V0040StatsMsg(
        )
        """

    def testV0040StatsMsg(self):
        """Test V0040StatsMsg"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
