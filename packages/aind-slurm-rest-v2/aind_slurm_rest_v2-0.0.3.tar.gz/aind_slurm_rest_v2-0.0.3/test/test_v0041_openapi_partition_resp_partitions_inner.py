# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.4&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest_v2.models.v0041_openapi_partition_resp_partitions_inner import V0041OpenapiPartitionRespPartitionsInner

class TestV0041OpenapiPartitionRespPartitionsInner(unittest.TestCase):
    """V0041OpenapiPartitionRespPartitionsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiPartitionRespPartitionsInner:
        """Test V0041OpenapiPartitionRespPartitionsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0041OpenapiPartitionRespPartitionsInner`
        """
        model = V0041OpenapiPartitionRespPartitionsInner()
        if include_optional:
            return V0041OpenapiPartitionRespPartitionsInner(
                nodes = aind_slurm_rest_v2.models.v0_0_40_partition_info_nodes.v0_0_40_partition_info_nodes(
                    allowed_allocation = '', 
                    configured = '', 
                    total = 56, ),
                accounts = aind_slurm_rest_v2.models.v0_0_40_partition_info_accounts.v0_0_40_partition_info_accounts(
                    allowed = '', 
                    deny = '', ),
                groups = aind_slurm_rest_v2.models.v0_0_40_partition_info_groups.v0_0_40_partition_info_groups(
                    allowed = '', ),
                qos = aind_slurm_rest_v2.models.v0_0_40_partition_info_qos.v0_0_40_partition_info_qos(
                    allowed = '', 
                    deny = '', 
                    assigned = '', ),
                alternate = '',
                tres = aind_slurm_rest_v2.models.v0_0_40_partition_info_tres.v0_0_40_partition_info_tres(
                    billing_weights = '', 
                    configured = '', ),
                cluster = '',
                select_type = [
                    'CPU'
                    ],
                cpus = aind_slurm_rest_v2.models.v0_0_40_partition_info_cpus.v0_0_40_partition_info_cpus(
                    task_binding = 56, 
                    total = 56, ),
                defaults = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_defaults.v0_0_41_openapi_partition_resp_partitions_inner_defaults(
                    memory_per_cpu = 56, 
                    partition_memory_per_cpu = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_cpu.v0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_cpu(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    partition_memory_per_node = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_node.v0_0_41_openapi_partition_resp_partitions_inner_defaults_partition_memory_per_node(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    time = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_defaults_time.v0_0_41_openapi_partition_resp_partitions_inner_defaults_time(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    job = '', ),
                grace_time = 56,
                maximums = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_maximums.v0_0_41_openapi_partition_resp_partitions_inner_maximums(
                    cpus_per_node = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_maximums_cpus_per_node.v0_0_41_openapi_partition_resp_partitions_inner_maximums_cpus_per_node(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    cpus_per_socket = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_maximums_cpus_per_socket.v0_0_41_openapi_partition_resp_partitions_inner_maximums_cpus_per_socket(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    memory_per_cpu = 56, 
                    partition_memory_per_cpu = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_maximums_partition_memory_per_cpu.v0_0_41_openapi_partition_resp_partitions_inner_maximums_partition_memory_per_cpu(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    partition_memory_per_node = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_maximums_partition_memory_per_node.v0_0_41_openapi_partition_resp_partitions_inner_maximums_partition_memory_per_node(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    nodes = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_maximums_nodes.v0_0_41_openapi_partition_resp_partitions_inner_maximums_nodes(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    shares = 56, 
                    oversubscribe = aind_slurm_rest_v2.models.v0_0_40_partition_info_maximums_oversubscribe.v0_0_40_partition_info_maximums_oversubscribe(
                        jobs = 56, 
                        flags = [
                            'force'
                            ], ), 
                    time = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_maximums_time.v0_0_41_openapi_partition_resp_partitions_inner_maximums_time(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    over_time_limit = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_maximums_over_time_limit.v0_0_41_openapi_partition_resp_partitions_inner_maximums_over_time_limit(
                        set = True, 
                        infinite = True, 
                        number = 56, ), ),
                minimums = aind_slurm_rest_v2.models.v0_0_40_partition_info_minimums.v0_0_40_partition_info_minimums(
                    nodes = 56, ),
                name = '',
                node_sets = '',
                priority = aind_slurm_rest_v2.models.v0_0_40_partition_info_priority.v0_0_40_partition_info_priority(
                    job_factor = 56, 
                    tier = 56, ),
                timeouts = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_timeouts.v0_0_41_openapi_partition_resp_partitions_inner_timeouts(
                    resume = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_timeouts_resume.v0_0_41_openapi_partition_resp_partitions_inner_timeouts_resume(
                        set = True, 
                        infinite = True, 
                        number = 56, ), 
                    suspend = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_timeouts_suspend.v0_0_41_openapi_partition_resp_partitions_inner_timeouts_suspend(
                        set = True, 
                        infinite = True, 
                        number = 56, ), ),
                partition = aind_slurm_rest_v2.models.v0_0_40_partition_info_partition.v0_0_40_partition_info_partition(
                    state = [
                        'INACTIVE'
                        ], ),
                suspend_time = aind_slurm_rest_v2.models.v0_0_41_openapi_partition_resp_partitions_inner_suspend_time.v0_0_41_openapi_partition_resp_partitions_inner_suspend_time(
                    set = True, 
                    infinite = True, 
                    number = 56, )
            )
        else:
            return V0041OpenapiPartitionRespPartitionsInner(
        )
        """

    def testV0041OpenapiPartitionRespPartitionsInner(self):
        """Test V0041OpenapiPartitionRespPartitionsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
