# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.4&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest_v2.models.slurm_v0041_post_job_submit_request_jobs_inner_rlimits import SlurmV0041PostJobSubmitRequestJobsInnerRlimits

class TestSlurmV0041PostJobSubmitRequestJobsInnerRlimits(unittest.TestCase):
    """SlurmV0041PostJobSubmitRequestJobsInnerRlimits unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SlurmV0041PostJobSubmitRequestJobsInnerRlimits:
        """Test SlurmV0041PostJobSubmitRequestJobsInnerRlimits
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SlurmV0041PostJobSubmitRequestJobsInnerRlimits`
        """
        model = SlurmV0041PostJobSubmitRequestJobsInnerRlimits()
        if include_optional:
            return SlurmV0041PostJobSubmitRequestJobsInnerRlimits(
                cpu = aind_slurm_rest_v2.models.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_cpu.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_cpu(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                fsize = aind_slurm_rest_v2.models.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_fsize.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_fsize(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                data = aind_slurm_rest_v2.models.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_data.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_data(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                stack = aind_slurm_rest_v2.models.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_stack.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_stack(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                core = aind_slurm_rest_v2.models.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_core.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_core(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                rss = aind_slurm_rest_v2.models.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_rss.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_rss(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                nproc = aind_slurm_rest_v2.models.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_nproc.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_nproc(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                nofile = aind_slurm_rest_v2.models.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_nofile.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_nofile(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                memlock = aind_slurm_rest_v2.models.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_memlock.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_memlock(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                var_as = aind_slurm_rest_v2.models.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_as.slurm_v0041_post_job_submit_request_jobs_inner_rlimits_as(
                    set = True, 
                    infinite = True, 
                    number = 56, )
            )
        else:
            return SlurmV0041PostJobSubmitRequestJobsInnerRlimits(
        )
        """

    def testSlurmV0041PostJobSubmitRequestJobsInnerRlimits(self):
        """Test SlurmV0041PostJobSubmitRequestJobsInnerRlimits"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
