# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.4&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest_v2.models.v0041_openapi_slurmdbd_config_resp_clusters_inner import V0041OpenapiSlurmdbdConfigRespClustersInner

class TestV0041OpenapiSlurmdbdConfigRespClustersInner(unittest.TestCase):
    """V0041OpenapiSlurmdbdConfigRespClustersInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiSlurmdbdConfigRespClustersInner:
        """Test V0041OpenapiSlurmdbdConfigRespClustersInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0041OpenapiSlurmdbdConfigRespClustersInner`
        """
        model = V0041OpenapiSlurmdbdConfigRespClustersInner()
        if include_optional:
            return V0041OpenapiSlurmdbdConfigRespClustersInner(
                controller = aind_slurm_rest_v2.models.v0_0_40_cluster_rec_controller.v0_0_40_cluster_rec_controller(
                    host = '', 
                    port = 56, ),
                flags = [
                    'REGISTERING'
                    ],
                name = '',
                nodes = '',
                select_plugin = '',
                associations = aind_slurm_rest_v2.models.v0_0_41_openapi_slurmdbd_config_resp_clusters_inner_associations.v0_0_41_openapi_slurmdbd_config_resp_clusters_inner_associations(
                    root = aind_slurm_rest_v2.models.v0_0_41_openapi_slurmdbd_config_resp_clusters_inner_associations_root.v0_0_41_openapi_slurmdbd_config_resp_clusters_inner_associations_root(
                        account = '', 
                        cluster = '', 
                        partition = '', 
                        user = '', 
                        id = 56, ), ),
                rpc_version = 56,
                tres = [
                    aind_slurm_rest_v2.models.slurmdb_v0041_post_users_association_request_association_condition_association_grptres_inner.slurmdb_v0041_post_users_association_request_association_condition_association_grptres_inner(
                        type = '', 
                        name = '', 
                        id = 56, 
                        count = 56, )
                    ]
            )
        else:
            return V0041OpenapiSlurmdbdConfigRespClustersInner(
        )
        """

    def testV0041OpenapiSlurmdbdConfigRespClustersInner(self):
        """Test V0041OpenapiSlurmdbdConfigRespClustersInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
