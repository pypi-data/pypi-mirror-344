# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.4&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest_v2.models.v0041_openapi_slurmdbd_config_resp_users_inner import V0041OpenapiSlurmdbdConfigRespUsersInner

class TestV0041OpenapiSlurmdbdConfigRespUsersInner(unittest.TestCase):
    """V0041OpenapiSlurmdbdConfigRespUsersInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiSlurmdbdConfigRespUsersInner:
        """Test V0041OpenapiSlurmdbdConfigRespUsersInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0041OpenapiSlurmdbdConfigRespUsersInner`
        """
        model = V0041OpenapiSlurmdbdConfigRespUsersInner()
        if include_optional:
            return V0041OpenapiSlurmdbdConfigRespUsersInner(
                administrator_level = [
                    'Not Set'
                    ],
                associations = [
                    aind_slurm_rest_v2.models.v0_0_41_openapi_slurmdbd_config_resp_accounts_inner_associations_inner.v0_0_41_openapi_slurmdbd_config_resp_accounts_inner_associations_inner(
                        account = '', 
                        cluster = '', 
                        partition = '', 
                        user = '', 
                        id = 56, )
                    ],
                coordinators = [
                    aind_slurm_rest_v2.models.v0_0_41_openapi_slurmdbd_config_resp_accounts_inner_coordinators_inner.v0_0_41_openapi_slurmdbd_config_resp_accounts_inner_coordinators_inner(
                        name = '', 
                        direct = True, )
                    ],
                default = aind_slurm_rest_v2.models.v0_0_40_user_default.v0_0_40_user_default(
                    account = '', 
                    wckey = '', ),
                flags = [
                    'NONE'
                    ],
                name = '',
                old_name = '',
                wckeys = [
                    aind_slurm_rest_v2.models.v0_0_41_openapi_slurmdbd_config_resp_users_inner_wckeys_inner.v0_0_41_openapi_slurmdbd_config_resp_users_inner_wckeys_inner(
                        accounting = [
                            aind_slurm_rest_v2.models.v0_0_41_openapi_slurmdbd_config_resp_users_inner_wckeys_inner_accounting_inner.v0_0_41_openapi_slurmdbd_config_resp_users_inner_wckeys_inner_accounting_inner(
                                allocated = aind_slurm_rest_v2.models.v0_0_40_accounting_allocated.v0_0_40_accounting_allocated(
                                    seconds = 56, ), 
                                id = 56, 
                                start = 56, 
                                tres = aind_slurm_rest_v2.models.v0_0_41_openapi_slurmdbd_config_resp_users_inner_wckeys_inner_accounting_inner_tres.v0_0_41_openapi_slurmdbd_config_resp_users_inner_wckeys_inner_accounting_inner_TRES(
                                    type = '', 
                                    name = '', 
                                    id = 56, 
                                    count = 56, ), )
                            ], 
                        cluster = '', 
                        id = 56, 
                        name = '', 
                        user = '', 
                        flags = [
                            'DELETED'
                            ], )
                    ]
            )
        else:
            return V0041OpenapiSlurmdbdConfigRespUsersInner(
                name = '',
        )
        """

    def testV0041OpenapiSlurmdbdConfigRespUsersInner(self):
        """Test V0041OpenapiSlurmdbdConfigRespUsersInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
