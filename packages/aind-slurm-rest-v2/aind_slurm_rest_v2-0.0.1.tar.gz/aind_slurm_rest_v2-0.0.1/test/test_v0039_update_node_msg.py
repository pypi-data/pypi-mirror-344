# coding: utf-8

"""
    Slurm REST API

    API to access and control Slurm

    The version of the OpenAPI document: Slurm-24.05.4&openapi/dbv0.0.39&openapi/slurmctld&openapi/slurmdbd&openapi/v0.0.39
    Contact: sales@schedmd.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from aind_slurm_rest_v2.models.v0039_update_node_msg import V0039UpdateNodeMsg

class TestV0039UpdateNodeMsg(unittest.TestCase):
    """V0039UpdateNodeMsg unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0039UpdateNodeMsg:
        """Test V0039UpdateNodeMsg
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V0039UpdateNodeMsg`
        """
        model = V0039UpdateNodeMsg()
        if include_optional:
            return V0039UpdateNodeMsg(
                comment = '',
                cpu_bind = 56,
                extra = '',
                features = [
                    ''
                    ],
                features_act = [
                    ''
                    ],
                gres = '',
                address = [
                    ''
                    ],
                hostname = [
                    ''
                    ],
                name = [
                    ''
                    ],
                state = [
                    'INVALID'
                    ],
                reason = '',
                reason_uid = '',
                resume_after = aind_slurm_rest_v2.models.v0/0/39_uint32_no_val.v0.0.39_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, ),
                weight = aind_slurm_rest_v2.models.v0/0/39_uint32_no_val.v0.0.39_uint32_no_val(
                    set = True, 
                    infinite = True, 
                    number = 56, )
            )
        else:
            return V0039UpdateNodeMsg(
        )
        """

    def testV0039UpdateNodeMsg(self):
        """Test V0039UpdateNodeMsg"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
