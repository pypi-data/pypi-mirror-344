name: Release

on:
    workflow_dispatch:
    push:
        branches:
            - master
            - dev

jobs:
    release:
        runs-on: ubuntu-latest
        environment:
            name: release
        permissions:
            id-token: write
            contents: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "lts/*"

            - name: Install dependencies
              run: npm install

            - name: Install uv
              uses: astral-sh/setup-uv@v6
              with:
                  enable-cache: true
                  cache-dependency-glob: "**/pyproject.toml"

            - name: Determine the next release version
              uses: cycjimmy/semantic-release-action@v4
              with:
                  dry_run: true
                  extra_plugins: |
                      @semantic-release/git
                      @semantic-release/exec
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Check if new version exists
              if: env.NEXT_RELEASE_VERSION == ''
              run: echo "No new release version determined by semantic-release. Skipping release steps."

            - name: Set version
              if: env.NEXT_RELEASE_VERSION != ''
              run: uv version ${{env.NEXT_RELEASE_VERSION}}

            - name: Install the project
              if: env.NEXT_RELEASE_VERSION != ''
              run: uv sync

            - name: Build the project
              if: env.NEXT_RELEASE_VERSION != ''
              run: uv build

            - name: Release
              if: env.NEXT_RELEASE_VERSION != ''
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: npm exec semantic-release

            - name: Publish to PyPI
              if: env.NEXT_RELEASE_VERSION != ''
              run: uv publish --trusted-publishing always
