[build-system]
requires = [
  "setuptools>=42",
  'setuptools<72.2; implementation_name == "pypy"', # https://github.com/pypa/distutils/issues/283
  "setuptools-scm",
  "pybind11>2.10",
]
build-backend = "setuptools.build_meta"

[project]
name = "visible_residues"
authors = [
  {name = "Kale Kundert", email = "kale@thekunderts.net"},
]
description = "Find residues with sidechains in a specific region"
readme = 'README.md'
dynamic = ["version"]
requires-python = "~=3.10"
classifiers = [
  'Programming Language :: Python :: 3.10',
]
dependencies = [
  'numpy',
  'polars',
  'macromol_dataframe',
]

[project.optional-dependencies]
test = [
  'pytest',
  'parametrize_from_file',
]
doc = [
  'sphinx',
  'sphinx_rtd_theme',
  'myst_parser',
  'autoclasstoc',
]

[project.urls]
'Documentation' = 'https://visible-residues.readthedocs.io/en/latest/'
'Version Control' = 'https://github.com/kalekundert/visible_residues'
'Bug Tracker' = 'https://github.com/kalekundert/visible_residues/issues'
'Continuous Integration' = 'https://github.com/kalekundert/visible_residues/actions'
'Test Coverage' = 'https://app.codecov.io/github/kalekundert/visible_residues'

[tool.setuptools]
packages = ["visible_residues"]
package-dir = {"visible_residues" = "src"}

[tool.setuptools.dynamic]
version = {attr = "visible_residues.__version__"}

[tool.cibuildwheel]
test-extras = ["test"]
test-command = "pytest {package}/tests"
# Only run the tests if a polars wheel is available:
test-skip = [
  "pp*",
  "*-win32",
  "*-win_arm64",
  "*-musllinux*",
  "*-*linux_{i686,ppc64le,s390x}",
]

[tool.ruff.lint]
select = ["F"]
ignore = ["F405", "F403"]
exclude = ["src/vendored/*"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "--doctest-modules --doctest-glob='*.rst'"
doctest_optionflags = 'NORMALIZE_WHITESPACE'
norecursedirs = ['src', 'tests/resources', 'docs']

[tool.coverage.run]
branch = true
parallel = true
source = ['visible_residues']

[tool.coverage.paths]
source = [
    'src/',
    '/Users/runner/work/visible_residues/visible_residues/src',
    'D:\a\visible_residues\visible_residues\src',
]

[tool.coverage.report]
exclude_lines = [
    "^\\s*raise AssertionError\\b",
    "^\\s*raise NotImplementedError\\b",
]

[tool.semantic_release]
version_variables = ['src/__init__.py:__version__']
major_on_zero = false
