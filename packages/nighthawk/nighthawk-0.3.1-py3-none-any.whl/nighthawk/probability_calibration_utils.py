"""
Utility functions concerning probability calibrations.

The `load_calibrations` function of this file loads sigmoid probability
calibrations (one for each Nighthawk taxon) from a CSV file. The CSV file
is generated by Nighthawk model development code (from outside of this
repository) after it creates the calibrations using scikit-learn. See
https://scikit-learn.org/stable/modules/calibration.html#sigmoid and
the scikit-learn class `_SigmoidCalibration` for more.
"""


import numpy as np


def load_calibrations(csv_file_path):

    with open(csv_file_path, encoding='utf-8') as file:
        contents = file.read()

    lines = contents.strip().split('\n')[1:]
    triples = [line.split(',') for line in lines]

    return {
        taxon: _SigmoidProbabilityCalibration(float(a), float(b))
        for taxon, a, b in triples
    }


class _SigmoidProbabilityCalibration:

    """
    Sigmoid probability calibration.
     
    This class implements sigmoid probability calibration as in scikit-learn:
    see https://scikit-learn.org/stable/modules/calibration.html#sigmoid.
    """

    def __init__(self, a, b):
        self._a = a
        self._b = b

    def predict(self, x):
        return 1 / (1 + np.exp(self._a * x + self._b))