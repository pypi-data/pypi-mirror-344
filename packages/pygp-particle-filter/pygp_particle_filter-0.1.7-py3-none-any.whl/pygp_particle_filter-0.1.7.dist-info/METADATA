Metadata-Version: 2.4
Name: pygp_particle_filter
Version: 0.1.7
Summary: Particle Filter implementation for 2D lidar using Gaussian Processes
Author-email: Miquel Massot <miquel.massot@gmail.com>, Blair Thornton <b.thornton@soton.ac.uk>
License: GPL-3.0-only
Keywords: Particle Filter,Particle,GP,Lidar,Gaussian Processes,SLAM,Localisation,Robotics
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Education
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: <3.12,>=3.8
Description-Content-Type: text/markdown
Requires-Dist: numpy>=1.24.4
Requires-Dist: scikit-learn>=1.3.2
Requires-Dist: matplotlib>=3.7.4

# pygp_particle_filter

Particle-path SLAM implementation that uses Gaussian Process Regression to determine particle weights based on the consistency between current and past lidar scans. You can install it from:

>pip install pygp-particle-filter

or alternatively clone the git repository at `https://github.com/miquelmassot/pygp_particle_filter`, and install the packages with the following command from its root directory. 

>pip install -e .

The example jupyter notebook illustrates basic usage. 


The approach is explained in the University of Southampton `FEEG6043: Intelligent Mobile Robotics` module notes and associated tutorials.
