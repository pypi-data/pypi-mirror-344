[project]
authors = [{ name = "Kamil Monicz", email = "kamil@monicz.dev" }]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Zero-Clause BSD (0BSD)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Programming Language :: Rust",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
dependencies = []
description = "yarn.lock file parser"
dynamic = ["version"]
keywords = ["lock", "parser", "yarn", "yarn2dict", "yarnlock"]
license = "0BSD"
name = "yarnlock"
readme = "README.md"
requires-python = ">=3.9"

[project.urls]
Issues     = "https://github.com/Zaczero/yarnlock/issues"
Repository = "https://github.com/Zaczero/yarnlock"

[build-system]
build-backend = "maturin"
requires      = ["maturin>=1.7,<2.0"]

[tool.maturin]
features      = ["pyo3/extension-module"]
module-name   = "yarnlock._lib"
python-source = "python"

[tool.uv]
dev-dependencies = ["pytest"]

[tool.ruff]
indent-width   = 4
line-length    = 88
target-version = "py39"

[tool.ruff.lint]
# custom + https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
ignore = [
  "B017",   # assert-raises-exception
  "COM812", # missing-trailing-comma
  "COM819", # prohibited-trailing-comma
  "D206",   # indent-with-spaces
  "D300",   # triple-single-quotes
  "E111",   # indentation-with-invalid-multiple
  "E114",   # indentation-with-invalid-multiple-comment
  "E117",   # over-indented
  "E501",   # line-too-long
  "ISC001", # single-line-implicit-string-concatenation
  "ISC002", # multi-line-implicit-string-concatenation
  "PT011",  # pytest-raises-too-broad
  "PYI021", # docstring-in-stub
  "Q000",   # bad-quotes-inline-string
  "Q001",   # bad-quotes-multiline-string
  "Q002",   # bad-quotes-docstring
  "Q003",   # avoidable-escaped-quote
  "S101",   # assert
  "TRY003", # raise-vanilla-args
  "W191",   # tab-indentation
]
# see https://docs.astral.sh/ruff/rules/ for rules documentation
select = [
  "A",     # flake8-builtins
  "ARG",   # flake8-unused-arguments
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "E4",    # pycodestyle
  "E7",
  "E9",
  "F",     # pyflakes
  "FA",    # flake8-future-annotations
  "FLY",   # flynt  # "FURB", # refurb
  "G",     # flake8-logging-format
  "I",     # isort
  "ICN",   # flake8-import-conventions
  "INT",   # flake8-gettext
  "ISC",   # flake8-implicit-str-concat
  "LOG",   # flake8-logging
  "N",     # pep8-naming
  "NPY",   # numpy
  "PERF",  # perflint
  "PIE",   # flake8-pie
  "PT",    # flake8-pytest-style
  "PTH",   # flake8-use-pathlib
  "PYI",   # flake8-pyi
  "Q",     # flake8-quotes
  "RSE",   # flake8-raise
  "RUF",   # ruff
  "S",     # flake8-bandit
  "SIM",   # flake8-simplify
  "SLF",   # flake8-self
  "SLOT",  # flake8-slots
  "T10",   # flake8-debugger
  "TID",   # flake8-tidy-imports
  "TRY",   # tryceratops
  "UP",    # pyupgrade
  "W6",
  "YTT",   # flake8-2020
]

fixable   = ["ALL"]
unfixable = []

[tool.ruff.format]
indent-style              = "space"
line-ending               = "lf"
quote-style               = "single"
skip-magic-trailing-comma = false

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["input"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes    = "single"
multiline-quotes = "double"

[tool.ruff.lint.pylint]
max-args = 10

[tool.pyright]
include        = ["python/yarnlock", "tests"]
pythonPlatform = "All"
pythonVersion  = "3.9"
strict         = ["python/yarnlock"]

[tool.pytest.ini_options]
addopts    = "--quiet"
minversion = "6.0"
testpaths  = ["tests"]
