import{_ as r,l as s,I as t,d as e,K as a}from"./mermaid-cNbePY8J.js";import{p as i}from"./radar-MK3ICKWK-jd-RVPdM.js";import"./index-DNum250l.js";import"./transform-DjHZbYKP.js";import"./timer-DFzT7np-.js";import"./step-5BjdtTEt.js";import"./_baseEach-EBItHLxE.js";import"./_baseUniq-B2DI-FKg.js";import"./min-DbqHZ_l1.js";import"./_baseMap-wW6t1IVI.js";import"./clone-BXsGTObc.js";var o={parse:r((async r=>{const t=await i("info",r);s.debug(t)}),"parse")},n={version:a.version},p={parser:o,db:{getVersion:r((()=>n.version),"getVersion")},renderer:{draw:r(((r,a,i)=>{s.debug("rendering info diagram\n"+r);const o=t(a);e(o,100,400,!0);o.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)}),"draw")}};export{p as diagram};
