name: Build and Publish Python Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version to publish'
        required: true
        type: string

jobs:
  test-multiple-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update package version and Python requirement
        run: |
          # Ensure Python requirement is set to >=3.8
          sed -i 's/requires-python = ">=3.12"/requires-python = ">=3.8"/' pyproject.toml
          # Update package version
          sed -i "s/version = \"[0-9]*\.[0-9]*\.[0-9]*\"/version = \"${{ github.event.inputs.version }}\"/" pyproject.toml
          echo "Updated pyproject.toml:"
          cat pyproject.toml | grep -E "version|requires-python"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build pytest
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Test build with Python ${{ matrix.python-version }}
        run: |
          python -m build
          echo "Successfully built package with Python ${{ matrix.python-version }}"
          ls -la dist/

  publish:
    needs: test-multiple-python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Update package version and Python requirement
        run: |
          # Ensure Python requirement is set to >=3.8
          sed -i 's/requires-python = ">=3.12"/requires-python = ">=3.8"/' pyproject.toml
          # Update package version
          sed -i "s/version = \"[0-9]*\.[0-9]*\.[0-9]*\"/version = \"${{ github.event.inputs.version }}\"/" pyproject.toml
          echo "Updated pyproject.toml for publishing:"
          cat pyproject.toml | grep -E "version|requires-python"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package for publishing
        run: |
          python -m build
          echo "Build directory contents:"
          ls -la dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true